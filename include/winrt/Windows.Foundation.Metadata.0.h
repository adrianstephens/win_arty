#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Foundation { namespace Metadata {
struct WebHostHiddenAttribute;
struct AllowForWebAttribute;
struct VariantAttribute;
struct HasVariantAttribute;
struct DualApiPartitionAttribute;
struct MuseAttribute;
enum class GCPressureAmount : int {
	Low = 0,
	Medium = 1,
	High = 2,
};
struct GCPressureAttribute;
struct MetadataMarshalAttribute;
struct IApiInformationStatics;
struct ApiInformation;
enum class Platform : int {
	Windows = 0,
	WindowsPhone = 1,
};
struct ActivatableAttribute;
struct VersionAttribute;
struct ContractVersionAttribute;
struct AllowMultipleAttribute;
enum class AttributeTargets : unsigned {
	All = 0xFFFFFFFF,
	Delegate = 0x1,
	Enum = 0x2,
	Event = 0x4,
	Field = 0x8,
	Interface = 0x10,
	Method = 0x40,
	Parameter = 0x80,
	Property = 0x100,
	RuntimeClass = 0x200,
	Struct = 0x400,
	InterfaceImpl = 0x800,
	ApiContract = 0x2000,
};
struct AttributeUsageAttribute;
struct DefaultOverloadAttribute;
struct DefaultAttribute;
struct GuidAttribute;
enum class FeatureStage : int {
	AlwaysDisabled = 0,
	DisabledByDefault = 1,
	EnabledByDefault = 2,
	AlwaysEnabled = 3,
};
struct FeatureAttribute;
struct ExperimentalAttribute;
enum class CompositionType : int {
	Protected = 1,
	Public = 2,
};
struct ComposableAttribute;
struct OverloadAttribute;
struct ApiContractAttribute;
struct PreviousContractVersionAttribute;
struct StaticAttribute;
struct OverridableAttribute;
struct ProtectedAttribute;
enum class ThreadingModel : int {
	STA = 1,
	MTA = 2,
	Both = 3,
	InvalidThreading = 0,
};
struct ThreadingAttribute;
enum class MarshalingType : int {
	None = 1,
	Agile = 2,
	Standard = 3,
	InvalidMarshaling = 0,
};
struct MarshalingBehaviorAttribute;
enum class DeprecationType : int {
	Deprecate = 0,
	Remove = 1,
};
struct DeprecatedAttribute;
struct PlatformAttribute;
struct ExclusiveToAttribute;
struct LengthIsAttribute;
struct RangeAttribute;
struct RemoteAsyncAttribute;
struct InternalAttribute;
struct CreateFromStringAttribute;
}}}
} // namespace iso_winrt
