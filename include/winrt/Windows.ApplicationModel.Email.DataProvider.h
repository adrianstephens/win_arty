#pragma once
// generated by isopod tools
// namespaces:
// Windows.ApplicationModel.Email.DataProvider

#include "Windows.ApplicationModel.Email.DataProvider.0.h"
#include "Windows.ApplicationModel.Email.0.h"
#include "Windows.Foundation.0.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Foundation { namespace Collections {
template<typename T> struct IIterable;
template<typename T> struct IVectorView;
}}
namespace Security { namespace Cryptography { namespace Certificates {
struct Certificate;
}}}}

// defs

template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderTriggerDetails> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderConnection> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailDataProviderConnection> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderConnection> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailDataProviderTriggerDetails> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderTriggerDetails> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxSyncManagerSyncRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadMessageRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxDownloadAttachmentRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxCreateFolderRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxDeleteFolderRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxEmptyFolderRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxMoveFolderRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxUpdateMeetingResponseRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxForwardMeetingRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxProposeNewTimeForMeetingRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxSetAutoReplySettingsRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxGetAutoReplySettingsRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxResolveRecipientsRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxValidateCertificatesRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequest> {};
template<> struct def<Windows::ApplicationModel::Email::DataProvider::EmailMailboxServerSearchReadBatchRequest> : class_type<Platform::Object, Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequest> {};

// uuids

template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderTriggerDetails> { define_guid(0x8F3E4E50, 0x341E, 0x45F3, 0xBB, 0xA0, 0x84, 0xA0, 0x5, 0xE1, 0x31, 0x9A);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderConnection> { define_guid(0x3B9C9DC7, 0x37B2, 0x4BF0, 0xAE, 0x30, 0x7B, 0x64, 0x4A, 0x1C, 0x96, 0xE1);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequestEventArgs> { define_guid(0x439A031A, 0x8FCC, 0x4AE5, 0xB9, 0xB5, 0xD4, 0x34, 0xE0, 0xA6, 0x5A, 0xA8);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequestEventArgs> { define_guid(0x470409AD, 0xD0A0, 0x4A5B, 0xBB, 0x2A, 0x37, 0x62, 0x10, 0x39, 0xC5, 0x3E);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequestEventArgs> { define_guid(0xCCDDC46D, 0xFFA8, 0x4877, 0x9F, 0x9D, 0xFE, 0xD7, 0xBC, 0xAF, 0x41, 0x4);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequestEventArgs> { define_guid(0x3E4C02C, 0x241C, 0x4EA9, 0xA6, 0x8F, 0xFF, 0x20, 0xBC, 0x5A, 0xFC, 0x85);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequestEventArgs> { define_guid(0xB4D32D06, 0x2332, 0x4678, 0x83, 0x78, 0x28, 0xB5, 0x79, 0x33, 0x68, 0x46);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequestEventArgs> { define_guid(0x7183F484, 0x985A, 0x4AC0, 0xB3, 0x3F, 0xEE, 0xE, 0x26, 0x27, 0xA3, 0xC0);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequestEventArgs> { define_guid(0x38623020, 0x14BA, 0x4C88, 0x86, 0x98, 0x72, 0x39, 0xE3, 0xC8, 0xAA, 0xA7);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequestEventArgs> { define_guid(0x6898D761, 0x56C9, 0x4F17, 0xBE, 0x31, 0x66, 0xFD, 0xA9, 0x4B, 0xA1, 0x59);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequestEventArgs> { define_guid(0x2BD8F33A, 0x2974, 0x4759, 0xA5, 0xA5, 0x58, 0xF4, 0x4D, 0x3C, 0x2, 0x75);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequestEventArgs> { define_guid(0xFB480B98, 0x33AD, 0x4A67, 0x82, 0x51, 0xF, 0x9C, 0x24, 0x9B, 0x6A, 0x20);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequestEventArgs> { define_guid(0x9DA11AD, 0xD7CA, 0x4087, 0xAC, 0x86, 0x53, 0xFA, 0x67, 0xF7, 0x62, 0x46);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequestEventArgs> { define_guid(0xD79F55C2, 0xFD45, 0x4004, 0x8A, 0x91, 0x9B, 0xAC, 0xF3, 0x8B, 0x70, 0x22);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequestEventArgs> { define_guid(0x260F9E02, 0xB2CF, 0x40F8, 0x8C, 0x28, 0xE3, 0xED, 0x43, 0xB1, 0xE8, 0x9A);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequestEventArgs> { define_guid(0x2583BF17, 0x2FF, 0x49FE, 0xA7, 0x3C, 0x3, 0xF3, 0x75, 0x66, 0xC6, 0x91);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequestEventArgs> { define_guid(0x14101B4E, 0xED9E, 0x45D1, 0xAD, 0x7A, 0xCC, 0x9B, 0x7F, 0x64, 0x3A, 0xE2);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequest> { define_guid(0x4E10E8E4, 0x7E67, 0x405A, 0xB6, 0x73, 0xDC, 0x60, 0xC9, 0x10, 0x90, 0xFC);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequest> { define_guid(0x497B4187, 0x5B4D, 0x4B23, 0x81, 0x6C, 0xF3, 0x84, 0x2B, 0xEB, 0x75, 0x3E);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequest> { define_guid(0xB1DBBB4, 0x750C, 0x48E1, 0xBC, 0xE4, 0x8D, 0x58, 0x96, 0x84, 0xFF, 0xBC);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequest> { define_guid(0x184D3775, 0xC921, 0x4C39, 0xA3, 0x9, 0xE1, 0x6C, 0x9F, 0x22, 0xB0, 0x4B);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequest> { define_guid(0x9469E88A, 0xA931, 0x4779, 0x92, 0x3D, 0x9, 0xA3, 0xEA, 0x29, 0x2E, 0x29);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequest> { define_guid(0xFE4B03AB, 0xF86D, 0x46D9, 0xB4, 0xCE, 0xBC, 0x8A, 0x6D, 0x9E, 0x92, 0x68);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequest> { define_guid(0x10BA2856, 0x4A95, 0x4068, 0x91, 0xCC, 0x67, 0xCC, 0x7A, 0xCF, 0x45, 0x4F);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequest> { define_guid(0x5B99AC93, 0xB2CF, 0x4888, 0xBA, 0x4F, 0x30, 0x6B, 0x6B, 0x66, 0xDF, 0x30);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequest> { define_guid(0x616D6AF1, 0x70D4, 0x4832, 0xB8, 0x69, 0xB8, 0x5, 0x42, 0xAE, 0x9B, 0xE8);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequest> { define_guid(0x5AEFF152, 0x9799, 0x4F9F, 0xA3, 0x99, 0xFF, 0x7, 0xF3, 0xEE, 0xF0, 0x4E);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequest> { define_guid(0x75A422D0, 0xA88E, 0x4E54, 0x8D, 0xC7, 0xC2, 0x43, 0x18, 0x6B, 0x77, 0x4E);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequest> { define_guid(0x9B380789, 0x1E88, 0x4E01, 0x84, 0xCC, 0x13, 0x86, 0xAD, 0x9A, 0x2C, 0x2F);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequest> { define_guid(0xEFA4CF70, 0x7B39, 0x4C9B, 0x81, 0x1E, 0x41, 0xEA, 0xF4, 0x3A, 0x33, 0x2D);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequest> { define_guid(0xA94D3931, 0xE11A, 0x4F97, 0xB8, 0x1A, 0x18, 0x7A, 0x70, 0xA8, 0xF4, 0x1A);};
template<> struct uuid<Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequest> { define_guid(0x90EEBDF, 0x5A96, 0x41D3, 0x8A, 0xD8, 0x34, 0x91, 0x2F, 0x9A, 0xA6, 0xE);};

// types

namespace Windows { namespace ApplicationModel { namespace Email { namespace DataProvider {

// IEmailDataProviderTriggerDetails
struct IEmailDataProviderTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Connection(EmailDataProviderConnection* *value);
};
template<typename X> struct IEmailDataProviderTriggerDetails_adaptor : X {
	union {
		struct : property {
			ptr<EmailDataProviderConnection> get() { EmailDataProviderConnection* value; hrcheck(enc(&IEmailDataProviderTriggerDetails_adaptor::Connection)->_get_Connection(&value)); return from_abi(value); }
			ptr<EmailDataProviderConnection> operator()() { return get(); }
			operator ptr<EmailDataProviderConnection> () { return get(); }
			ptr<EmailDataProviderConnection> operator->() { return get(); }
		} Connection;
	};
	IEmailDataProviderTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IEmailDataProviderTriggerDetails, X> : Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderTriggerDetails_adaptor<X> { typedef adapt IEmailDataProviderTriggerDetails; };
struct IEmailDataProviderTriggerDetails : IEmailDataProviderTriggerDetails_raw, generate<IEmailDataProviderTriggerDetails> {};

// IEmailDataProviderConnection
struct IEmailDataProviderConnection_raw : IInspectable {
	virtual STDMETHODIMP _add_MailboxSyncRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxSyncManagerSyncRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_MailboxSyncRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_DownloadMessageRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxDownloadMessageRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_DownloadMessageRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_DownloadAttachmentRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxDownloadAttachmentRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_DownloadAttachmentRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_CreateFolderRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxCreateFolderRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_CreateFolderRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_DeleteFolderRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxDeleteFolderRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_DeleteFolderRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_EmptyFolderRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxEmptyFolderRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_EmptyFolderRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_MoveFolderRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxMoveFolderRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_MoveFolderRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_UpdateMeetingResponseRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxUpdateMeetingResponseRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_UpdateMeetingResponseRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_ForwardMeetingRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxForwardMeetingRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ForwardMeetingRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_ProposeNewTimeForMeetingRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxProposeNewTimeForMeetingRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ProposeNewTimeForMeetingRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_SetAutoReplySettingsRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxSetAutoReplySettingsRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_SetAutoReplySettingsRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_GetAutoReplySettingsRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxGetAutoReplySettingsRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_GetAutoReplySettingsRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_ResolveRecipientsRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxResolveRecipientsRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ResolveRecipientsRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_ValidateCertificatesRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxValidateCertificatesRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ValidateCertificatesRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_ServerSearchReadBatchRequested(Foundation::TypedEventHandler<EmailDataProviderConnection*, EmailMailboxServerSearchReadBatchRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ServerSearchReadBatchRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _Start();
};
template<typename X> struct IEmailDataProviderConnection_adaptor : X {
	union {
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxCreateFolderRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::CreateFolderRequested)->_add_CreateFolderRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::CreateFolderRequested)->_remove_CreateFolderRequested(token)); }
		} CreateFolderRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxDeleteFolderRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::DeleteFolderRequested)->_add_DeleteFolderRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::DeleteFolderRequested)->_remove_DeleteFolderRequested(token)); }
		} DeleteFolderRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxDownloadAttachmentRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::DownloadAttachmentRequested)->_add_DownloadAttachmentRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::DownloadAttachmentRequested)->_remove_DownloadAttachmentRequested(token)); }
		} DownloadAttachmentRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxDownloadMessageRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::DownloadMessageRequested)->_add_DownloadMessageRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::DownloadMessageRequested)->_remove_DownloadMessageRequested(token)); }
		} DownloadMessageRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxEmptyFolderRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::EmptyFolderRequested)->_add_EmptyFolderRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::EmptyFolderRequested)->_remove_EmptyFolderRequested(token)); }
		} EmptyFolderRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxForwardMeetingRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::ForwardMeetingRequested)->_add_ForwardMeetingRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::ForwardMeetingRequested)->_remove_ForwardMeetingRequested(token)); }
		} ForwardMeetingRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxGetAutoReplySettingsRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::GetAutoReplySettingsRequested)->_add_GetAutoReplySettingsRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::GetAutoReplySettingsRequested)->_remove_GetAutoReplySettingsRequested(token)); }
		} GetAutoReplySettingsRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxSyncManagerSyncRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::MailboxSyncRequested)->_add_MailboxSyncRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::MailboxSyncRequested)->_remove_MailboxSyncRequested(token)); }
		} MailboxSyncRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxMoveFolderRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::MoveFolderRequested)->_add_MoveFolderRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::MoveFolderRequested)->_remove_MoveFolderRequested(token)); }
		} MoveFolderRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxProposeNewTimeForMeetingRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::ProposeNewTimeForMeetingRequested)->_add_ProposeNewTimeForMeetingRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::ProposeNewTimeForMeetingRequested)->_remove_ProposeNewTimeForMeetingRequested(token)); }
		} ProposeNewTimeForMeetingRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxResolveRecipientsRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::ResolveRecipientsRequested)->_add_ResolveRecipientsRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::ResolveRecipientsRequested)->_remove_ResolveRecipientsRequested(token)); }
		} ResolveRecipientsRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxServerSearchReadBatchRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::ServerSearchReadBatchRequested)->_add_ServerSearchReadBatchRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::ServerSearchReadBatchRequested)->_remove_ServerSearchReadBatchRequested(token)); }
		} ServerSearchReadBatchRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxSetAutoReplySettingsRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::SetAutoReplySettingsRequested)->_add_SetAutoReplySettingsRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::SetAutoReplySettingsRequested)->_remove_SetAutoReplySettingsRequested(token)); }
		} SetAutoReplySettingsRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxUpdateMeetingResponseRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::UpdateMeetingResponseRequested)->_add_UpdateMeetingResponseRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::UpdateMeetingResponseRequested)->_remove_UpdateMeetingResponseRequested(token)); }
		} UpdateMeetingResponseRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<EmailDataProviderConnection>, ptr<EmailMailboxValidateCertificatesRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IEmailDataProviderConnection_adaptor::ValidateCertificatesRequested)->_add_ValidateCertificatesRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IEmailDataProviderConnection_adaptor::ValidateCertificatesRequested)->_remove_ValidateCertificatesRequested(token)); }
		} ValidateCertificatesRequested;
	};
	void Start() { hrcheck(X::get()->_Start()); }
	IEmailDataProviderConnection_adaptor() {}
};
template<typename X> struct adapt<IEmailDataProviderConnection, X> : Windows::ApplicationModel::Email::DataProvider::IEmailDataProviderConnection_adaptor<X> { typedef adapt IEmailDataProviderConnection; };
struct IEmailDataProviderConnection : IEmailDataProviderConnection_raw, generate<IEmailDataProviderConnection> {};

// EmailDataProviderConnection
template<typename X> struct statics<EmailDataProviderConnection, X> : X {
	typedef typename X::root_type EmailDataProviderConnection;
};
struct EmailDataProviderConnection : generate<EmailDataProviderConnection> {};

// IEmailMailboxSyncManagerSyncRequestEventArgs
struct IEmailMailboxSyncManagerSyncRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxSyncManagerSyncRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxSyncManagerSyncRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxSyncManagerSyncRequest> get() { EmailMailboxSyncManagerSyncRequest* value; hrcheck(enc(&IEmailMailboxSyncManagerSyncRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxSyncManagerSyncRequest> operator()() { return get(); }
			operator ptr<EmailMailboxSyncManagerSyncRequest> () { return get(); }
			ptr<EmailMailboxSyncManagerSyncRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxSyncManagerSyncRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxSyncManagerSyncRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxSyncManagerSyncRequestEventArgs; };
struct IEmailMailboxSyncManagerSyncRequestEventArgs : IEmailMailboxSyncManagerSyncRequestEventArgs_raw, generate<IEmailMailboxSyncManagerSyncRequestEventArgs> {};

// EmailMailboxSyncManagerSyncRequestEventArgs
template<typename X> struct statics<EmailMailboxSyncManagerSyncRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxSyncManagerSyncRequestEventArgs;
};
struct EmailMailboxSyncManagerSyncRequestEventArgs : generate<EmailMailboxSyncManagerSyncRequestEventArgs> {};

// IEmailMailboxDownloadMessageRequestEventArgs
struct IEmailMailboxDownloadMessageRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxDownloadMessageRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxDownloadMessageRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxDownloadMessageRequest> get() { EmailMailboxDownloadMessageRequest* value; hrcheck(enc(&IEmailMailboxDownloadMessageRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxDownloadMessageRequest> operator()() { return get(); }
			operator ptr<EmailMailboxDownloadMessageRequest> () { return get(); }
			ptr<EmailMailboxDownloadMessageRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxDownloadMessageRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxDownloadMessageRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxDownloadMessageRequestEventArgs; };
struct IEmailMailboxDownloadMessageRequestEventArgs : IEmailMailboxDownloadMessageRequestEventArgs_raw, generate<IEmailMailboxDownloadMessageRequestEventArgs> {};

// EmailMailboxDownloadMessageRequestEventArgs
template<typename X> struct statics<EmailMailboxDownloadMessageRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxDownloadMessageRequestEventArgs;
};
struct EmailMailboxDownloadMessageRequestEventArgs : generate<EmailMailboxDownloadMessageRequestEventArgs> {};

// IEmailMailboxDownloadAttachmentRequestEventArgs
struct IEmailMailboxDownloadAttachmentRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxDownloadAttachmentRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxDownloadAttachmentRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxDownloadAttachmentRequest> get() { EmailMailboxDownloadAttachmentRequest* value; hrcheck(enc(&IEmailMailboxDownloadAttachmentRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxDownloadAttachmentRequest> operator()() { return get(); }
			operator ptr<EmailMailboxDownloadAttachmentRequest> () { return get(); }
			ptr<EmailMailboxDownloadAttachmentRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxDownloadAttachmentRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxDownloadAttachmentRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxDownloadAttachmentRequestEventArgs; };
struct IEmailMailboxDownloadAttachmentRequestEventArgs : IEmailMailboxDownloadAttachmentRequestEventArgs_raw, generate<IEmailMailboxDownloadAttachmentRequestEventArgs> {};

// EmailMailboxDownloadAttachmentRequestEventArgs
template<typename X> struct statics<EmailMailboxDownloadAttachmentRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxDownloadAttachmentRequestEventArgs;
};
struct EmailMailboxDownloadAttachmentRequestEventArgs : generate<EmailMailboxDownloadAttachmentRequestEventArgs> {};

// IEmailMailboxCreateFolderRequestEventArgs
struct IEmailMailboxCreateFolderRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxCreateFolderRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxCreateFolderRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxCreateFolderRequest> get() { EmailMailboxCreateFolderRequest* value; hrcheck(enc(&IEmailMailboxCreateFolderRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxCreateFolderRequest> operator()() { return get(); }
			operator ptr<EmailMailboxCreateFolderRequest> () { return get(); }
			ptr<EmailMailboxCreateFolderRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxCreateFolderRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxCreateFolderRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxCreateFolderRequestEventArgs; };
struct IEmailMailboxCreateFolderRequestEventArgs : IEmailMailboxCreateFolderRequestEventArgs_raw, generate<IEmailMailboxCreateFolderRequestEventArgs> {};

// EmailMailboxCreateFolderRequestEventArgs
template<typename X> struct statics<EmailMailboxCreateFolderRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxCreateFolderRequestEventArgs;
};
struct EmailMailboxCreateFolderRequestEventArgs : generate<EmailMailboxCreateFolderRequestEventArgs> {};

// IEmailMailboxDeleteFolderRequestEventArgs
struct IEmailMailboxDeleteFolderRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxDeleteFolderRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxDeleteFolderRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxDeleteFolderRequest> get() { EmailMailboxDeleteFolderRequest* value; hrcheck(enc(&IEmailMailboxDeleteFolderRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxDeleteFolderRequest> operator()() { return get(); }
			operator ptr<EmailMailboxDeleteFolderRequest> () { return get(); }
			ptr<EmailMailboxDeleteFolderRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxDeleteFolderRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxDeleteFolderRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxDeleteFolderRequestEventArgs; };
struct IEmailMailboxDeleteFolderRequestEventArgs : IEmailMailboxDeleteFolderRequestEventArgs_raw, generate<IEmailMailboxDeleteFolderRequestEventArgs> {};

// EmailMailboxDeleteFolderRequestEventArgs
template<typename X> struct statics<EmailMailboxDeleteFolderRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxDeleteFolderRequestEventArgs;
};
struct EmailMailboxDeleteFolderRequestEventArgs : generate<EmailMailboxDeleteFolderRequestEventArgs> {};

// IEmailMailboxEmptyFolderRequestEventArgs
struct IEmailMailboxEmptyFolderRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxEmptyFolderRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxEmptyFolderRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxEmptyFolderRequest> get() { EmailMailboxEmptyFolderRequest* value; hrcheck(enc(&IEmailMailboxEmptyFolderRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxEmptyFolderRequest> operator()() { return get(); }
			operator ptr<EmailMailboxEmptyFolderRequest> () { return get(); }
			ptr<EmailMailboxEmptyFolderRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxEmptyFolderRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxEmptyFolderRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxEmptyFolderRequestEventArgs; };
struct IEmailMailboxEmptyFolderRequestEventArgs : IEmailMailboxEmptyFolderRequestEventArgs_raw, generate<IEmailMailboxEmptyFolderRequestEventArgs> {};

// EmailMailboxEmptyFolderRequestEventArgs
template<typename X> struct statics<EmailMailboxEmptyFolderRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxEmptyFolderRequestEventArgs;
};
struct EmailMailboxEmptyFolderRequestEventArgs : generate<EmailMailboxEmptyFolderRequestEventArgs> {};

// IEmailMailboxMoveFolderRequestEventArgs
struct IEmailMailboxMoveFolderRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxMoveFolderRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxMoveFolderRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxMoveFolderRequest> get() { EmailMailboxMoveFolderRequest* value; hrcheck(enc(&IEmailMailboxMoveFolderRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxMoveFolderRequest> operator()() { return get(); }
			operator ptr<EmailMailboxMoveFolderRequest> () { return get(); }
			ptr<EmailMailboxMoveFolderRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxMoveFolderRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxMoveFolderRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxMoveFolderRequestEventArgs; };
struct IEmailMailboxMoveFolderRequestEventArgs : IEmailMailboxMoveFolderRequestEventArgs_raw, generate<IEmailMailboxMoveFolderRequestEventArgs> {};

// EmailMailboxMoveFolderRequestEventArgs
template<typename X> struct statics<EmailMailboxMoveFolderRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxMoveFolderRequestEventArgs;
};
struct EmailMailboxMoveFolderRequestEventArgs : generate<EmailMailboxMoveFolderRequestEventArgs> {};

// IEmailMailboxUpdateMeetingResponseRequestEventArgs
struct IEmailMailboxUpdateMeetingResponseRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxUpdateMeetingResponseRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxUpdateMeetingResponseRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxUpdateMeetingResponseRequest> get() { EmailMailboxUpdateMeetingResponseRequest* value; hrcheck(enc(&IEmailMailboxUpdateMeetingResponseRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxUpdateMeetingResponseRequest> operator()() { return get(); }
			operator ptr<EmailMailboxUpdateMeetingResponseRequest> () { return get(); }
			ptr<EmailMailboxUpdateMeetingResponseRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxUpdateMeetingResponseRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxUpdateMeetingResponseRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxUpdateMeetingResponseRequestEventArgs; };
struct IEmailMailboxUpdateMeetingResponseRequestEventArgs : IEmailMailboxUpdateMeetingResponseRequestEventArgs_raw, generate<IEmailMailboxUpdateMeetingResponseRequestEventArgs> {};

// EmailMailboxUpdateMeetingResponseRequestEventArgs
template<typename X> struct statics<EmailMailboxUpdateMeetingResponseRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxUpdateMeetingResponseRequestEventArgs;
};
struct EmailMailboxUpdateMeetingResponseRequestEventArgs : generate<EmailMailboxUpdateMeetingResponseRequestEventArgs> {};

// IEmailMailboxForwardMeetingRequestEventArgs
struct IEmailMailboxForwardMeetingRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxForwardMeetingRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxForwardMeetingRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxForwardMeetingRequest> get() { EmailMailboxForwardMeetingRequest* value; hrcheck(enc(&IEmailMailboxForwardMeetingRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxForwardMeetingRequest> operator()() { return get(); }
			operator ptr<EmailMailboxForwardMeetingRequest> () { return get(); }
			ptr<EmailMailboxForwardMeetingRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxForwardMeetingRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxForwardMeetingRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxForwardMeetingRequestEventArgs; };
struct IEmailMailboxForwardMeetingRequestEventArgs : IEmailMailboxForwardMeetingRequestEventArgs_raw, generate<IEmailMailboxForwardMeetingRequestEventArgs> {};

// EmailMailboxForwardMeetingRequestEventArgs
template<typename X> struct statics<EmailMailboxForwardMeetingRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxForwardMeetingRequestEventArgs;
};
struct EmailMailboxForwardMeetingRequestEventArgs : generate<EmailMailboxForwardMeetingRequestEventArgs> {};

// IEmailMailboxProposeNewTimeForMeetingRequestEventArgs
struct IEmailMailboxProposeNewTimeForMeetingRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxProposeNewTimeForMeetingRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxProposeNewTimeForMeetingRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxProposeNewTimeForMeetingRequest> get() { EmailMailboxProposeNewTimeForMeetingRequest* value; hrcheck(enc(&IEmailMailboxProposeNewTimeForMeetingRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxProposeNewTimeForMeetingRequest> operator()() { return get(); }
			operator ptr<EmailMailboxProposeNewTimeForMeetingRequest> () { return get(); }
			ptr<EmailMailboxProposeNewTimeForMeetingRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxProposeNewTimeForMeetingRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxProposeNewTimeForMeetingRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxProposeNewTimeForMeetingRequestEventArgs; };
struct IEmailMailboxProposeNewTimeForMeetingRequestEventArgs : IEmailMailboxProposeNewTimeForMeetingRequestEventArgs_raw, generate<IEmailMailboxProposeNewTimeForMeetingRequestEventArgs> {};

// EmailMailboxProposeNewTimeForMeetingRequestEventArgs
template<typename X> struct statics<EmailMailboxProposeNewTimeForMeetingRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxProposeNewTimeForMeetingRequestEventArgs;
};
struct EmailMailboxProposeNewTimeForMeetingRequestEventArgs : generate<EmailMailboxProposeNewTimeForMeetingRequestEventArgs> {};

// IEmailMailboxSetAutoReplySettingsRequestEventArgs
struct IEmailMailboxSetAutoReplySettingsRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxSetAutoReplySettingsRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxSetAutoReplySettingsRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxSetAutoReplySettingsRequest> get() { EmailMailboxSetAutoReplySettingsRequest* value; hrcheck(enc(&IEmailMailboxSetAutoReplySettingsRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxSetAutoReplySettingsRequest> operator()() { return get(); }
			operator ptr<EmailMailboxSetAutoReplySettingsRequest> () { return get(); }
			ptr<EmailMailboxSetAutoReplySettingsRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxSetAutoReplySettingsRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxSetAutoReplySettingsRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxSetAutoReplySettingsRequestEventArgs; };
struct IEmailMailboxSetAutoReplySettingsRequestEventArgs : IEmailMailboxSetAutoReplySettingsRequestEventArgs_raw, generate<IEmailMailboxSetAutoReplySettingsRequestEventArgs> {};

// EmailMailboxSetAutoReplySettingsRequestEventArgs
template<typename X> struct statics<EmailMailboxSetAutoReplySettingsRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxSetAutoReplySettingsRequestEventArgs;
};
struct EmailMailboxSetAutoReplySettingsRequestEventArgs : generate<EmailMailboxSetAutoReplySettingsRequestEventArgs> {};

// IEmailMailboxGetAutoReplySettingsRequestEventArgs
struct IEmailMailboxGetAutoReplySettingsRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxGetAutoReplySettingsRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxGetAutoReplySettingsRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxGetAutoReplySettingsRequest> get() { EmailMailboxGetAutoReplySettingsRequest* value; hrcheck(enc(&IEmailMailboxGetAutoReplySettingsRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxGetAutoReplySettingsRequest> operator()() { return get(); }
			operator ptr<EmailMailboxGetAutoReplySettingsRequest> () { return get(); }
			ptr<EmailMailboxGetAutoReplySettingsRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxGetAutoReplySettingsRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxGetAutoReplySettingsRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxGetAutoReplySettingsRequestEventArgs; };
struct IEmailMailboxGetAutoReplySettingsRequestEventArgs : IEmailMailboxGetAutoReplySettingsRequestEventArgs_raw, generate<IEmailMailboxGetAutoReplySettingsRequestEventArgs> {};

// EmailMailboxGetAutoReplySettingsRequestEventArgs
template<typename X> struct statics<EmailMailboxGetAutoReplySettingsRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxGetAutoReplySettingsRequestEventArgs;
};
struct EmailMailboxGetAutoReplySettingsRequestEventArgs : generate<EmailMailboxGetAutoReplySettingsRequestEventArgs> {};

// IEmailMailboxResolveRecipientsRequestEventArgs
struct IEmailMailboxResolveRecipientsRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxResolveRecipientsRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxResolveRecipientsRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxResolveRecipientsRequest> get() { EmailMailboxResolveRecipientsRequest* value; hrcheck(enc(&IEmailMailboxResolveRecipientsRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxResolveRecipientsRequest> operator()() { return get(); }
			operator ptr<EmailMailboxResolveRecipientsRequest> () { return get(); }
			ptr<EmailMailboxResolveRecipientsRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxResolveRecipientsRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxResolveRecipientsRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxResolveRecipientsRequestEventArgs; };
struct IEmailMailboxResolveRecipientsRequestEventArgs : IEmailMailboxResolveRecipientsRequestEventArgs_raw, generate<IEmailMailboxResolveRecipientsRequestEventArgs> {};

// EmailMailboxResolveRecipientsRequestEventArgs
template<typename X> struct statics<EmailMailboxResolveRecipientsRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxResolveRecipientsRequestEventArgs;
};
struct EmailMailboxResolveRecipientsRequestEventArgs : generate<EmailMailboxResolveRecipientsRequestEventArgs> {};

// IEmailMailboxValidateCertificatesRequestEventArgs
struct IEmailMailboxValidateCertificatesRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxValidateCertificatesRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxValidateCertificatesRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxValidateCertificatesRequest> get() { EmailMailboxValidateCertificatesRequest* value; hrcheck(enc(&IEmailMailboxValidateCertificatesRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxValidateCertificatesRequest> operator()() { return get(); }
			operator ptr<EmailMailboxValidateCertificatesRequest> () { return get(); }
			ptr<EmailMailboxValidateCertificatesRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxValidateCertificatesRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxValidateCertificatesRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxValidateCertificatesRequestEventArgs; };
struct IEmailMailboxValidateCertificatesRequestEventArgs : IEmailMailboxValidateCertificatesRequestEventArgs_raw, generate<IEmailMailboxValidateCertificatesRequestEventArgs> {};

// EmailMailboxValidateCertificatesRequestEventArgs
template<typename X> struct statics<EmailMailboxValidateCertificatesRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxValidateCertificatesRequestEventArgs;
};
struct EmailMailboxValidateCertificatesRequestEventArgs : generate<EmailMailboxValidateCertificatesRequestEventArgs> {};

// IEmailMailboxServerSearchReadBatchRequestEventArgs
struct IEmailMailboxServerSearchReadBatchRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(EmailMailboxServerSearchReadBatchRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IEmailMailboxServerSearchReadBatchRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxServerSearchReadBatchRequest> get() { EmailMailboxServerSearchReadBatchRequest* value; hrcheck(enc(&IEmailMailboxServerSearchReadBatchRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<EmailMailboxServerSearchReadBatchRequest> operator()() { return get(); }
			operator ptr<EmailMailboxServerSearchReadBatchRequest> () { return get(); }
			ptr<EmailMailboxServerSearchReadBatchRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IEmailMailboxServerSearchReadBatchRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxServerSearchReadBatchRequestEventArgs, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequestEventArgs_adaptor<X> { typedef adapt IEmailMailboxServerSearchReadBatchRequestEventArgs; };
struct IEmailMailboxServerSearchReadBatchRequestEventArgs : IEmailMailboxServerSearchReadBatchRequestEventArgs_raw, generate<IEmailMailboxServerSearchReadBatchRequestEventArgs> {};

// EmailMailboxServerSearchReadBatchRequestEventArgs
template<typename X> struct statics<EmailMailboxServerSearchReadBatchRequestEventArgs, X> : X {
	typedef typename X::root_type EmailMailboxServerSearchReadBatchRequestEventArgs;
};
struct EmailMailboxServerSearchReadBatchRequestEventArgs : generate<EmailMailboxServerSearchReadBatchRequestEventArgs> {};

// IEmailMailboxSyncManagerSyncRequest
struct IEmailMailboxSyncManagerSyncRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxSyncManagerSyncRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxSyncManagerSyncRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxSyncManagerSyncRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxSyncManagerSyncRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSyncManagerSyncRequest_adaptor<X> { typedef adapt IEmailMailboxSyncManagerSyncRequest; };
struct IEmailMailboxSyncManagerSyncRequest : IEmailMailboxSyncManagerSyncRequest_raw, generate<IEmailMailboxSyncManagerSyncRequest> {};

// IEmailMailboxDownloadMessageRequest
struct IEmailMailboxDownloadMessageRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailMessageId(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxDownloadMessageRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxDownloadMessageRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxDownloadMessageRequest_adaptor::EmailMessageId)->_get_EmailMessageId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMessageId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxDownloadMessageRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxDownloadMessageRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadMessageRequest_adaptor<X> { typedef adapt IEmailMailboxDownloadMessageRequest; };
struct IEmailMailboxDownloadMessageRequest : IEmailMailboxDownloadMessageRequest_raw, generate<IEmailMailboxDownloadMessageRequest> {};

// IEmailMailboxDownloadAttachmentRequest
struct IEmailMailboxDownloadAttachmentRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailMessageId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailAttachmentId(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxDownloadAttachmentRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxDownloadAttachmentRequest_adaptor::EmailAttachmentId)->_get_EmailAttachmentId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailAttachmentId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxDownloadAttachmentRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxDownloadAttachmentRequest_adaptor::EmailMessageId)->_get_EmailMessageId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMessageId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxDownloadAttachmentRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxDownloadAttachmentRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDownloadAttachmentRequest_adaptor<X> { typedef adapt IEmailMailboxDownloadAttachmentRequest; };
struct IEmailMailboxDownloadAttachmentRequest : IEmailMailboxDownloadAttachmentRequest_raw, generate<IEmailMailboxDownloadAttachmentRequest> {};

// IEmailMailboxCreateFolderRequest
struct IEmailMailboxCreateFolderRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_ParentFolderId(HSTRING *value);
	virtual STDMETHODIMP _get_Name(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(EmailFolder* folder, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(EmailMailboxCreateFolderStatus status, Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxCreateFolderRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxCreateFolderRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxCreateFolderRequest_adaptor::Name)->_get_Name(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Name;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxCreateFolderRequest_adaptor::ParentFolderId)->_get_ParentFolderId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ParentFolderId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync(pptr<EmailFolder> folder) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(folder, &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync(EmailMailboxCreateFolderStatus status) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(status, &result)); return from_abi(result); }
	IEmailMailboxCreateFolderRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxCreateFolderRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxCreateFolderRequest_adaptor<X> { typedef adapt IEmailMailboxCreateFolderRequest; };
struct IEmailMailboxCreateFolderRequest : IEmailMailboxCreateFolderRequest_raw, generate<IEmailMailboxCreateFolderRequest> {};

// IEmailMailboxDeleteFolderRequest
struct IEmailMailboxDeleteFolderRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailFolderId(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(EmailMailboxDeleteFolderStatus status, Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxDeleteFolderRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxDeleteFolderRequest_adaptor::EmailFolderId)->_get_EmailFolderId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailFolderId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxDeleteFolderRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync(EmailMailboxDeleteFolderStatus status) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(status, &result)); return from_abi(result); }
	IEmailMailboxDeleteFolderRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxDeleteFolderRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxDeleteFolderRequest_adaptor<X> { typedef adapt IEmailMailboxDeleteFolderRequest; };
struct IEmailMailboxDeleteFolderRequest : IEmailMailboxDeleteFolderRequest_raw, generate<IEmailMailboxDeleteFolderRequest> {};

// IEmailMailboxEmptyFolderRequest
struct IEmailMailboxEmptyFolderRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailFolderId(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(EmailMailboxEmptyFolderStatus status, Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxEmptyFolderRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxEmptyFolderRequest_adaptor::EmailFolderId)->_get_EmailFolderId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailFolderId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxEmptyFolderRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync(EmailMailboxEmptyFolderStatus status) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(status, &result)); return from_abi(result); }
	IEmailMailboxEmptyFolderRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxEmptyFolderRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxEmptyFolderRequest_adaptor<X> { typedef adapt IEmailMailboxEmptyFolderRequest; };
struct IEmailMailboxEmptyFolderRequest : IEmailMailboxEmptyFolderRequest_raw, generate<IEmailMailboxEmptyFolderRequest> {};

// IEmailMailboxMoveFolderRequest
struct IEmailMailboxMoveFolderRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailFolderId(HSTRING *value);
	virtual STDMETHODIMP _get_NewParentFolderId(HSTRING *value);
	virtual STDMETHODIMP _get_NewFolderName(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxMoveFolderRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxMoveFolderRequest_adaptor::EmailFolderId)->_get_EmailFolderId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailFolderId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxMoveFolderRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxMoveFolderRequest_adaptor::NewFolderName)->_get_NewFolderName(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} NewFolderName;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxMoveFolderRequest_adaptor::NewParentFolderId)->_get_NewParentFolderId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} NewParentFolderId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxMoveFolderRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxMoveFolderRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxMoveFolderRequest_adaptor<X> { typedef adapt IEmailMailboxMoveFolderRequest; };
struct IEmailMailboxMoveFolderRequest : IEmailMailboxMoveFolderRequest_raw, generate<IEmailMailboxMoveFolderRequest> {};

// IEmailMailboxUpdateMeetingResponseRequest
struct IEmailMailboxUpdateMeetingResponseRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailMessageId(HSTRING *value);
	virtual STDMETHODIMP _get_Response(EmailMeetingResponseType *response);
	virtual STDMETHODIMP _get_Subject(HSTRING *value);
	virtual STDMETHODIMP _get_Comment(HSTRING *value);
	virtual STDMETHODIMP _get_SendUpdate(bool *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxUpdateMeetingResponseRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxUpdateMeetingResponseRequest_adaptor::Comment)->_get_Comment(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Comment;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxUpdateMeetingResponseRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxUpdateMeetingResponseRequest_adaptor::EmailMessageId)->_get_EmailMessageId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMessageId;
		struct : property {
			EmailMeetingResponseType get() { EmailMeetingResponseType response; hrcheck(enc(&IEmailMailboxUpdateMeetingResponseRequest_adaptor::Response)->_get_Response(&response)); return response; }
			EmailMeetingResponseType operator()() { return get(); }
			operator EmailMeetingResponseType () { return get(); }
		} Response;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IEmailMailboxUpdateMeetingResponseRequest_adaptor::SendUpdate)->_get_SendUpdate(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
		} SendUpdate;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxUpdateMeetingResponseRequest_adaptor::Subject)->_get_Subject(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Subject;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxUpdateMeetingResponseRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxUpdateMeetingResponseRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxUpdateMeetingResponseRequest_adaptor<X> { typedef adapt IEmailMailboxUpdateMeetingResponseRequest; };
struct IEmailMailboxUpdateMeetingResponseRequest : IEmailMailboxUpdateMeetingResponseRequest_raw, generate<IEmailMailboxUpdateMeetingResponseRequest> {};

// IEmailMailboxForwardMeetingRequest
struct IEmailMailboxForwardMeetingRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailMessageId(HSTRING *value);
	virtual STDMETHODIMP _get_Recipients(Foundation::Collections::IVectorView<EmailRecipient*>* *value);
	virtual STDMETHODIMP _get_Subject(HSTRING *value);
	virtual STDMETHODIMP _get_ForwardHeaderType(EmailMessageBodyKind *value);
	virtual STDMETHODIMP _get_ForwardHeader(HSTRING *value);
	virtual STDMETHODIMP _get_Comment(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxForwardMeetingRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxForwardMeetingRequest_adaptor::Comment)->_get_Comment(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Comment;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxForwardMeetingRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxForwardMeetingRequest_adaptor::EmailMessageId)->_get_EmailMessageId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMessageId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxForwardMeetingRequest_adaptor::ForwardHeader)->_get_ForwardHeader(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ForwardHeader;
		struct : property {
			EmailMessageBodyKind get() { EmailMessageBodyKind value; hrcheck(enc(&IEmailMailboxForwardMeetingRequest_adaptor::ForwardHeaderType)->_get_ForwardHeaderType(&value)); return value; }
			EmailMessageBodyKind operator()() { return get(); }
			operator EmailMessageBodyKind () { return get(); }
		} ForwardHeaderType;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<EmailRecipient>>> get() { Foundation::Collections::IVectorView<EmailRecipient*>* value; hrcheck(enc(&IEmailMailboxForwardMeetingRequest_adaptor::Recipients)->_get_Recipients(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<EmailRecipient>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<EmailRecipient>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<EmailRecipient>>> operator->() { return get(); }
		} Recipients;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxForwardMeetingRequest_adaptor::Subject)->_get_Subject(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Subject;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxForwardMeetingRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxForwardMeetingRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxForwardMeetingRequest_adaptor<X> { typedef adapt IEmailMailboxForwardMeetingRequest; };
struct IEmailMailboxForwardMeetingRequest : IEmailMailboxForwardMeetingRequest_raw, generate<IEmailMailboxForwardMeetingRequest> {};

// IEmailMailboxProposeNewTimeForMeetingRequest
struct IEmailMailboxProposeNewTimeForMeetingRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailMessageId(HSTRING *value);
	virtual STDMETHODIMP _get_NewStartTime(Foundation::DateTime *value);
	virtual STDMETHODIMP _get_NewDuration(Foundation::TimeSpan *value);
	virtual STDMETHODIMP _get_Subject(HSTRING *value);
	virtual STDMETHODIMP _get_Comment(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxProposeNewTimeForMeetingRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxProposeNewTimeForMeetingRequest_adaptor::Comment)->_get_Comment(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Comment;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxProposeNewTimeForMeetingRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxProposeNewTimeForMeetingRequest_adaptor::EmailMessageId)->_get_EmailMessageId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMessageId;
		struct : property {
			Foundation::TimeSpan get() { Foundation::TimeSpan value; hrcheck(enc(&IEmailMailboxProposeNewTimeForMeetingRequest_adaptor::NewDuration)->_get_NewDuration(&value)); return value; }
			Foundation::TimeSpan operator()() { return get(); }
			operator Foundation::TimeSpan () { return get(); }
		} NewDuration;
		struct : property {
			Foundation::DateTime get() { Foundation::DateTime value; hrcheck(enc(&IEmailMailboxProposeNewTimeForMeetingRequest_adaptor::NewStartTime)->_get_NewStartTime(&value)); return value; }
			Foundation::DateTime operator()() { return get(); }
			operator Foundation::DateTime () { return get(); }
		} NewStartTime;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxProposeNewTimeForMeetingRequest_adaptor::Subject)->_get_Subject(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Subject;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxProposeNewTimeForMeetingRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxProposeNewTimeForMeetingRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxProposeNewTimeForMeetingRequest_adaptor<X> { typedef adapt IEmailMailboxProposeNewTimeForMeetingRequest; };
struct IEmailMailboxProposeNewTimeForMeetingRequest : IEmailMailboxProposeNewTimeForMeetingRequest_raw, generate<IEmailMailboxProposeNewTimeForMeetingRequest> {};

// IEmailMailboxSetAutoReplySettingsRequest
struct IEmailMailboxSetAutoReplySettingsRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_AutoReplySettings(EmailMailboxAutoReplySettings* *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxSetAutoReplySettingsRequest_adaptor : X {
	union {
		struct : property {
			ptr<EmailMailboxAutoReplySettings> get() { EmailMailboxAutoReplySettings* value; hrcheck(enc(&IEmailMailboxSetAutoReplySettingsRequest_adaptor::AutoReplySettings)->_get_AutoReplySettings(&value)); return from_abi(value); }
			ptr<EmailMailboxAutoReplySettings> operator()() { return get(); }
			operator ptr<EmailMailboxAutoReplySettings> () { return get(); }
			ptr<EmailMailboxAutoReplySettings> operator->() { return get(); }
		} AutoReplySettings;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxSetAutoReplySettingsRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxSetAutoReplySettingsRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxSetAutoReplySettingsRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxSetAutoReplySettingsRequest_adaptor<X> { typedef adapt IEmailMailboxSetAutoReplySettingsRequest; };
struct IEmailMailboxSetAutoReplySettingsRequest : IEmailMailboxSetAutoReplySettingsRequest_raw, generate<IEmailMailboxSetAutoReplySettingsRequest> {};

// IEmailMailboxGetAutoReplySettingsRequest
struct IEmailMailboxGetAutoReplySettingsRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_RequestedFormat(EmailMailboxAutoReplyMessageResponseKind *value);
	virtual STDMETHODIMP _ReportCompletedAsync(EmailMailboxAutoReplySettings* autoReplySettings, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxGetAutoReplySettingsRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxGetAutoReplySettingsRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			EmailMailboxAutoReplyMessageResponseKind get() { EmailMailboxAutoReplyMessageResponseKind value; hrcheck(enc(&IEmailMailboxGetAutoReplySettingsRequest_adaptor::RequestedFormat)->_get_RequestedFormat(&value)); return value; }
			EmailMailboxAutoReplyMessageResponseKind operator()() { return get(); }
			operator EmailMailboxAutoReplyMessageResponseKind () { return get(); }
		} RequestedFormat;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync(pptr<EmailMailboxAutoReplySettings> autoReplySettings) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(autoReplySettings, &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxGetAutoReplySettingsRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxGetAutoReplySettingsRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxGetAutoReplySettingsRequest_adaptor<X> { typedef adapt IEmailMailboxGetAutoReplySettingsRequest; };
struct IEmailMailboxGetAutoReplySettingsRequest : IEmailMailboxGetAutoReplySettingsRequest_raw, generate<IEmailMailboxGetAutoReplySettingsRequest> {};

// IEmailMailboxResolveRecipientsRequest
struct IEmailMailboxResolveRecipientsRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_Recipients(Foundation::Collections::IVectorView<HSTRING>* *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::Collections::IIterable<EmailRecipientResolutionResult*>* resolutionResults, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxResolveRecipientsRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxResolveRecipientsRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			ptr<Foundation::Collections::IVectorView<hstring>> get() { Foundation::Collections::IVectorView<HSTRING>* value; hrcheck(enc(&IEmailMailboxResolveRecipientsRequest_adaptor::Recipients)->_get_Recipients(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<hstring>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<hstring>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<hstring>> operator->() { return get(); }
		} Recipients;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync(pptr<Foundation::Collections::IIterable<ptr<EmailRecipientResolutionResult>>> resolutionResults) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(to_abi(resolutionResults), &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxResolveRecipientsRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxResolveRecipientsRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxResolveRecipientsRequest_adaptor<X> { typedef adapt IEmailMailboxResolveRecipientsRequest; };
struct IEmailMailboxResolveRecipientsRequest : IEmailMailboxResolveRecipientsRequest_raw, generate<IEmailMailboxResolveRecipientsRequest> {};

// IEmailMailboxValidateCertificatesRequest
struct IEmailMailboxValidateCertificatesRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_Certificates(Foundation::Collections::IVectorView<Security::Cryptography::Certificates::Certificate*>* *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::Collections::IIterable<EmailCertificateValidationStatus>* validationStatuses, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxValidateCertificatesRequest_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<Security::Cryptography::Certificates::Certificate>>> get() { Foundation::Collections::IVectorView<Security::Cryptography::Certificates::Certificate*>* value; hrcheck(enc(&IEmailMailboxValidateCertificatesRequest_adaptor::Certificates)->_get_Certificates(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<Security::Cryptography::Certificates::Certificate>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<Security::Cryptography::Certificates::Certificate>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<Security::Cryptography::Certificates::Certificate>>> operator->() { return get(); }
		} Certificates;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxValidateCertificatesRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync(pptr<Foundation::Collections::IIterable<EmailCertificateValidationStatus>> validationStatuses) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(to_abi(validationStatuses), &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IEmailMailboxValidateCertificatesRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxValidateCertificatesRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxValidateCertificatesRequest_adaptor<X> { typedef adapt IEmailMailboxValidateCertificatesRequest; };
struct IEmailMailboxValidateCertificatesRequest : IEmailMailboxValidateCertificatesRequest_raw, generate<IEmailMailboxValidateCertificatesRequest> {};

// IEmailMailboxServerSearchReadBatchRequest
struct IEmailMailboxServerSearchReadBatchRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_SessionId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailMailboxId(HSTRING *value);
	virtual STDMETHODIMP _get_EmailFolderId(HSTRING *value);
	virtual STDMETHODIMP _get_Options(EmailQueryOptions* *value);
	virtual STDMETHODIMP _get_SuggestedBatchSize(unsigned *value);
	virtual STDMETHODIMP _SaveMessageAsync(EmailMessage* message, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(EmailBatchStatus batchStatus, Foundation::IAsyncAction* *result);
};
template<typename X> struct IEmailMailboxServerSearchReadBatchRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxServerSearchReadBatchRequest_adaptor::EmailFolderId)->_get_EmailFolderId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailFolderId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxServerSearchReadBatchRequest_adaptor::EmailMailboxId)->_get_EmailMailboxId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} EmailMailboxId;
		struct : property {
			ptr<EmailQueryOptions> get() { EmailQueryOptions* value; hrcheck(enc(&IEmailMailboxServerSearchReadBatchRequest_adaptor::Options)->_get_Options(&value)); return from_abi(value); }
			ptr<EmailQueryOptions> operator()() { return get(); }
			operator ptr<EmailQueryOptions> () { return get(); }
			ptr<EmailQueryOptions> operator->() { return get(); }
		} Options;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IEmailMailboxServerSearchReadBatchRequest_adaptor::SessionId)->_get_SessionId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} SessionId;
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IEmailMailboxServerSearchReadBatchRequest_adaptor::SuggestedBatchSize)->_get_SuggestedBatchSize(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} SuggestedBatchSize;
	};
	ptr<Foundation::IAsyncAction> SaveMessageAsync(pptr<EmailMessage> message) { Foundation::IAsyncAction* result; hrcheck(X::get()->_SaveMessageAsync(message, &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync(EmailBatchStatus batchStatus) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(batchStatus, &result)); return from_abi(result); }
	IEmailMailboxServerSearchReadBatchRequest_adaptor() {}
};
template<typename X> struct adapt<IEmailMailboxServerSearchReadBatchRequest, X> : Windows::ApplicationModel::Email::DataProvider::IEmailMailboxServerSearchReadBatchRequest_adaptor<X> { typedef adapt IEmailMailboxServerSearchReadBatchRequest; };
struct IEmailMailboxServerSearchReadBatchRequest : IEmailMailboxServerSearchReadBatchRequest_raw, generate<IEmailMailboxServerSearchReadBatchRequest> {};

// EmailDataProviderTriggerDetails
template<typename X> struct statics<EmailDataProviderTriggerDetails, X> : X {
	typedef typename X::root_type EmailDataProviderTriggerDetails;
};
struct EmailDataProviderTriggerDetails : generate<EmailDataProviderTriggerDetails> {};

// EmailMailboxSyncManagerSyncRequest
template<typename X> struct statics<EmailMailboxSyncManagerSyncRequest, X> : X {
	typedef typename X::root_type EmailMailboxSyncManagerSyncRequest;
};
struct EmailMailboxSyncManagerSyncRequest : generate<EmailMailboxSyncManagerSyncRequest> {};

// EmailMailboxDownloadMessageRequest
template<typename X> struct statics<EmailMailboxDownloadMessageRequest, X> : X {
	typedef typename X::root_type EmailMailboxDownloadMessageRequest;
};
struct EmailMailboxDownloadMessageRequest : generate<EmailMailboxDownloadMessageRequest> {};

// EmailMailboxDownloadAttachmentRequest
template<typename X> struct statics<EmailMailboxDownloadAttachmentRequest, X> : X {
	typedef typename X::root_type EmailMailboxDownloadAttachmentRequest;
};
struct EmailMailboxDownloadAttachmentRequest : generate<EmailMailboxDownloadAttachmentRequest> {};

// EmailMailboxCreateFolderRequest
template<typename X> struct statics<EmailMailboxCreateFolderRequest, X> : X {
	typedef typename X::root_type EmailMailboxCreateFolderRequest;
};
struct EmailMailboxCreateFolderRequest : generate<EmailMailboxCreateFolderRequest> {};

// EmailMailboxDeleteFolderRequest
template<typename X> struct statics<EmailMailboxDeleteFolderRequest, X> : X {
	typedef typename X::root_type EmailMailboxDeleteFolderRequest;
};
struct EmailMailboxDeleteFolderRequest : generate<EmailMailboxDeleteFolderRequest> {};

// EmailMailboxEmptyFolderRequest
template<typename X> struct statics<EmailMailboxEmptyFolderRequest, X> : X {
	typedef typename X::root_type EmailMailboxEmptyFolderRequest;
};
struct EmailMailboxEmptyFolderRequest : generate<EmailMailboxEmptyFolderRequest> {};

// EmailMailboxMoveFolderRequest
template<typename X> struct statics<EmailMailboxMoveFolderRequest, X> : X {
	typedef typename X::root_type EmailMailboxMoveFolderRequest;
};
struct EmailMailboxMoveFolderRequest : generate<EmailMailboxMoveFolderRequest> {};

// EmailMailboxUpdateMeetingResponseRequest
template<typename X> struct statics<EmailMailboxUpdateMeetingResponseRequest, X> : X {
	typedef typename X::root_type EmailMailboxUpdateMeetingResponseRequest;
};
struct EmailMailboxUpdateMeetingResponseRequest : generate<EmailMailboxUpdateMeetingResponseRequest> {};

// EmailMailboxForwardMeetingRequest
template<typename X> struct statics<EmailMailboxForwardMeetingRequest, X> : X {
	typedef typename X::root_type EmailMailboxForwardMeetingRequest;
};
struct EmailMailboxForwardMeetingRequest : generate<EmailMailboxForwardMeetingRequest> {};

// EmailMailboxProposeNewTimeForMeetingRequest
template<typename X> struct statics<EmailMailboxProposeNewTimeForMeetingRequest, X> : X {
	typedef typename X::root_type EmailMailboxProposeNewTimeForMeetingRequest;
};
struct EmailMailboxProposeNewTimeForMeetingRequest : generate<EmailMailboxProposeNewTimeForMeetingRequest> {};

// EmailMailboxSetAutoReplySettingsRequest
template<typename X> struct statics<EmailMailboxSetAutoReplySettingsRequest, X> : X {
	typedef typename X::root_type EmailMailboxSetAutoReplySettingsRequest;
};
struct EmailMailboxSetAutoReplySettingsRequest : generate<EmailMailboxSetAutoReplySettingsRequest> {};

// EmailMailboxGetAutoReplySettingsRequest
template<typename X> struct statics<EmailMailboxGetAutoReplySettingsRequest, X> : X {
	typedef typename X::root_type EmailMailboxGetAutoReplySettingsRequest;
};
struct EmailMailboxGetAutoReplySettingsRequest : generate<EmailMailboxGetAutoReplySettingsRequest> {};

// EmailMailboxResolveRecipientsRequest
template<typename X> struct statics<EmailMailboxResolveRecipientsRequest, X> : X {
	typedef typename X::root_type EmailMailboxResolveRecipientsRequest;
};
struct EmailMailboxResolveRecipientsRequest : generate<EmailMailboxResolveRecipientsRequest> {};

// EmailMailboxValidateCertificatesRequest
template<typename X> struct statics<EmailMailboxValidateCertificatesRequest, X> : X {
	typedef typename X::root_type EmailMailboxValidateCertificatesRequest;
};
struct EmailMailboxValidateCertificatesRequest : generate<EmailMailboxValidateCertificatesRequest> {};

// EmailMailboxServerSearchReadBatchRequest
template<typename X> struct statics<EmailMailboxServerSearchReadBatchRequest, X> : X {
	typedef typename X::root_type EmailMailboxServerSearchReadBatchRequest;
};
struct EmailMailboxServerSearchReadBatchRequest : generate<EmailMailboxServerSearchReadBatchRequest> {};
}}}}
} // namespace iso_winrt
