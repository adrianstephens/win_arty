#pragma once
// generated by isopod tools
// namespaces:
// Windows.ApplicationModel.Calls.Provider

#include "Windows.ApplicationModel.Calls.Provider.0.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Foundation {
template<typename TResult> struct IAsyncOperation;
}
namespace Storage {
struct StorageFile;
}}

// defs

template<> struct def<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin2> : interface_type<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin> {};
template<> struct def<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin3> : interface_type<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin2> {};
template<> struct def<Windows::ApplicationModel::Calls::Provider::IPhoneCallOriginManagerStatics> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Calls::Provider::PhoneCallOrigin> : class_type<Platform::Object, Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin, Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin3> {};
template<> struct def<Windows::ApplicationModel::Calls::Provider::IPhoneCallOriginManagerStatics2> : interface_type<Windows::ApplicationModel::Calls::Provider::IPhoneCallOriginManagerStatics> {};
template<> struct def<Windows::ApplicationModel::Calls::Provider::PhoneCallOriginManager> : class_type<Platform::Object, Platform::Object> {};

// uuids

template<> struct uuid<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin> { define_guid(0x20613479, 0xEF9, 0x4454, 0x87, 0x1C, 0xAF, 0xB6, 0x6A, 0x14, 0xB6, 0xA5);};
template<> struct uuid<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin2> { define_guid(0x4C7E980, 0x9AC2, 0x4768, 0xB5, 0x36, 0xB6, 0x8D, 0xA4, 0x95, 0x7D, 0x2);};
template<> struct uuid<Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin3> { define_guid(0x49330FB4, 0xD1A7, 0x43A2, 0xAE, 0xEE, 0xC0, 0x7B, 0x6D, 0xBA, 0xF0, 0x68);};
template<> struct uuid<Windows::ApplicationModel::Calls::Provider::IPhoneCallOriginManagerStatics> { define_guid(0xCCFC5A0A, 0x9AF7, 0x6149, 0x39, 0xD0, 0xE0, 0x76, 0xFC, 0xCE, 0x13, 0x95);};
template<> struct uuid<Windows::ApplicationModel::Calls::Provider::IPhoneCallOriginManagerStatics2> { define_guid(0x8BF3EE3F, 0x40F4, 0x4380, 0x8C, 0x7C, 0xAE, 0xA2, 0xC9, 0xB8, 0xDD, 0x7A);};

// types

namespace Windows { namespace ApplicationModel { namespace Calls { namespace Provider {

// IPhoneCallOrigin
struct IPhoneCallOrigin_raw : IInspectable {
	virtual STDMETHODIMP _get_Category(HSTRING *value);
	virtual STDMETHODIMP _put_Category(HSTRING value);
	virtual STDMETHODIMP _get_CategoryDescription(HSTRING *value);
	virtual STDMETHODIMP _put_CategoryDescription(HSTRING value);
	virtual STDMETHODIMP _get_Location(HSTRING *value);
	virtual STDMETHODIMP _put_Location(HSTRING value);
};
template<typename X> struct IPhoneCallOrigin_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPhoneCallOrigin_adaptor::Category)->_get_Category(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPhoneCallOrigin_adaptor::Category)->_put_Category(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Category;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPhoneCallOrigin_adaptor::CategoryDescription)->_get_CategoryDescription(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPhoneCallOrigin_adaptor::CategoryDescription)->_put_CategoryDescription(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} CategoryDescription;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPhoneCallOrigin_adaptor::Location)->_get_Location(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPhoneCallOrigin_adaptor::Location)->_put_Location(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Location;
	};
	IPhoneCallOrigin_adaptor() {}
};
template<typename X> struct adapt<IPhoneCallOrigin, X> : Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin_adaptor<X> { typedef adapt IPhoneCallOrigin; };
struct IPhoneCallOrigin : IPhoneCallOrigin_raw, generate<IPhoneCallOrigin> {};

// IPhoneCallOrigin2
struct IPhoneCallOrigin2_raw : IInspectable {
	virtual STDMETHODIMP _get_DisplayName(HSTRING *value);
	virtual STDMETHODIMP _put_DisplayName(HSTRING value);
};
template<typename X> struct IPhoneCallOrigin2_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPhoneCallOrigin2_adaptor::DisplayName)->_get_DisplayName(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPhoneCallOrigin2_adaptor::DisplayName)->_put_DisplayName(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} DisplayName;
	};
	IPhoneCallOrigin2_adaptor() {}
};
template<typename X> struct adapt<IPhoneCallOrigin2, X> : Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin2_adaptor<X> { typedef adapt IPhoneCallOrigin2; };
struct IPhoneCallOrigin2 : IPhoneCallOrigin2_raw, generate<IPhoneCallOrigin2> {};

// IPhoneCallOrigin3
struct IPhoneCallOrigin3_raw : IInspectable {
	virtual STDMETHODIMP _get_DisplayPicture(Storage::StorageFile* *value);
	virtual STDMETHODIMP _put_DisplayPicture(Storage::StorageFile* value);
};
template<typename X> struct IPhoneCallOrigin3_adaptor : X {
	union {
		struct : property {
			ptr<Storage::StorageFile> get() { Storage::StorageFile* value; hrcheck(enc(&IPhoneCallOrigin3_adaptor::DisplayPicture)->_get_DisplayPicture(&value)); return from_abi(value); }
			ptr<Storage::StorageFile> operator()() { return get(); }
			operator ptr<Storage::StorageFile> () { return get(); }
			ptr<Storage::StorageFile> operator->() { return get(); }
			void put(pptr<Storage::StorageFile> value) { hrcheck(enc(&IPhoneCallOrigin3_adaptor::DisplayPicture)->_put_DisplayPicture(value)); }
			void operator=(pptr<Storage::StorageFile> value) { put(value); }
			void operator()(pptr<Storage::StorageFile> value) { put(value); }
		} DisplayPicture;
	};
	IPhoneCallOrigin3_adaptor() {}
};
template<typename X> struct adapt<IPhoneCallOrigin3, X> : Windows::ApplicationModel::Calls::Provider::IPhoneCallOrigin3_adaptor<X> { typedef adapt IPhoneCallOrigin3; };
struct IPhoneCallOrigin3 : IPhoneCallOrigin3_raw, generate<IPhoneCallOrigin3> {};

// IPhoneCallOriginManagerStatics
struct IPhoneCallOriginManagerStatics : IInspectable {
	virtual STDMETHODIMP _get_IsCurrentAppActiveCallOriginApp(bool *value);
	virtual STDMETHODIMP _ShowPhoneCallOriginSettingsUI();
	virtual STDMETHODIMP _SetCallOrigin(Platform::Guid requestId, PhoneCallOrigin* callOrigin);
};

// PhoneCallOrigin
template<typename X> struct statics<PhoneCallOrigin, X> : X {
	typedef typename X::root_type PhoneCallOrigin;
};
struct PhoneCallOrigin : generate<PhoneCallOrigin> {};

// IPhoneCallOriginManagerStatics2
struct IPhoneCallOriginManagerStatics2 : IInspectable {
	virtual STDMETHODIMP _RequestSetAsActiveCallOriginAppAsync(Foundation::IAsyncOperation<bool>* *result);
};

// PhoneCallOriginManager
template<typename> struct PhoneCallOriginManager_statics {
	static struct _IsCurrentAppActiveCallOriginApp : property {
		bool get() { bool value; hrcheck(get_activation_factory<PhoneCallOriginManager, IPhoneCallOriginManagerStatics>()->_get_IsCurrentAppActiveCallOriginApp(&value)); return value; }
		bool operator()() { return get(); }
		operator bool () { return get(); }
	} IsCurrentAppActiveCallOriginApp;
	static ptr<Foundation::IAsyncOperation<bool>> RequestSetAsActiveCallOriginAppAsync() { Foundation::IAsyncOperation<bool>* result; hrcheck(get_activation_factory<PhoneCallOriginManager, IPhoneCallOriginManagerStatics2>()->_RequestSetAsActiveCallOriginAppAsync(&result)); return from_abi(result); }
	static void ShowPhoneCallOriginSettingsUI() { hrcheck(get_activation_factory<PhoneCallOriginManager, IPhoneCallOriginManagerStatics>()->_ShowPhoneCallOriginSettingsUI()); }
	static void SetCallOrigin(const Platform::Guid& requestId, pptr<PhoneCallOrigin> callOrigin) { hrcheck(get_activation_factory<PhoneCallOriginManager, IPhoneCallOriginManagerStatics>()->_SetCallOrigin(requestId, callOrigin)); }
};
template<typename X> typename PhoneCallOriginManager_statics<X>::_IsCurrentAppActiveCallOriginApp PhoneCallOriginManager_statics<X>::IsCurrentAppActiveCallOriginApp;

template<typename X> struct statics<PhoneCallOriginManager, X> : X, Windows::ApplicationModel::Calls::Provider::PhoneCallOriginManager_statics<void> {
	typedef typename X::root_type PhoneCallOriginManager;
};
struct PhoneCallOriginManager : generate<PhoneCallOriginManager> {};
}}}}
} // namespace iso_winrt
