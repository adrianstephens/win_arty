#pragma once
// generated by isopod tools
// namespaces:
// Windows.Devices.PointOfService.Provider

#include "Windows.Devices.PointOfService.Provider.0.h"
#include "Windows.Foundation.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Devices { namespace PointOfService {
struct BarcodeSymbologyAttributes;
struct BarcodeScannerReport;
struct UnifiedPosErrorData;
}}
namespace Foundation { namespace Collections {
template<typename T> struct IVectorView;
template<typename T> struct IVector;
}}}

// defs

template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerTriggerState> : enum_type<int> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerEnableScannerRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerEnableScannerRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerDisableScannerRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerDisableScannerRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerSetActiveSymbologiesRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerSetActiveSymbologiesRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerStartSoftwareTriggerRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerStartSoftwareTriggerRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerStopSoftwareTriggerRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerStopSoftwareTriggerRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeSymbologyAttributesBuilder> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeSymbologyAttributesBuilder> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeSymbologyAttributesBuilder> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerGetSymbologyAttributesRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerGetSymbologyAttributesRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerSetSymbologyAttributesRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerSetSymbologyAttributesRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequest> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerHideVideoPreviewRequest> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequest> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerHideVideoPreviewRequestEventArgs> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequestEventArgs> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderConnection> : interface_type<Windows::Foundation::IClosable> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerProviderConnection> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderConnection> {};
template<> struct def<Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderTriggerDetails> : interface_type<> {};
template<> struct def<Windows::Devices::PointOfService::Provider::BarcodeScannerProviderTriggerDetails> : class_type<Platform::Object, Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderTriggerDetails> {};

// uuids

template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequest> { define_guid(0xC0B3E9BA, 0x816A, 0x452B, 0xBD, 0x77, 0xB7, 0xE4, 0x53, 0xEC, 0x44, 0x6D);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequestEventArgs> { define_guid(0x956C9419, 0x7B4E, 0x4451, 0x8C, 0x41, 0x8E, 0x10, 0xCF, 0xBC, 0x5B, 0x41);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequest> { define_guid(0x88ECF7C0, 0x37B9, 0x4275, 0x8E, 0x77, 0xC8, 0xE5, 0x2A, 0xE5, 0xA9, 0xC8);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequestEventArgs> { define_guid(0x7006E142, 0xE802, 0x46F5, 0xB6, 0x4, 0x35, 0x2A, 0x15, 0xCE, 0x92, 0x32);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequest> { define_guid(0xDB3F32B9, 0xF7DA, 0x41A1, 0x9F, 0x79, 0x7, 0xBC, 0xD9, 0x5F, 0xB, 0xDF);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequestEventArgs> { define_guid(0x6305AFA, 0x7BF6, 0x4D52, 0x80, 0x1A, 0x33, 0x2, 0x72, 0xF6, 0xA, 0xE1);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequest> { define_guid(0xE3FA7B27, 0xFF62, 0x4454, 0xAF, 0x4A, 0xCB, 0x61, 0x44, 0xA3, 0xE3, 0xF7);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequestEventArgs> { define_guid(0x2305D843, 0xC88F, 0x4F3B, 0x8C, 0x3B, 0xD3, 0xDF, 0x7, 0x10, 0x51, 0xEC);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequest> { define_guid(0x6F9FAF35, 0xE287, 0x4CA8, 0xB7, 0xD, 0x5A, 0x91, 0xD6, 0x94, 0xF6, 0x68);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequestEventArgs> { define_guid(0xEAC34450, 0x4EB7, 0x481A, 0x92, 0x73, 0x14, 0x7A, 0x27, 0x3B, 0x99, 0xB8);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeSymbologyAttributesBuilder> { define_guid(0xC57B0CBF, 0xE4F5, 0x40B9, 0x84, 0xCF, 0xE6, 0x3F, 0xBA, 0xEA, 0x42, 0xB4);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequest> { define_guid(0x9774C46A, 0x58E4, 0x4C5F, 0xB8, 0xE9, 0xE4, 0x14, 0x67, 0x63, 0x27, 0x0);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequestEventArgs> { define_guid(0x7F89DE3E, 0xFB5D, 0x493C, 0xB4, 0x2, 0x35, 0x6B, 0x24, 0xD5, 0x74, 0xA6);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequest> { define_guid(0x32FB814F, 0xA37F, 0x48B0, 0xAC, 0xEA, 0xDC, 0xE1, 0x48, 0xF, 0x12, 0xAE);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequestEventArgs> { define_guid(0xB2B89809, 0x9824, 0x47D4, 0x85, 0xBD, 0xD0, 0x7, 0x7B, 0xAA, 0x7B, 0xD2);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequest> { define_guid(0xFA4EBE7F, 0x6670, 0x40E1, 0xB9, 0xB, 0xBB, 0x10, 0xD8, 0xD4, 0x25, 0xFA);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequestEventArgs> { define_guid(0x16A281FC, 0xD6BE, 0x4BC7, 0x9D, 0xF1, 0x33, 0x74, 0x1F, 0x3E, 0xAD, 0xEA);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderConnection> { define_guid(0xB44ACBED, 0xB3A, 0x4FA3, 0x86, 0xC5, 0x49, 0x1E, 0xA3, 0x7, 0x80, 0xEB);};
template<> struct uuid<Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderTriggerDetails> { define_guid(0x50856D82, 0x24E3, 0x48CE, 0x99, 0xC7, 0x70, 0xAA, 0xC1, 0xCB, 0xC9, 0xF7);};

// types

namespace Windows { namespace Devices { namespace PointOfService { namespace Provider {

// IBarcodeScannerEnableScannerRequest
struct IBarcodeScannerEnableScannerRequest_raw : IInspectable {
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerEnableScannerRequest_adaptor : X {
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
};
template<typename X> struct adapt<IBarcodeScannerEnableScannerRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequest_adaptor<X> { typedef adapt IBarcodeScannerEnableScannerRequest; };
struct IBarcodeScannerEnableScannerRequest : IBarcodeScannerEnableScannerRequest_raw, generate<IBarcodeScannerEnableScannerRequest> {};

// BarcodeScannerEnableScannerRequest
template<typename X> struct statics<BarcodeScannerEnableScannerRequest, X> : X {
	typedef typename X::root_type BarcodeScannerEnableScannerRequest;
};
struct BarcodeScannerEnableScannerRequest : generate<BarcodeScannerEnableScannerRequest> {};

// IBarcodeScannerEnableScannerRequestEventArgs
struct IBarcodeScannerEnableScannerRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerEnableScannerRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerEnableScannerRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerEnableScannerRequest> get() { BarcodeScannerEnableScannerRequest* value; hrcheck(enc(&IBarcodeScannerEnableScannerRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerEnableScannerRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerEnableScannerRequest> () { return get(); }
			ptr<BarcodeScannerEnableScannerRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerEnableScannerRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerEnableScannerRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerEnableScannerRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerEnableScannerRequestEventArgs; };
struct IBarcodeScannerEnableScannerRequestEventArgs : IBarcodeScannerEnableScannerRequestEventArgs_raw, generate<IBarcodeScannerEnableScannerRequestEventArgs> {};

// BarcodeScannerEnableScannerRequestEventArgs
template<typename X> struct statics<BarcodeScannerEnableScannerRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerEnableScannerRequestEventArgs;
};
struct BarcodeScannerEnableScannerRequestEventArgs : generate<BarcodeScannerEnableScannerRequestEventArgs> {};

// IBarcodeScannerDisableScannerRequest
struct IBarcodeScannerDisableScannerRequest_raw : IInspectable {
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerDisableScannerRequest_adaptor : X {
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
};
template<typename X> struct adapt<IBarcodeScannerDisableScannerRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequest_adaptor<X> { typedef adapt IBarcodeScannerDisableScannerRequest; };
struct IBarcodeScannerDisableScannerRequest : IBarcodeScannerDisableScannerRequest_raw, generate<IBarcodeScannerDisableScannerRequest> {};

// BarcodeScannerDisableScannerRequest
template<typename X> struct statics<BarcodeScannerDisableScannerRequest, X> : X {
	typedef typename X::root_type BarcodeScannerDisableScannerRequest;
};
struct BarcodeScannerDisableScannerRequest : generate<BarcodeScannerDisableScannerRequest> {};

// IBarcodeScannerDisableScannerRequestEventArgs
struct IBarcodeScannerDisableScannerRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerDisableScannerRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerDisableScannerRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerDisableScannerRequest> get() { BarcodeScannerDisableScannerRequest* value; hrcheck(enc(&IBarcodeScannerDisableScannerRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerDisableScannerRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerDisableScannerRequest> () { return get(); }
			ptr<BarcodeScannerDisableScannerRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerDisableScannerRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerDisableScannerRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerDisableScannerRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerDisableScannerRequestEventArgs; };
struct IBarcodeScannerDisableScannerRequestEventArgs : IBarcodeScannerDisableScannerRequestEventArgs_raw, generate<IBarcodeScannerDisableScannerRequestEventArgs> {};

// BarcodeScannerDisableScannerRequestEventArgs
template<typename X> struct statics<BarcodeScannerDisableScannerRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerDisableScannerRequestEventArgs;
};
struct BarcodeScannerDisableScannerRequestEventArgs : generate<BarcodeScannerDisableScannerRequestEventArgs> {};

// IBarcodeScannerSetActiveSymbologiesRequest
struct IBarcodeScannerSetActiveSymbologiesRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_Symbologies(Foundation::Collections::IVectorView<unsigned>* *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerSetActiveSymbologiesRequest_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVectorView<unsigned>> get() { Foundation::Collections::IVectorView<unsigned>* value; hrcheck(enc(&IBarcodeScannerSetActiveSymbologiesRequest_adaptor::Symbologies)->_get_Symbologies(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<unsigned>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<unsigned>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<unsigned>> operator->() { return get(); }
		} Symbologies;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IBarcodeScannerSetActiveSymbologiesRequest_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerSetActiveSymbologiesRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequest_adaptor<X> { typedef adapt IBarcodeScannerSetActiveSymbologiesRequest; };
struct IBarcodeScannerSetActiveSymbologiesRequest : IBarcodeScannerSetActiveSymbologiesRequest_raw, generate<IBarcodeScannerSetActiveSymbologiesRequest> {};

// BarcodeScannerSetActiveSymbologiesRequest
template<typename X> struct statics<BarcodeScannerSetActiveSymbologiesRequest, X> : X {
	typedef typename X::root_type BarcodeScannerSetActiveSymbologiesRequest;
};
struct BarcodeScannerSetActiveSymbologiesRequest : generate<BarcodeScannerSetActiveSymbologiesRequest> {};

// IBarcodeScannerSetActiveSymbologiesRequestEventArgs
struct IBarcodeScannerSetActiveSymbologiesRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerSetActiveSymbologiesRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerSetActiveSymbologiesRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerSetActiveSymbologiesRequest> get() { BarcodeScannerSetActiveSymbologiesRequest* value; hrcheck(enc(&IBarcodeScannerSetActiveSymbologiesRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerSetActiveSymbologiesRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerSetActiveSymbologiesRequest> () { return get(); }
			ptr<BarcodeScannerSetActiveSymbologiesRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerSetActiveSymbologiesRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerSetActiveSymbologiesRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerSetActiveSymbologiesRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerSetActiveSymbologiesRequestEventArgs; };
struct IBarcodeScannerSetActiveSymbologiesRequestEventArgs : IBarcodeScannerSetActiveSymbologiesRequestEventArgs_raw, generate<IBarcodeScannerSetActiveSymbologiesRequestEventArgs> {};

// BarcodeScannerSetActiveSymbologiesRequestEventArgs
template<typename X> struct statics<BarcodeScannerSetActiveSymbologiesRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerSetActiveSymbologiesRequestEventArgs;
};
struct BarcodeScannerSetActiveSymbologiesRequestEventArgs : generate<BarcodeScannerSetActiveSymbologiesRequestEventArgs> {};

// IBarcodeScannerStartSoftwareTriggerRequest
struct IBarcodeScannerStartSoftwareTriggerRequest_raw : IInspectable {
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerStartSoftwareTriggerRequest_adaptor : X {
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
};
template<typename X> struct adapt<IBarcodeScannerStartSoftwareTriggerRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequest_adaptor<X> { typedef adapt IBarcodeScannerStartSoftwareTriggerRequest; };
struct IBarcodeScannerStartSoftwareTriggerRequest : IBarcodeScannerStartSoftwareTriggerRequest_raw, generate<IBarcodeScannerStartSoftwareTriggerRequest> {};

// BarcodeScannerStartSoftwareTriggerRequest
template<typename X> struct statics<BarcodeScannerStartSoftwareTriggerRequest, X> : X {
	typedef typename X::root_type BarcodeScannerStartSoftwareTriggerRequest;
};
struct BarcodeScannerStartSoftwareTriggerRequest : generate<BarcodeScannerStartSoftwareTriggerRequest> {};

// IBarcodeScannerStartSoftwareTriggerRequestEventArgs
struct IBarcodeScannerStartSoftwareTriggerRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerStartSoftwareTriggerRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerStartSoftwareTriggerRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerStartSoftwareTriggerRequest> get() { BarcodeScannerStartSoftwareTriggerRequest* value; hrcheck(enc(&IBarcodeScannerStartSoftwareTriggerRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerStartSoftwareTriggerRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerStartSoftwareTriggerRequest> () { return get(); }
			ptr<BarcodeScannerStartSoftwareTriggerRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerStartSoftwareTriggerRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerStartSoftwareTriggerRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerStartSoftwareTriggerRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerStartSoftwareTriggerRequestEventArgs; };
struct IBarcodeScannerStartSoftwareTriggerRequestEventArgs : IBarcodeScannerStartSoftwareTriggerRequestEventArgs_raw, generate<IBarcodeScannerStartSoftwareTriggerRequestEventArgs> {};

// BarcodeScannerStartSoftwareTriggerRequestEventArgs
template<typename X> struct statics<BarcodeScannerStartSoftwareTriggerRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerStartSoftwareTriggerRequestEventArgs;
};
struct BarcodeScannerStartSoftwareTriggerRequestEventArgs : generate<BarcodeScannerStartSoftwareTriggerRequestEventArgs> {};

// IBarcodeScannerStopSoftwareTriggerRequest
struct IBarcodeScannerStopSoftwareTriggerRequest_raw : IInspectable {
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerStopSoftwareTriggerRequest_adaptor : X {
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
};
template<typename X> struct adapt<IBarcodeScannerStopSoftwareTriggerRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequest_adaptor<X> { typedef adapt IBarcodeScannerStopSoftwareTriggerRequest; };
struct IBarcodeScannerStopSoftwareTriggerRequest : IBarcodeScannerStopSoftwareTriggerRequest_raw, generate<IBarcodeScannerStopSoftwareTriggerRequest> {};

// BarcodeScannerStopSoftwareTriggerRequest
template<typename X> struct statics<BarcodeScannerStopSoftwareTriggerRequest, X> : X {
	typedef typename X::root_type BarcodeScannerStopSoftwareTriggerRequest;
};
struct BarcodeScannerStopSoftwareTriggerRequest : generate<BarcodeScannerStopSoftwareTriggerRequest> {};

// IBarcodeScannerStopSoftwareTriggerRequestEventArgs
struct IBarcodeScannerStopSoftwareTriggerRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerStopSoftwareTriggerRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerStopSoftwareTriggerRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerStopSoftwareTriggerRequest> get() { BarcodeScannerStopSoftwareTriggerRequest* value; hrcheck(enc(&IBarcodeScannerStopSoftwareTriggerRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerStopSoftwareTriggerRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerStopSoftwareTriggerRequest> () { return get(); }
			ptr<BarcodeScannerStopSoftwareTriggerRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerStopSoftwareTriggerRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerStopSoftwareTriggerRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerStopSoftwareTriggerRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerStopSoftwareTriggerRequestEventArgs; };
struct IBarcodeScannerStopSoftwareTriggerRequestEventArgs : IBarcodeScannerStopSoftwareTriggerRequestEventArgs_raw, generate<IBarcodeScannerStopSoftwareTriggerRequestEventArgs> {};

// BarcodeScannerStopSoftwareTriggerRequestEventArgs
template<typename X> struct statics<BarcodeScannerStopSoftwareTriggerRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerStopSoftwareTriggerRequestEventArgs;
};
struct BarcodeScannerStopSoftwareTriggerRequestEventArgs : generate<BarcodeScannerStopSoftwareTriggerRequestEventArgs> {};

// IBarcodeSymbologyAttributesBuilder
struct IBarcodeSymbologyAttributesBuilder_raw : IInspectable {
	virtual STDMETHODIMP _get_IsCheckDigitValidationSupported(bool *value);
	virtual STDMETHODIMP _put_IsCheckDigitValidationSupported(bool value);
	virtual STDMETHODIMP _get_IsCheckDigitTransmissionSupported(bool *value);
	virtual STDMETHODIMP _put_IsCheckDigitTransmissionSupported(bool value);
	virtual STDMETHODIMP _get_IsDecodeLengthSupported(bool *value);
	virtual STDMETHODIMP _put_IsDecodeLengthSupported(bool value);
	virtual STDMETHODIMP _CreateAttributes(BarcodeSymbologyAttributes* *value);
};
template<typename X> struct IBarcodeSymbologyAttributesBuilder_adaptor : X {
	union {
		struct : property {
			bool get() { bool value; hrcheck(enc(&IBarcodeSymbologyAttributesBuilder_adaptor::IsCheckDigitTransmissionSupported)->_get_IsCheckDigitTransmissionSupported(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IBarcodeSymbologyAttributesBuilder_adaptor::IsCheckDigitTransmissionSupported)->_put_IsCheckDigitTransmissionSupported(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} IsCheckDigitTransmissionSupported;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IBarcodeSymbologyAttributesBuilder_adaptor::IsCheckDigitValidationSupported)->_get_IsCheckDigitValidationSupported(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IBarcodeSymbologyAttributesBuilder_adaptor::IsCheckDigitValidationSupported)->_put_IsCheckDigitValidationSupported(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} IsCheckDigitValidationSupported;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IBarcodeSymbologyAttributesBuilder_adaptor::IsDecodeLengthSupported)->_get_IsDecodeLengthSupported(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IBarcodeSymbologyAttributesBuilder_adaptor::IsDecodeLengthSupported)->_put_IsDecodeLengthSupported(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} IsDecodeLengthSupported;
	};
	ptr<BarcodeSymbologyAttributes> CreateAttributes() { BarcodeSymbologyAttributes* value; hrcheck(X::get()->_CreateAttributes(&value)); return from_abi(value); }
	IBarcodeSymbologyAttributesBuilder_adaptor() {}
};
template<typename X> struct adapt<IBarcodeSymbologyAttributesBuilder, X> : Windows::Devices::PointOfService::Provider::IBarcodeSymbologyAttributesBuilder_adaptor<X> { typedef adapt IBarcodeSymbologyAttributesBuilder; };
struct IBarcodeSymbologyAttributesBuilder : IBarcodeSymbologyAttributesBuilder_raw, generate<IBarcodeSymbologyAttributesBuilder> {};

// BarcodeSymbologyAttributesBuilder
template<typename X> struct statics<BarcodeSymbologyAttributesBuilder, X> : X {
	typedef typename X::root_type BarcodeSymbologyAttributesBuilder;
};
struct BarcodeSymbologyAttributesBuilder : generate<BarcodeSymbologyAttributesBuilder> {};

// IBarcodeScannerGetSymbologyAttributesRequest
struct IBarcodeScannerGetSymbologyAttributesRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_Symbology(unsigned *value);
	virtual STDMETHODIMP _ReportCompletedAsync(BarcodeSymbologyAttributes* attributes, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerGetSymbologyAttributesRequest_adaptor : X {
	union {
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IBarcodeScannerGetSymbologyAttributesRequest_adaptor::Symbology)->_get_Symbology(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} Symbology;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync(pptr<BarcodeSymbologyAttributes> attributes) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(attributes, &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IBarcodeScannerGetSymbologyAttributesRequest_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerGetSymbologyAttributesRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequest_adaptor<X> { typedef adapt IBarcodeScannerGetSymbologyAttributesRequest; };
struct IBarcodeScannerGetSymbologyAttributesRequest : IBarcodeScannerGetSymbologyAttributesRequest_raw, generate<IBarcodeScannerGetSymbologyAttributesRequest> {};

// BarcodeScannerGetSymbologyAttributesRequest
template<typename X> struct statics<BarcodeScannerGetSymbologyAttributesRequest, X> : X {
	typedef typename X::root_type BarcodeScannerGetSymbologyAttributesRequest;
};
struct BarcodeScannerGetSymbologyAttributesRequest : generate<BarcodeScannerGetSymbologyAttributesRequest> {};

// IBarcodeScannerGetSymbologyAttributesRequestEventArgs
struct IBarcodeScannerGetSymbologyAttributesRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerGetSymbologyAttributesRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerGetSymbologyAttributesRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerGetSymbologyAttributesRequest> get() { BarcodeScannerGetSymbologyAttributesRequest* value; hrcheck(enc(&IBarcodeScannerGetSymbologyAttributesRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerGetSymbologyAttributesRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerGetSymbologyAttributesRequest> () { return get(); }
			ptr<BarcodeScannerGetSymbologyAttributesRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerGetSymbologyAttributesRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerGetSymbologyAttributesRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerGetSymbologyAttributesRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerGetSymbologyAttributesRequestEventArgs; };
struct IBarcodeScannerGetSymbologyAttributesRequestEventArgs : IBarcodeScannerGetSymbologyAttributesRequestEventArgs_raw, generate<IBarcodeScannerGetSymbologyAttributesRequestEventArgs> {};

// BarcodeScannerGetSymbologyAttributesRequestEventArgs
template<typename X> struct statics<BarcodeScannerGetSymbologyAttributesRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerGetSymbologyAttributesRequestEventArgs;
};
struct BarcodeScannerGetSymbologyAttributesRequestEventArgs : generate<BarcodeScannerGetSymbologyAttributesRequestEventArgs> {};

// IBarcodeScannerSetSymbologyAttributesRequest
struct IBarcodeScannerSetSymbologyAttributesRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_Symbology(unsigned *value);
	virtual STDMETHODIMP _get_Attributes(BarcodeSymbologyAttributes* *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerSetSymbologyAttributesRequest_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeSymbologyAttributes> get() { BarcodeSymbologyAttributes* value; hrcheck(enc(&IBarcodeScannerSetSymbologyAttributesRequest_adaptor::Attributes)->_get_Attributes(&value)); return from_abi(value); }
			ptr<BarcodeSymbologyAttributes> operator()() { return get(); }
			operator ptr<BarcodeSymbologyAttributes> () { return get(); }
			ptr<BarcodeSymbologyAttributes> operator->() { return get(); }
		} Attributes;
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IBarcodeScannerSetSymbologyAttributesRequest_adaptor::Symbology)->_get_Symbology(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} Symbology;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IBarcodeScannerSetSymbologyAttributesRequest_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerSetSymbologyAttributesRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequest_adaptor<X> { typedef adapt IBarcodeScannerSetSymbologyAttributesRequest; };
struct IBarcodeScannerSetSymbologyAttributesRequest : IBarcodeScannerSetSymbologyAttributesRequest_raw, generate<IBarcodeScannerSetSymbologyAttributesRequest> {};

// BarcodeScannerSetSymbologyAttributesRequest
template<typename X> struct statics<BarcodeScannerSetSymbologyAttributesRequest, X> : X {
	typedef typename X::root_type BarcodeScannerSetSymbologyAttributesRequest;
};
struct BarcodeScannerSetSymbologyAttributesRequest : generate<BarcodeScannerSetSymbologyAttributesRequest> {};

// IBarcodeScannerSetSymbologyAttributesRequestEventArgs
struct IBarcodeScannerSetSymbologyAttributesRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerSetSymbologyAttributesRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerSetSymbologyAttributesRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerSetSymbologyAttributesRequest> get() { BarcodeScannerSetSymbologyAttributesRequest* value; hrcheck(enc(&IBarcodeScannerSetSymbologyAttributesRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerSetSymbologyAttributesRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerSetSymbologyAttributesRequest> () { return get(); }
			ptr<BarcodeScannerSetSymbologyAttributesRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerSetSymbologyAttributesRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerSetSymbologyAttributesRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerSetSymbologyAttributesRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerSetSymbologyAttributesRequestEventArgs; };
struct IBarcodeScannerSetSymbologyAttributesRequestEventArgs : IBarcodeScannerSetSymbologyAttributesRequestEventArgs_raw, generate<IBarcodeScannerSetSymbologyAttributesRequestEventArgs> {};

// BarcodeScannerSetSymbologyAttributesRequestEventArgs
template<typename X> struct statics<BarcodeScannerSetSymbologyAttributesRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerSetSymbologyAttributesRequestEventArgs;
};
struct BarcodeScannerSetSymbologyAttributesRequestEventArgs : generate<BarcodeScannerSetSymbologyAttributesRequestEventArgs> {};

// IBarcodeScannerHideVideoPreviewRequest
struct IBarcodeScannerHideVideoPreviewRequest_raw : IInspectable {
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IBarcodeScannerHideVideoPreviewRequest_adaptor : X {
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
};
template<typename X> struct adapt<IBarcodeScannerHideVideoPreviewRequest, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequest_adaptor<X> { typedef adapt IBarcodeScannerHideVideoPreviewRequest; };
struct IBarcodeScannerHideVideoPreviewRequest : IBarcodeScannerHideVideoPreviewRequest_raw, generate<IBarcodeScannerHideVideoPreviewRequest> {};

// BarcodeScannerHideVideoPreviewRequest
template<typename X> struct statics<BarcodeScannerHideVideoPreviewRequest, X> : X {
	typedef typename X::root_type BarcodeScannerHideVideoPreviewRequest;
};
struct BarcodeScannerHideVideoPreviewRequest : generate<BarcodeScannerHideVideoPreviewRequest> {};

// IBarcodeScannerHideVideoPreviewRequestEventArgs
struct IBarcodeScannerHideVideoPreviewRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(BarcodeScannerHideVideoPreviewRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IBarcodeScannerHideVideoPreviewRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerHideVideoPreviewRequest> get() { BarcodeScannerHideVideoPreviewRequest* value; hrcheck(enc(&IBarcodeScannerHideVideoPreviewRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<BarcodeScannerHideVideoPreviewRequest> operator()() { return get(); }
			operator ptr<BarcodeScannerHideVideoPreviewRequest> () { return get(); }
			ptr<BarcodeScannerHideVideoPreviewRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IBarcodeScannerHideVideoPreviewRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerHideVideoPreviewRequestEventArgs, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerHideVideoPreviewRequestEventArgs_adaptor<X> { typedef adapt IBarcodeScannerHideVideoPreviewRequestEventArgs; };
struct IBarcodeScannerHideVideoPreviewRequestEventArgs : IBarcodeScannerHideVideoPreviewRequestEventArgs_raw, generate<IBarcodeScannerHideVideoPreviewRequestEventArgs> {};

// BarcodeScannerHideVideoPreviewRequestEventArgs
template<typename X> struct statics<BarcodeScannerHideVideoPreviewRequestEventArgs, X> : X {
	typedef typename X::root_type BarcodeScannerHideVideoPreviewRequestEventArgs;
};
struct BarcodeScannerHideVideoPreviewRequestEventArgs : generate<BarcodeScannerHideVideoPreviewRequestEventArgs> {};

// IBarcodeScannerProviderConnection
struct IBarcodeScannerProviderConnection_raw : IInspectable {
	virtual STDMETHODIMP _get_Id(HSTRING *value);
	virtual STDMETHODIMP _get_VideoDeviceId(HSTRING *value);
	virtual STDMETHODIMP _get_SupportedSymbologies(Foundation::Collections::IVector<unsigned>* *value);
	virtual STDMETHODIMP _get_CompanyName(HSTRING *value);
	virtual STDMETHODIMP _put_CompanyName(HSTRING value);
	virtual STDMETHODIMP _get_Name(HSTRING *value);
	virtual STDMETHODIMP _put_Name(HSTRING value);
	virtual STDMETHODIMP _get_Version(HSTRING *value);
	virtual STDMETHODIMP _put_Version(HSTRING value);
	virtual STDMETHODIMP _Start();
	virtual STDMETHODIMP _ReportScannedDataAsync(BarcodeScannerReport* report, Foundation::IAsyncAction* *operation);
	virtual STDMETHODIMP _ReportTriggerStateAsync(BarcodeScannerTriggerState state, Foundation::IAsyncAction* *operation);
	virtual STDMETHODIMP _ReportErrorAsync(UnifiedPosErrorData* errorData, Foundation::IAsyncAction* *operation);
	virtual STDMETHODIMP _ReportErrorAsyncWithScanReport(UnifiedPosErrorData* errorData, bool isRetriable, BarcodeScannerReport* scanReport, Foundation::IAsyncAction* *operation);
	virtual STDMETHODIMP _add_EnableScannerRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerEnableScannerRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_EnableScannerRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_DisableScannerRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerDisableScannerRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_DisableScannerRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_SetActiveSymbologiesRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerSetActiveSymbologiesRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_SetActiveSymbologiesRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_StartSoftwareTriggerRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerStartSoftwareTriggerRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_StartSoftwareTriggerRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_StopSoftwareTriggerRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerStopSoftwareTriggerRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_StopSoftwareTriggerRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_GetBarcodeSymbologyAttributesRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerGetSymbologyAttributesRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_GetBarcodeSymbologyAttributesRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_SetBarcodeSymbologyAttributesRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerSetSymbologyAttributesRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_SetBarcodeSymbologyAttributesRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_HideVideoPreviewRequested(Foundation::TypedEventHandler<BarcodeScannerProviderConnection*, BarcodeScannerHideVideoPreviewRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_HideVideoPreviewRequested(Foundation::EventRegistrationToken token);
};
template<typename X> struct IBarcodeScannerProviderConnection_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::CompanyName)->_get_CompanyName(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::CompanyName)->_put_CompanyName(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} CompanyName;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::Id)->_get_Id(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} Id;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::Name)->_get_Name(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::Name)->_put_Name(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Name;
		struct : property {
			ptr<Foundation::Collections::IVector<unsigned>> get() { Foundation::Collections::IVector<unsigned>* value; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::SupportedSymbologies)->_get_SupportedSymbologies(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVector<unsigned>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVector<unsigned>> () { return get(); }
			ptr<Foundation::Collections::IVector<unsigned>> operator->() { return get(); }
		} SupportedSymbologies;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::Version)->_get_Version(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::Version)->_put_Version(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Version;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::VideoDeviceId)->_get_VideoDeviceId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} VideoDeviceId;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerDisableScannerRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::DisableScannerRequested)->_add_DisableScannerRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::DisableScannerRequested)->_remove_DisableScannerRequested(token)); }
		} DisableScannerRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerEnableScannerRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::EnableScannerRequested)->_add_EnableScannerRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::EnableScannerRequested)->_remove_EnableScannerRequested(token)); }
		} EnableScannerRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerGetSymbologyAttributesRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::GetBarcodeSymbologyAttributesRequested)->_add_GetBarcodeSymbologyAttributesRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::GetBarcodeSymbologyAttributesRequested)->_remove_GetBarcodeSymbologyAttributesRequested(token)); }
		} GetBarcodeSymbologyAttributesRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerHideVideoPreviewRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::HideVideoPreviewRequested)->_add_HideVideoPreviewRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::HideVideoPreviewRequested)->_remove_HideVideoPreviewRequested(token)); }
		} HideVideoPreviewRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerSetActiveSymbologiesRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::SetActiveSymbologiesRequested)->_add_SetActiveSymbologiesRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::SetActiveSymbologiesRequested)->_remove_SetActiveSymbologiesRequested(token)); }
		} SetActiveSymbologiesRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerSetSymbologyAttributesRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::SetBarcodeSymbologyAttributesRequested)->_add_SetBarcodeSymbologyAttributesRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::SetBarcodeSymbologyAttributesRequested)->_remove_SetBarcodeSymbologyAttributesRequested(token)); }
		} SetBarcodeSymbologyAttributesRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerStartSoftwareTriggerRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::StartSoftwareTriggerRequested)->_add_StartSoftwareTriggerRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::StartSoftwareTriggerRequested)->_remove_StartSoftwareTriggerRequested(token)); }
		} StartSoftwareTriggerRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<BarcodeScannerProviderConnection>, ptr<BarcodeScannerStopSoftwareTriggerRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::StopSoftwareTriggerRequested)->_add_StopSoftwareTriggerRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IBarcodeScannerProviderConnection_adaptor::StopSoftwareTriggerRequested)->_remove_StopSoftwareTriggerRequested(token)); }
		} StopSoftwareTriggerRequested;
	};
	void Start() { hrcheck(X::get()->_Start()); }
	ptr<Foundation::IAsyncAction> ReportScannedDataAsync(pptr<BarcodeScannerReport> report) { Foundation::IAsyncAction* operation; hrcheck(X::get()->_ReportScannedDataAsync(report, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncAction> ReportTriggerStateAsync(BarcodeScannerTriggerState state) { Foundation::IAsyncAction* operation; hrcheck(X::get()->_ReportTriggerStateAsync(state, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncAction> ReportErrorAsync(pptr<UnifiedPosErrorData> errorData) { Foundation::IAsyncAction* operation; hrcheck(X::get()->_ReportErrorAsync(errorData, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncAction> ReportErrorAsync(pptr<UnifiedPosErrorData> errorData, bool isRetriable, pptr<BarcodeScannerReport> scanReport) { Foundation::IAsyncAction* operation; hrcheck(X::get()->_ReportErrorAsyncWithScanReport(errorData, isRetriable, scanReport, &operation)); return from_abi(operation); }
	IBarcodeScannerProviderConnection_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerProviderConnection, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderConnection_adaptor<X> { typedef adapt IBarcodeScannerProviderConnection; };
struct IBarcodeScannerProviderConnection : IBarcodeScannerProviderConnection_raw, generate<IBarcodeScannerProviderConnection> {};

// BarcodeScannerProviderConnection
template<typename X> struct statics<BarcodeScannerProviderConnection, X> : X {
	typedef typename X::root_type BarcodeScannerProviderConnection;
};
struct BarcodeScannerProviderConnection : generate<BarcodeScannerProviderConnection> {
	using IBarcodeScannerProviderConnection::ReportErrorAsync;
};

// IBarcodeScannerProviderTriggerDetails
struct IBarcodeScannerProviderTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Connection(BarcodeScannerProviderConnection* *value);
};
template<typename X> struct IBarcodeScannerProviderTriggerDetails_adaptor : X {
	union {
		struct : property {
			ptr<BarcodeScannerProviderConnection> get() { BarcodeScannerProviderConnection* value; hrcheck(enc(&IBarcodeScannerProviderTriggerDetails_adaptor::Connection)->_get_Connection(&value)); return from_abi(value); }
			ptr<BarcodeScannerProviderConnection> operator()() { return get(); }
			operator ptr<BarcodeScannerProviderConnection> () { return get(); }
			ptr<BarcodeScannerProviderConnection> operator->() { return get(); }
		} Connection;
	};
	IBarcodeScannerProviderTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IBarcodeScannerProviderTriggerDetails, X> : Windows::Devices::PointOfService::Provider::IBarcodeScannerProviderTriggerDetails_adaptor<X> { typedef adapt IBarcodeScannerProviderTriggerDetails; };
struct IBarcodeScannerProviderTriggerDetails : IBarcodeScannerProviderTriggerDetails_raw, generate<IBarcodeScannerProviderTriggerDetails> {};

// BarcodeScannerProviderTriggerDetails
template<typename X> struct statics<BarcodeScannerProviderTriggerDetails, X> : X {
	typedef typename X::root_type BarcodeScannerProviderTriggerDetails;
};
struct BarcodeScannerProviderTriggerDetails : generate<BarcodeScannerProviderTriggerDetails> {};
}}}}
} // namespace iso_winrt
