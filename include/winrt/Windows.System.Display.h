#pragma once
// generated by isopod tools
// namespaces:
// Windows.System.Display

#include "Windows.System.Display.0.h"

namespace iso_winrt {

// forward types


// defs

template<> struct def<Windows::System::Display::IDisplayRequest> : interface_type<> {};
template<> struct def<Windows::System::Display::DisplayRequest> : class_type<Platform::Object, Windows::System::Display::IDisplayRequest> {};

// uuids

template<> struct uuid<Windows::System::Display::IDisplayRequest> { define_guid(0xE5732044, 0xF49F, 0x4B60, 0x8D, 0xD4, 0x5E, 0x7E, 0x3A, 0x63, 0x2A, 0xC0);};

// types

namespace Windows { namespace System { namespace Display {

// IDisplayRequest
struct IDisplayRequest_raw : IInspectable {
	virtual STDMETHODIMP _RequestActive();
	virtual STDMETHODIMP _RequestRelease();
};
template<typename X> struct IDisplayRequest_adaptor : X {
	void RequestActive() { hrcheck(X::get()->_RequestActive()); }
	void RequestRelease() { hrcheck(X::get()->_RequestRelease()); }
};
template<typename X> struct adapt<IDisplayRequest, X> : Windows::System::Display::IDisplayRequest_adaptor<X> { typedef adapt IDisplayRequest; };
struct IDisplayRequest : IDisplayRequest_raw, generate<IDisplayRequest> {};

// DisplayRequest
template<typename X> struct statics<DisplayRequest, X> : X {
	typedef typename X::root_type DisplayRequest;
};
struct DisplayRequest : generate<DisplayRequest> {};
}}}
} // namespace iso_winrt
