#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Media { namespace Core {
enum class TimedTextScrollMode : int {
	Popon = 0,
	Rollup = 1,
};
enum class TimedTextUnit : int {
	Pixels = 0,
	Percentage = 1,
};
enum class TimedTextWritingMode : int {
	LeftRightTopBottom = 0,
	RightLeftTopBottom = 1,
	TopBottomRightLeft = 2,
	TopBottomLeftRight = 3,
	LeftRight = 4,
	RightLeft = 5,
	TopBottom = 6,
};
enum class TimedTextDisplayAlignment : int {
	Before = 0,
	After = 1,
	Center = 2,
};
enum class TimedTextLineAlignment : int {
	Start = 0,
	End = 1,
	Center = 2,
};
enum class TimedTextWrapping : int {
	NoWrap = 0,
	Wrap = 1,
};
enum class TimedTextWeight : int {
	Normal = 400,
	Bold = 700,
};
enum class TimedTextFlowDirection : int {
	LeftToRight = 0,
	RightToLeft = 1,
};
enum class TimedTextFontStyle : int {
	Normal = 0,
	Oblique = 1,
	Italic = 2,
};
struct TimedTextPadding {
	double Before;
	double After;
	double Start;
	double End;
	TimedTextUnit Unit;
};
struct TimedTextSize {
	double Height;
	double Width;
	TimedTextUnit Unit;
};
struct TimedTextDouble {
	double Value;
	TimedTextUnit Unit;
};
struct TimedTextPoint {
	double X;
	double Y;
	TimedTextUnit Unit;
};
struct IMediaCue;
struct IDataCue;
struct IDataCue2;
struct IChapterCue;
struct IImageCue;
struct ISpeechCue;
struct ITimedTextCue;
struct ITimedTextRegion;
struct TimedTextRegion;
struct ITimedTextStyle2;
struct ITimedTextStyle;
struct TimedTextStyle;
struct ITimedTextLine;
struct TimedTextLine;
struct ITimedTextSubformat;
struct TimedTextSubformat;
struct TimedTextCue;
struct DataCue;
struct ChapterCue;
struct ImageCue;
struct SpeechCue;
enum class CodecKind : int {
	Audio = 0,
	Video = 1,
};
enum class CodecCategory : int {
	Encoder = 0,
	Decoder = 1,
};
struct ICodecInfo;
struct CodecInfo;
struct ICodecQuery;
struct CodecQuery;
struct ICodecSubtypesStatics;
struct CodecSubtypes;
struct ILowLightFusionStatics;
struct ILowLightFusionResult;
struct LowLightFusionResult;
struct LowLightFusion;
struct IAudioStreamDescriptorFactory;
struct IAudioStreamDescriptor3;
struct IMediaStreamDescriptor;
struct IMediaStreamDescriptor2;
struct IAudioStreamDescriptor2;
struct IAudioStreamDescriptor;
struct AudioStreamDescriptor;
struct IVideoStreamDescriptorFactory;
struct IVideoStreamDescriptor2;
struct IVideoStreamDescriptor;
struct VideoStreamDescriptor;
struct ITimedMetadataStreamDescriptorFactory;
struct ITimedMetadataStreamDescriptor;
struct TimedMetadataStreamDescriptor;
enum class MediaStreamSourceClosedReason : int {
	Done = 0,
	UnknownError = 1,
	AppReportedError = 2,
	UnsupportedProtectionSystem = 3,
	ProtectionSystemFailure = 4,
	UnsupportedEncodingFormat = 5,
	MissingSampleRequestedEventHandler = 6,
};
enum class MediaStreamSourceErrorStatus : int {
	Other = 0,
	OutOfMemory = 1,
	FailedToOpenFile = 2,
	FailedToConnectToServer = 3,
	ConnectionToServerLost = 4,
	UnspecifiedNetworkError = 5,
	DecodeError = 6,
	UnsupportedMediaFormat = 7,
};
struct IMediaSource;
struct IMediaStreamSource;
struct IMediaStreamSourceFactory;
struct IMediaStreamSource4;
struct IMediaStreamSource3;
struct IMediaStreamSource2;
struct MediaStreamSource;
struct IMediaStreamSourceClosedEventArgs;
struct MediaStreamSourceClosedEventArgs;
struct IMediaStreamSourceStartingEventArgs;
struct MediaStreamSourceStartingEventArgs;
struct IMediaStreamSourceSampleRequestedEventArgs;
struct MediaStreamSourceSampleRequestedEventArgs;
struct IMediaStreamSourceSwitchStreamsRequestedEventArgs;
struct MediaStreamSourceSwitchStreamsRequestedEventArgs;
struct IMediaStreamSourceSampleRenderedEventArgs;
struct MediaStreamSourceSampleRenderedEventArgs;
struct MediaStreamSamplePropertySet;
struct IMediaStreamSample;
struct IMediaStreamSampleStatics;
struct MediaStreamSample;
struct IMediaStreamSampleProtectionProperties;
struct MediaStreamSampleProtectionProperties;
struct IMediaStreamSourceClosedRequest;
struct MediaStreamSourceClosedRequest;
struct IMediaStreamSourceStartingRequestDeferral;
struct MediaStreamSourceStartingRequestDeferral;
struct IMediaStreamSourceStartingRequest;
struct MediaStreamSourceStartingRequest;
struct IMediaStreamSourceSampleRequestDeferral;
struct MediaStreamSourceSampleRequestDeferral;
struct IMediaStreamSourceSampleRequest;
struct MediaStreamSourceSampleRequest;
struct IMediaStreamSourceSwitchStreamsRequestDeferral;
struct MediaStreamSourceSwitchStreamsRequestDeferral;
struct IMediaStreamSourceSwitchStreamsRequest;
struct MediaStreamSourceSwitchStreamsRequest;
struct MseTimeRange {
	Foundation::TimeSpan Start;
	Foundation::TimeSpan End;
};
enum class MseReadyState : int {
	Closed = 0,
	Open = 1,
	Ended = 2,
};
enum class MseEndOfStreamStatus : int {
	Success = 0,
	NetworkError = 1,
	DecodeError = 2,
	UnknownError = 3,
};
enum class MseAppendMode : int {
	Segments = 0,
	Sequence = 1,
};
struct IMseStreamSourceStatics;
struct IMseStreamSource;
struct IMseStreamSource2;
struct MseStreamSource;
struct IMseSourceBufferList;
struct MseSourceBufferList;
struct IMseSourceBuffer;
struct MseSourceBuffer;
struct IMediaSourceAppServiceConnectionFactory;
struct IMediaSourceAppServiceConnection;
struct MediaSourceAppServiceConnection;
struct IInitializeMediaStreamSourceRequestedEventArgs;
struct InitializeMediaStreamSourceRequestedEventArgs;
struct IHighDynamicRangeControl;
struct HighDynamicRangeControl;
struct ISceneAnalysisEffect;
struct SceneAnalysisEffect;
struct ISceneAnalyzedEventArgs;
struct SceneAnalyzedEventArgs;
struct IHighDynamicRangeOutput;
struct HighDynamicRangeOutput;
enum class SceneAnalysisRecommendation : int {
	Standard = 0,
	Hdr = 1,
	LowLight = 2,
};
struct ISceneAnalysisEffectFrame;
struct ISceneAnalysisEffectFrame2;
struct SceneAnalysisEffectFrame;
struct SceneAnalysisEffectDefinition;
struct IFaceDetectionEffectFrame;
struct FaceDetectionEffectFrame;
struct IFaceDetectedEventArgs;
struct FaceDetectedEventArgs;
struct IFaceDetectionEffect;
struct FaceDetectionEffect;
enum class FaceDetectionMode : int {
	HighPerformance = 0,
	Balanced = 1,
	HighQuality = 2,
};
struct IFaceDetectionEffectDefinition;
struct FaceDetectionEffectDefinition;
enum class VideoStabilizationEffectEnabledChangedReason : int {
	Programmatic = 0,
	PixelRateTooHigh = 1,
	RunningSlowly = 2,
};
struct IVideoStabilizationEffectEnabledChangedEventArgs;
struct VideoStabilizationEffectEnabledChangedEventArgs;
struct IVideoStabilizationEffect;
struct VideoStabilizationEffect;
struct VideoStabilizationEffectDefinition;
enum class MediaTrackKind : int {
	Audio = 0,
	Video = 1,
	TimedMetadata = 2,
};
enum class TimedMetadataKind : int {
	Caption = 0,
	Chapter = 1,
	Custom = 2,
	Data = 3,
	Description = 4,
	Subtitle = 5,
	ImageSubtitle = 6,
	Speech = 7,
};
enum class TimedMetadataTrackErrorCode : int {
	None = 0,
	DataFormatError = 1,
	NetworkError = 2,
	InternalError = 3,
};
enum class MediaDecoderStatus : int {
	FullySupported = 0,
	UnsupportedSubtype = 1,
	UnsupportedEncoderProperties = 2,
	Degraded = 3,
};
enum class AudioDecoderDegradation : int {
	None = 0,
	DownmixTo2Channels = 1,
	DownmixTo6Channels = 2,
	DownmixTo8Channels = 3,
};
enum class AudioDecoderDegradationReason : int {
	None = 0,
	LicensingRequirement = 1,
	SpatialAudioNotSupported = 2,
};
enum class MediaSourceStatus : int {
	FullySupported = 0,
	Unknown = 1,
};
enum class MediaSourceState : int {
	Initial = 0,
	Opening = 1,
	Opened = 2,
	Failed = 3,
	Closed = 4,
};
struct IMediaSourceError;
struct IMediaSourceOpenOperationCompletedEventArgs;
struct MediaSourceError;
struct IMediaSourceStateChangedEventArgs;
struct IMediaSourceStatics;
struct IMediaSourceStatics4;
struct IMediaSourceStatics3;
struct IMediaSourceStatics2;
struct IMediaSource5;
struct IMediaSource2;
struct IMediaSource3;
struct IMediaSource4;
struct MediaSource;
struct IMediaBinder;
struct MediaBinder;
struct IMediaBindingEventArgs3;
struct IMediaBindingEventArgs2;
struct IMediaBindingEventArgs;
struct MediaBindingEventArgs;
struct MediaSourceOpenOperationCompletedEventArgs;
struct ITimedTextSourceStatics2;
struct ITimedTextSourceStatics;
struct ITimedTextSource;
struct TimedTextSource;
struct ITimedMetadataTrackFactory;
struct IMediaTrack;
struct ITimedMetadataTrack;
struct ITimedMetadataTrack2;
struct TimedMetadataTrack;
struct MediaSourceStateChangedEventArgs;
struct ISingleSelectMediaTrackList;
struct ITimedMetadataTrackError;
struct IMediaCueEventArgs;
struct ITimedMetadataTrackFailedEventArgs;
struct TimedMetadataTrackError;
struct ITimedMetadataTrackProvider;
struct MediaCueEventArgs;
struct TimedMetadataTrackFailedEventArgs;
struct ITimedTextSourceResolveResultEventArgs;
struct TimedTextSourceResolveResultEventArgs;
struct IVideoTrackSupportInfo;
struct IAudioTrackSupportInfo;
struct IVideoTrackOpenFailedEventArgs;
struct IAudioTrackOpenFailedEventArgs;
struct IVideoTrack;
struct VideoTrack;
struct VideoTrackOpenFailedEventArgs;
struct VideoTrackSupportInfo;
struct IAudioTrack;
struct AudioTrack;
struct AudioTrackOpenFailedEventArgs;
struct AudioTrackSupportInfo;
}}}
} // namespace iso_winrt
