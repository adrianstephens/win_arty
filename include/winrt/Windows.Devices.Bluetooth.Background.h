#pragma once
// generated by isopod tools
// namespaces:
// Windows.Devices.Bluetooth.Background

#include "Windows.Devices.Bluetooth.Background.0.h"
#include "Windows.Devices.Bluetooth.0.h"
#include "Windows.Devices.Bluetooth.Advertisement.0.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Devices { namespace Bluetooth { namespace GenericAttributeProfile {
struct GattValueChangedEventArgs;
struct GattCharacteristic;
struct GattLocalService;
}
namespace Rfcomm {
struct RfcommServiceId;
}}}
namespace Foundation { namespace Collections {
template<typename K, typename V> struct IMapView;
template<typename T> struct IVectorView;
}}
namespace Networking { namespace Sockets {
struct StreamSocket;
}}
namespace Storage { namespace Streams {
struct IBuffer;
}}}

// defs

template<> struct def<Windows::Devices::Bluetooth::Background::BluetoothEventTriggeringMode> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IRfcommInboundConnectionInformation> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::RfcommInboundConnectionInformation> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IRfcommInboundConnectionInformation> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IRfcommOutboundConnectionInformation> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::RfcommOutboundConnectionInformation> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IRfcommOutboundConnectionInformation> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IRfcommConnectionTriggerDetails> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::RfcommConnectionTriggerDetails> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IRfcommConnectionTriggerDetails> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::GattCharacteristicNotificationTriggerDetails> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails, Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails2> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IGattServiceProviderConnectionStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IGattServiceProviderConnection> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::GattServiceProviderConnection> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IGattServiceProviderConnection> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IGattServiceProviderTriggerDetails> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::GattServiceProviderTriggerDetails> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IGattServiceProviderTriggerDetails> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementWatcherTriggerDetails> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::BluetoothLEAdvertisementWatcherTriggerDetails> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementWatcherTriggerDetails> {};
template<> struct def<Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementPublisherTriggerDetails> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::Background::BluetoothLEAdvertisementPublisherTriggerDetails> : class_type<Platform::Object, Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementPublisherTriggerDetails> {};

// uuids

template<> struct uuid<Windows::Devices::Bluetooth::Background::IRfcommInboundConnectionInformation> { define_guid(0x6D3E75A8, 0x5429, 0x4059, 0x92, 0xE3, 0x1E, 0x8B, 0x65, 0x52, 0x87, 0x7);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IRfcommOutboundConnectionInformation> { define_guid(0xB091227B, 0xF434, 0x4CB0, 0x99, 0xB1, 0x4A, 0xB8, 0xCE, 0xDA, 0xED, 0xD7);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IRfcommConnectionTriggerDetails> { define_guid(0xF922734D, 0x2E3C, 0x4EFC, 0xAB, 0x59, 0xFC, 0x5C, 0xF9, 0x6F, 0x97, 0xE3);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails> { define_guid(0x9BA03B18, 0xFEC, 0x436A, 0x93, 0xB1, 0xF4, 0x6C, 0x69, 0x75, 0x32, 0xA2);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails2> { define_guid(0x727A50DC, 0x949D, 0x454A, 0xB1, 0x92, 0x98, 0x34, 0x67, 0xE3, 0xD5, 0xF);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IGattServiceProviderConnectionStatics> { define_guid(0x3D509F4B, 0xB0E, 0x4466, 0xB8, 0xCD, 0x6E, 0xBD, 0xDA, 0x1F, 0xA1, 0x7D);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IGattServiceProviderConnection> { define_guid(0x7FA1B9B9, 0x2F13, 0x40B5, 0x95, 0x82, 0x8E, 0xB7, 0x8E, 0x98, 0xEF, 0x13);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IGattServiceProviderTriggerDetails> { define_guid(0xAE8C0625, 0x5FF, 0x4AFB, 0xB1, 0x6A, 0xDE, 0x95, 0xF3, 0xCF, 0x1, 0x58);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementWatcherTriggerDetails> { define_guid(0xA7DB5AD7, 0x2257, 0x4E69, 0x97, 0x84, 0xFE, 0xE6, 0x45, 0xC1, 0xDC, 0xE0);};
template<> struct uuid<Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementPublisherTriggerDetails> { define_guid(0x610ECA86, 0x3480, 0x41C9, 0xA9, 0x18, 0x7D, 0xDA, 0xDF, 0x20, 0x7E, 0x0);};

// types

namespace Windows { namespace Devices { namespace Bluetooth { namespace Background {

// IRfcommInboundConnectionInformation
struct IRfcommInboundConnectionInformation_raw : IInspectable {
	virtual STDMETHODIMP _get_SdpRecord(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _put_SdpRecord(Storage::Streams::IBuffer* value);
	virtual STDMETHODIMP _get_LocalServiceId(Rfcomm::RfcommServiceId* *value);
	virtual STDMETHODIMP _put_LocalServiceId(Rfcomm::RfcommServiceId* value);
	virtual STDMETHODIMP _get_ServiceCapabilities(BluetoothServiceCapabilities *value);
	virtual STDMETHODIMP _put_ServiceCapabilities(BluetoothServiceCapabilities value);
};
template<typename X> struct IRfcommInboundConnectionInformation_adaptor : X {
	union {
		struct : property {
			ptr<Rfcomm::RfcommServiceId> get() { Rfcomm::RfcommServiceId* value; hrcheck(enc(&IRfcommInboundConnectionInformation_adaptor::LocalServiceId)->_get_LocalServiceId(&value)); return from_abi(value); }
			ptr<Rfcomm::RfcommServiceId> operator()() { return get(); }
			operator ptr<Rfcomm::RfcommServiceId> () { return get(); }
			ptr<Rfcomm::RfcommServiceId> operator->() { return get(); }
			void put(pptr<Rfcomm::RfcommServiceId> value) { hrcheck(enc(&IRfcommInboundConnectionInformation_adaptor::LocalServiceId)->_put_LocalServiceId(value)); }
			void operator=(pptr<Rfcomm::RfcommServiceId> value) { put(value); }
			void operator()(pptr<Rfcomm::RfcommServiceId> value) { put(value); }
		} LocalServiceId;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IRfcommInboundConnectionInformation_adaptor::SdpRecord)->_get_SdpRecord(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
			void put(pptr<Storage::Streams::IBuffer> value) { hrcheck(enc(&IRfcommInboundConnectionInformation_adaptor::SdpRecord)->_put_SdpRecord(value)); }
			void operator=(pptr<Storage::Streams::IBuffer> value) { put(value); }
			void operator()(pptr<Storage::Streams::IBuffer> value) { put(value); }
		} SdpRecord;
		struct : property {
			BluetoothServiceCapabilities get() { BluetoothServiceCapabilities value; hrcheck(enc(&IRfcommInboundConnectionInformation_adaptor::ServiceCapabilities)->_get_ServiceCapabilities(&value)); return value; }
			BluetoothServiceCapabilities operator()() { return get(); }
			operator BluetoothServiceCapabilities () { return get(); }
			void put(BluetoothServiceCapabilities value) { hrcheck(enc(&IRfcommInboundConnectionInformation_adaptor::ServiceCapabilities)->_put_ServiceCapabilities(value)); }
			void operator=(BluetoothServiceCapabilities value) { put(value); }
			void operator()(BluetoothServiceCapabilities value) { put(value); }
		} ServiceCapabilities;
	};
	IRfcommInboundConnectionInformation_adaptor() {}
};
template<typename X> struct adapt<IRfcommInboundConnectionInformation, X> : Windows::Devices::Bluetooth::Background::IRfcommInboundConnectionInformation_adaptor<X> { typedef adapt IRfcommInboundConnectionInformation; };
struct IRfcommInboundConnectionInformation : IRfcommInboundConnectionInformation_raw, generate<IRfcommInboundConnectionInformation> {};

// RfcommInboundConnectionInformation
template<typename X> struct statics<RfcommInboundConnectionInformation, X> : X {
	typedef typename X::root_type RfcommInboundConnectionInformation;
};
struct RfcommInboundConnectionInformation : generate<RfcommInboundConnectionInformation> {};

// IRfcommOutboundConnectionInformation
struct IRfcommOutboundConnectionInformation_raw : IInspectable {
	virtual STDMETHODIMP _get_RemoteServiceId(Rfcomm::RfcommServiceId* *value);
	virtual STDMETHODIMP _put_RemoteServiceId(Rfcomm::RfcommServiceId* value);
};
template<typename X> struct IRfcommOutboundConnectionInformation_adaptor : X {
	union {
		struct : property {
			ptr<Rfcomm::RfcommServiceId> get() { Rfcomm::RfcommServiceId* value; hrcheck(enc(&IRfcommOutboundConnectionInformation_adaptor::RemoteServiceId)->_get_RemoteServiceId(&value)); return from_abi(value); }
			ptr<Rfcomm::RfcommServiceId> operator()() { return get(); }
			operator ptr<Rfcomm::RfcommServiceId> () { return get(); }
			ptr<Rfcomm::RfcommServiceId> operator->() { return get(); }
			void put(pptr<Rfcomm::RfcommServiceId> value) { hrcheck(enc(&IRfcommOutboundConnectionInformation_adaptor::RemoteServiceId)->_put_RemoteServiceId(value)); }
			void operator=(pptr<Rfcomm::RfcommServiceId> value) { put(value); }
			void operator()(pptr<Rfcomm::RfcommServiceId> value) { put(value); }
		} RemoteServiceId;
	};
	IRfcommOutboundConnectionInformation_adaptor() {}
};
template<typename X> struct adapt<IRfcommOutboundConnectionInformation, X> : Windows::Devices::Bluetooth::Background::IRfcommOutboundConnectionInformation_adaptor<X> { typedef adapt IRfcommOutboundConnectionInformation; };
struct IRfcommOutboundConnectionInformation : IRfcommOutboundConnectionInformation_raw, generate<IRfcommOutboundConnectionInformation> {};

// RfcommOutboundConnectionInformation
template<typename X> struct statics<RfcommOutboundConnectionInformation, X> : X {
	typedef typename X::root_type RfcommOutboundConnectionInformation;
};
struct RfcommOutboundConnectionInformation : generate<RfcommOutboundConnectionInformation> {};

// IRfcommConnectionTriggerDetails
struct IRfcommConnectionTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Socket(Networking::Sockets::StreamSocket* *value);
	virtual STDMETHODIMP _get_Incoming(bool *value);
	virtual STDMETHODIMP _get_RemoteDevice(BluetoothDevice* *value);
};
template<typename X> struct IRfcommConnectionTriggerDetails_adaptor : X {
	union {
		struct : property {
			bool get() { bool value; hrcheck(enc(&IRfcommConnectionTriggerDetails_adaptor::Incoming)->_get_Incoming(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
		} Incoming;
		struct : property {
			ptr<BluetoothDevice> get() { BluetoothDevice* value; hrcheck(enc(&IRfcommConnectionTriggerDetails_adaptor::RemoteDevice)->_get_RemoteDevice(&value)); return from_abi(value); }
			ptr<BluetoothDevice> operator()() { return get(); }
			operator ptr<BluetoothDevice> () { return get(); }
			ptr<BluetoothDevice> operator->() { return get(); }
		} RemoteDevice;
		struct : property {
			ptr<Networking::Sockets::StreamSocket> get() { Networking::Sockets::StreamSocket* value; hrcheck(enc(&IRfcommConnectionTriggerDetails_adaptor::Socket)->_get_Socket(&value)); return from_abi(value); }
			ptr<Networking::Sockets::StreamSocket> operator()() { return get(); }
			operator ptr<Networking::Sockets::StreamSocket> () { return get(); }
			ptr<Networking::Sockets::StreamSocket> operator->() { return get(); }
		} Socket;
	};
	IRfcommConnectionTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IRfcommConnectionTriggerDetails, X> : Windows::Devices::Bluetooth::Background::IRfcommConnectionTriggerDetails_adaptor<X> { typedef adapt IRfcommConnectionTriggerDetails; };
struct IRfcommConnectionTriggerDetails : IRfcommConnectionTriggerDetails_raw, generate<IRfcommConnectionTriggerDetails> {};

// RfcommConnectionTriggerDetails
template<typename X> struct statics<RfcommConnectionTriggerDetails, X> : X {
	typedef typename X::root_type RfcommConnectionTriggerDetails;
};
struct RfcommConnectionTriggerDetails : generate<RfcommConnectionTriggerDetails> {};

// IGattCharacteristicNotificationTriggerDetails
struct IGattCharacteristicNotificationTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Characteristic(GenericAttributeProfile::GattCharacteristic* *value);
	virtual STDMETHODIMP _get_Value(Storage::Streams::IBuffer* *value);
};
template<typename X> struct IGattCharacteristicNotificationTriggerDetails_adaptor : X {
	union {
		struct : property {
			ptr<GenericAttributeProfile::GattCharacteristic> get() { GenericAttributeProfile::GattCharacteristic* value; hrcheck(enc(&IGattCharacteristicNotificationTriggerDetails_adaptor::Characteristic)->_get_Characteristic(&value)); return from_abi(value); }
			ptr<GenericAttributeProfile::GattCharacteristic> operator()() { return get(); }
			operator ptr<GenericAttributeProfile::GattCharacteristic> () { return get(); }
			ptr<GenericAttributeProfile::GattCharacteristic> operator->() { return get(); }
		} Characteristic;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattCharacteristicNotificationTriggerDetails_adaptor::Value)->_get_Value(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
		} Value;
	};
	IGattCharacteristicNotificationTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IGattCharacteristicNotificationTriggerDetails, X> : Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails_adaptor<X> { typedef adapt IGattCharacteristicNotificationTriggerDetails; };
struct IGattCharacteristicNotificationTriggerDetails : IGattCharacteristicNotificationTriggerDetails_raw, generate<IGattCharacteristicNotificationTriggerDetails> {};

// IGattCharacteristicNotificationTriggerDetails2
struct IGattCharacteristicNotificationTriggerDetails2_raw : IInspectable {
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
	virtual STDMETHODIMP _get_EventTriggeringMode(BluetoothEventTriggeringMode *value);
	virtual STDMETHODIMP _get_ValueChangedEvents(Foundation::Collections::IVectorView<GenericAttributeProfile::GattValueChangedEventArgs*>* *value);
};
template<typename X> struct IGattCharacteristicNotificationTriggerDetails2_adaptor : X {
	union {
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IGattCharacteristicNotificationTriggerDetails2_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
		struct : property {
			BluetoothEventTriggeringMode get() { BluetoothEventTriggeringMode value; hrcheck(enc(&IGattCharacteristicNotificationTriggerDetails2_adaptor::EventTriggeringMode)->_get_EventTriggeringMode(&value)); return value; }
			BluetoothEventTriggeringMode operator()() { return get(); }
			operator BluetoothEventTriggeringMode () { return get(); }
		} EventTriggeringMode;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GenericAttributeProfile::GattValueChangedEventArgs>>> get() { Foundation::Collections::IVectorView<GenericAttributeProfile::GattValueChangedEventArgs*>* value; hrcheck(enc(&IGattCharacteristicNotificationTriggerDetails2_adaptor::ValueChangedEvents)->_get_ValueChangedEvents(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GenericAttributeProfile::GattValueChangedEventArgs>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GenericAttributeProfile::GattValueChangedEventArgs>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GenericAttributeProfile::GattValueChangedEventArgs>>> operator->() { return get(); }
		} ValueChangedEvents;
	};
	IGattCharacteristicNotificationTriggerDetails2_adaptor() {}
};
template<typename X> struct adapt<IGattCharacteristicNotificationTriggerDetails2, X> : Windows::Devices::Bluetooth::Background::IGattCharacteristicNotificationTriggerDetails2_adaptor<X> { typedef adapt IGattCharacteristicNotificationTriggerDetails2; };
struct IGattCharacteristicNotificationTriggerDetails2 : IGattCharacteristicNotificationTriggerDetails2_raw, generate<IGattCharacteristicNotificationTriggerDetails2> {};

// GattCharacteristicNotificationTriggerDetails
template<typename X> struct statics<GattCharacteristicNotificationTriggerDetails, X> : X {
	typedef typename X::root_type GattCharacteristicNotificationTriggerDetails;
};
struct GattCharacteristicNotificationTriggerDetails : generate<GattCharacteristicNotificationTriggerDetails> {};

// IGattServiceProviderConnectionStatics
struct IGattServiceProviderConnectionStatics : IInspectable {
	virtual STDMETHODIMP _get_AllServices(Foundation::Collections::IMapView<HSTRING, GattServiceProviderConnection*>* *value);
};

// IGattServiceProviderConnection
struct IGattServiceProviderConnection_raw : IInspectable {
	virtual STDMETHODIMP _get_TriggerId(HSTRING *value);
	virtual STDMETHODIMP _get_Service(GenericAttributeProfile::GattLocalService* *value);
	virtual STDMETHODIMP _Start();
};
template<typename X> struct IGattServiceProviderConnection_adaptor : X {
	union {
		struct : property {
			ptr<GenericAttributeProfile::GattLocalService> get() { GenericAttributeProfile::GattLocalService* value; hrcheck(enc(&IGattServiceProviderConnection_adaptor::Service)->_get_Service(&value)); return from_abi(value); }
			ptr<GenericAttributeProfile::GattLocalService> operator()() { return get(); }
			operator ptr<GenericAttributeProfile::GattLocalService> () { return get(); }
			ptr<GenericAttributeProfile::GattLocalService> operator->() { return get(); }
		} Service;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IGattServiceProviderConnection_adaptor::TriggerId)->_get_TriggerId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} TriggerId;
	};
	void Start() { hrcheck(X::get()->_Start()); }
	IGattServiceProviderConnection_adaptor() {}
};
template<typename X> struct adapt<IGattServiceProviderConnection, X> : Windows::Devices::Bluetooth::Background::IGattServiceProviderConnection_adaptor<X> { typedef adapt IGattServiceProviderConnection; };
struct IGattServiceProviderConnection : IGattServiceProviderConnection_raw, generate<IGattServiceProviderConnection> {};

// GattServiceProviderConnection
template<typename> struct GattServiceProviderConnection_statics {
	static struct _AllServices : property {
		ptr<Foundation::Collections::IMapView<hstring, ptr<GattServiceProviderConnection>>> get() { Foundation::Collections::IMapView<HSTRING, GattServiceProviderConnection*>* value; hrcheck(get_activation_factory<GattServiceProviderConnection, IGattServiceProviderConnectionStatics>()->_get_AllServices(&value)); return from_abi(value); }
		ptr<Foundation::Collections::IMapView<hstring, ptr<GattServiceProviderConnection>>> operator()() { return get(); }
		operator ptr<Foundation::Collections::IMapView<hstring, ptr<GattServiceProviderConnection>>> () { return get(); }
		ptr<Foundation::Collections::IMapView<hstring, ptr<GattServiceProviderConnection>>> operator->() { return get(); }
	} AllServices;
};
template<typename X> typename GattServiceProviderConnection_statics<X>::_AllServices GattServiceProviderConnection_statics<X>::AllServices;

template<typename X> struct statics<GattServiceProviderConnection, X> : X, Windows::Devices::Bluetooth::Background::GattServiceProviderConnection_statics<void> {
	typedef typename X::root_type GattServiceProviderConnection;
};
struct GattServiceProviderConnection : generate<GattServiceProviderConnection> {};

// IGattServiceProviderTriggerDetails
struct IGattServiceProviderTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Connection(GattServiceProviderConnection* *value);
};
template<typename X> struct IGattServiceProviderTriggerDetails_adaptor : X {
	union {
		struct : property {
			ptr<GattServiceProviderConnection> get() { GattServiceProviderConnection* value; hrcheck(enc(&IGattServiceProviderTriggerDetails_adaptor::Connection)->_get_Connection(&value)); return from_abi(value); }
			ptr<GattServiceProviderConnection> operator()() { return get(); }
			operator ptr<GattServiceProviderConnection> () { return get(); }
			ptr<GattServiceProviderConnection> operator->() { return get(); }
		} Connection;
	};
	IGattServiceProviderTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IGattServiceProviderTriggerDetails, X> : Windows::Devices::Bluetooth::Background::IGattServiceProviderTriggerDetails_adaptor<X> { typedef adapt IGattServiceProviderTriggerDetails; };
struct IGattServiceProviderTriggerDetails : IGattServiceProviderTriggerDetails_raw, generate<IGattServiceProviderTriggerDetails> {};

// GattServiceProviderTriggerDetails
template<typename X> struct statics<GattServiceProviderTriggerDetails, X> : X {
	typedef typename X::root_type GattServiceProviderTriggerDetails;
};
struct GattServiceProviderTriggerDetails : generate<GattServiceProviderTriggerDetails> {};

// IBluetoothLEAdvertisementWatcherTriggerDetails
struct IBluetoothLEAdvertisementWatcherTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
	virtual STDMETHODIMP _get_Advertisements(Foundation::Collections::IVectorView<Advertisement::BluetoothLEAdvertisementReceivedEventArgs*>* *value);
	virtual STDMETHODIMP _get_SignalStrengthFilter(BluetoothSignalStrengthFilter* *value);
};
template<typename X> struct IBluetoothLEAdvertisementWatcherTriggerDetails_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<Advertisement::BluetoothLEAdvertisementReceivedEventArgs>>> get() { Foundation::Collections::IVectorView<Advertisement::BluetoothLEAdvertisementReceivedEventArgs*>* value; hrcheck(enc(&IBluetoothLEAdvertisementWatcherTriggerDetails_adaptor::Advertisements)->_get_Advertisements(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<Advertisement::BluetoothLEAdvertisementReceivedEventArgs>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<Advertisement::BluetoothLEAdvertisementReceivedEventArgs>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<Advertisement::BluetoothLEAdvertisementReceivedEventArgs>>> operator->() { return get(); }
		} Advertisements;
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IBluetoothLEAdvertisementWatcherTriggerDetails_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
		struct : property {
			ptr<BluetoothSignalStrengthFilter> get() { BluetoothSignalStrengthFilter* value; hrcheck(enc(&IBluetoothLEAdvertisementWatcherTriggerDetails_adaptor::SignalStrengthFilter)->_get_SignalStrengthFilter(&value)); return from_abi(value); }
			ptr<BluetoothSignalStrengthFilter> operator()() { return get(); }
			operator ptr<BluetoothSignalStrengthFilter> () { return get(); }
			ptr<BluetoothSignalStrengthFilter> operator->() { return get(); }
		} SignalStrengthFilter;
	};
	IBluetoothLEAdvertisementWatcherTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IBluetoothLEAdvertisementWatcherTriggerDetails, X> : Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementWatcherTriggerDetails_adaptor<X> { typedef adapt IBluetoothLEAdvertisementWatcherTriggerDetails; };
struct IBluetoothLEAdvertisementWatcherTriggerDetails : IBluetoothLEAdvertisementWatcherTriggerDetails_raw, generate<IBluetoothLEAdvertisementWatcherTriggerDetails> {};

// BluetoothLEAdvertisementWatcherTriggerDetails
template<typename X> struct statics<BluetoothLEAdvertisementWatcherTriggerDetails, X> : X {
	typedef typename X::root_type BluetoothLEAdvertisementWatcherTriggerDetails;
};
struct BluetoothLEAdvertisementWatcherTriggerDetails : generate<BluetoothLEAdvertisementWatcherTriggerDetails> {};

// IBluetoothLEAdvertisementPublisherTriggerDetails
struct IBluetoothLEAdvertisementPublisherTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(Advertisement::BluetoothLEAdvertisementPublisherStatus *value);
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
};
template<typename X> struct IBluetoothLEAdvertisementPublisherTriggerDetails_adaptor : X {
	union {
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IBluetoothLEAdvertisementPublisherTriggerDetails_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
		struct : property {
			Advertisement::BluetoothLEAdvertisementPublisherStatus get() { Advertisement::BluetoothLEAdvertisementPublisherStatus value; hrcheck(enc(&IBluetoothLEAdvertisementPublisherTriggerDetails_adaptor::Status)->_get_Status(&value)); return value; }
			Advertisement::BluetoothLEAdvertisementPublisherStatus operator()() { return get(); }
			operator Advertisement::BluetoothLEAdvertisementPublisherStatus () { return get(); }
		} Status;
	};
	IBluetoothLEAdvertisementPublisherTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IBluetoothLEAdvertisementPublisherTriggerDetails, X> : Windows::Devices::Bluetooth::Background::IBluetoothLEAdvertisementPublisherTriggerDetails_adaptor<X> { typedef adapt IBluetoothLEAdvertisementPublisherTriggerDetails; };
struct IBluetoothLEAdvertisementPublisherTriggerDetails : IBluetoothLEAdvertisementPublisherTriggerDetails_raw, generate<IBluetoothLEAdvertisementPublisherTriggerDetails> {};

// BluetoothLEAdvertisementPublisherTriggerDetails
template<typename X> struct statics<BluetoothLEAdvertisementPublisherTriggerDetails, X> : X {
	typedef typename X::root_type BluetoothLEAdvertisementPublisherTriggerDetails;
};
struct BluetoothLEAdvertisementPublisherTriggerDetails : generate<BluetoothLEAdvertisementPublisherTriggerDetails> {};
}}}}
} // namespace iso_winrt
