#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Web { namespace Http {
enum class HttpVersion : int {
	None = 0,
	Http10 = 1,
	Http11 = 2,
	Http20 = 3,
};
enum class HttpCompletionOption : int {
	ResponseContentRead = 0,
	ResponseHeadersRead = 1,
};
enum class HttpStatusCode : int {
	None = 0,
	Continue = 100,
	SwitchingProtocols = 101,
	Processing = 102,
	Ok = 200,
	Created = 201,
	Accepted = 202,
	NonAuthoritativeInformation = 203,
	NoContent = 204,
	ResetContent = 205,
	PartialContent = 206,
	MultiStatus = 207,
	AlreadyReported = 208,
	IMUsed = 226,
	MultipleChoices = 300,
	MovedPermanently = 301,
	Found = 302,
	SeeOther = 303,
	NotModified = 304,
	UseProxy = 305,
	TemporaryRedirect = 307,
	PermanentRedirect = 308,
	BadRequest = 400,
	Unauthorized = 401,
	PaymentRequired = 402,
	Forbidden = 403,
	NotFound = 404,
	MethodNotAllowed = 405,
	NotAcceptable = 406,
	ProxyAuthenticationRequired = 407,
	RequestTimeout = 408,
	Conflict = 409,
	Gone = 410,
	LengthRequired = 411,
	PreconditionFailed = 412,
	RequestEntityTooLarge = 413,
	RequestUriTooLong = 414,
	UnsupportedMediaType = 415,
	RequestedRangeNotSatisfiable = 416,
	ExpectationFailed = 417,
	UnprocessableEntity = 422,
	Locked = 423,
	FailedDependency = 424,
	UpgradeRequired = 426,
	PreconditionRequired = 428,
	TooManyRequests = 429,
	RequestHeaderFieldsTooLarge = 431,
	InternalServerError = 500,
	NotImplemented = 501,
	BadGateway = 502,
	ServiceUnavailable = 503,
	GatewayTimeout = 504,
	HttpVersionNotSupported = 505,
	VariantAlsoNegotiates = 506,
	InsufficientStorage = 507,
	LoopDetected = 508,
	NotExtended = 510,
	NetworkAuthenticationRequired = 511,
};
enum class HttpProgressStage : int {
	None = 0,
	DetectingProxy = 10,
	ResolvingName = 20,
	ConnectingToServer = 30,
	NegotiatingSsl = 40,
	SendingHeaders = 50,
	SendingContent = 60,
	WaitingForResponse = 70,
	ReceivingHeaders = 80,
	ReceivingContent = 90,
};
enum class HttpResponseMessageSource : int {
	None = 0,
	Cache = 1,
	Network = 2,
};
struct HttpProgress {
	HttpProgressStage Stage;
	unsigned __int64 BytesSent;
	ptr<Foundation::IReference<unsigned __int64>> TotalBytesToSend;
	unsigned __int64 BytesReceived;
	ptr<Foundation::IReference<unsigned __int64>> TotalBytesToReceive;
	unsigned Retries;
};
struct IHttpClientFactory;
struct IHttpRequestMessageFactory;
struct IHttpRequestMessage;
struct HttpRequestMessage;
struct IHttpResponseMessageFactory;
struct IHttpResponseMessage;
struct HttpResponseMessage;
struct IHttpClient;
struct HttpClient;
struct IHttpContent;
struct IHttpCookieManager;
struct IHttpCookieFactory;
struct IHttpCookie;
struct HttpCookie;
struct HttpCookieCollection;
struct IHttpMethodStatics;
struct IHttpMethodFactory;
struct IHttpMethod;
struct HttpMethod;
struct IHttpTransportInformation;
struct HttpTransportInformation;
struct IHttpStringContentFactory;
struct HttpStringContent;
struct IHttpBufferContentFactory;
struct HttpBufferContent;
struct IHttpStreamContentFactory;
struct HttpStreamContent;
struct IHttpFormUrlEncodedContentFactory;
struct HttpFormUrlEncodedContent;
struct IHttpMultipartContentFactory;
struct IHttpMultipartContent;
struct HttpMultipartContent;
struct IHttpMultipartFormDataContentFactory;
struct IHttpMultipartFormDataContent;
struct HttpMultipartFormDataContent;
struct HttpCookieManager;
}}}
} // namespace iso_winrt
