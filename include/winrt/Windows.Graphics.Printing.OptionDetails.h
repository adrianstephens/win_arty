#pragma once
// generated by isopod tools
// namespaces:
// Windows.Graphics.Printing.OptionDetails

#include "Windows.Graphics.Printing.OptionDetails.0.h"
#include "Windows.Foundation.0.h"
#include "Windows.Graphics.Printing.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Foundation { namespace Collections {
template<typename K, typename V> struct IMapView;
template<typename T> struct IVectorView;
template<typename T> struct IVector;
}}
namespace Storage { namespace Streams {
struct IRandomAccessStreamWithContentType;
}}}

// defs

template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintOptionStates> : enum_type<unsigned> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintOptionType> : enum_type<int> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails> : overridable_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCopiesOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintMediaSizeOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintMediaTypeOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintOrientationOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintQualityOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintColorModeOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintDuplexOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCollationOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintStapleOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintHolePunchOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintBindingOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintBorderingOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintPageRangeOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails2> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomToggleOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails3> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintNumberOptionDetails> : overridable_type<Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintTextOptionDetails> : overridable_type<Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails> : overridable_type<Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintCopiesOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintNumberOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintCopiesOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintMediaSizeOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintMediaSizeOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintMediaTypeOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintMediaTypeOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintOrientationOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintOrientationOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintQualityOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintQualityOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintColorModeOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintColorModeOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintDuplexOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintDuplexOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintCollationOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintCollationOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintStapleOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintStapleOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintHolePunchOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintHolePunchOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintBindingOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintBindingOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintBorderingOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintBorderingOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintPageRangeOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintPageRangeOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomOptionDetails> : overridable_type<Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails> : interface_type<Windows::Graphics::Printing::OptionDetails::IPrintCustomOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintCustomTextOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails2, Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintCustomToggleOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintCustomOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintCustomToggleOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintCustomItemDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintCustomItemDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails> : interface_type<Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintCustomOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails2> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintCustomItemListOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails, Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails3, Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails2, Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionChangedEventArgs> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintTaskOptionChangedEventArgs> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionChangedEventArgs> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetailsStatic> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails2> : interface_type<> {};
template<> struct def<Windows::Graphics::Printing::OptionDetails::PrintTaskOptionDetails> : class_type<Platform::Object, Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails, Windows::Graphics::Printing::IPrintTaskOptionsCore, Windows::Graphics::Printing::IPrintTaskOptionsCoreUIConfiguration, Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails2> {};

// uuids

template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails> { define_guid(0x390686CF, 0xD682, 0x495F, 0xAD, 0xFE, 0xD7, 0x33, 0x3F, 0x5C, 0x18, 0x8);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCopiesOptionDetails> { define_guid(0x42053099, 0x4339, 0x4343, 0x89, 0x8D, 0x2C, 0x47, 0xB5, 0xE0, 0xC3, 0x41);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintMediaSizeOptionDetails> { define_guid(0x6C8D5BCF, 0xC0BF, 0x47C8, 0xB8, 0x4A, 0x62, 0x8E, 0x7D, 0xD, 0x1A, 0x1D);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintMediaTypeOptionDetails> { define_guid(0xF8C7000B, 0xABF3, 0x4ABC, 0x8E, 0x86, 0x22, 0xAB, 0xC5, 0x74, 0x4A, 0x43);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintOrientationOptionDetails> { define_guid(0x46C38879, 0x66E0, 0x4DA0, 0x87, 0xB4, 0xD2, 0x54, 0x57, 0x82, 0x4E, 0xB7);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintQualityOptionDetails> { define_guid(0x2DD06BA1, 0xCE1A, 0x44E6, 0x84, 0xF9, 0x3A, 0x92, 0xEA, 0x1E, 0x30, 0x44);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintColorModeOptionDetails> { define_guid(0xDBA97704, 0xF1D6, 0x4843, 0xA4, 0x84, 0x9B, 0x44, 0x7C, 0xDC, 0xF3, 0xB6);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintDuplexOptionDetails> { define_guid(0xFCD94591, 0xD4A4, 0x44FA, 0xB3, 0xFE, 0x42, 0xE0, 0xBA, 0x28, 0xD5, 0xAD);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCollationOptionDetails> { define_guid(0xD6ABB166, 0xA5A6, 0x40DC, 0xAC, 0xC3, 0x73, 0x9F, 0x28, 0xF1, 0xE5, 0xD3);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintStapleOptionDetails> { define_guid(0xD43175BD, 0x9C0B, 0x44E0, 0x84, 0xF6, 0xCE, 0xEB, 0xCE, 0x65, 0x38, 0x0);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintHolePunchOptionDetails> { define_guid(0xA6DE1F18, 0x482C, 0x4657, 0x9D, 0x71, 0x8D, 0xDD, 0xDB, 0xEA, 0x1E, 0x1E);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintBindingOptionDetails> { define_guid(0xC3F4CC98, 0x9564, 0x4F16, 0xA0, 0x55, 0xA9, 0x8B, 0x9A, 0x49, 0xE9, 0xD3);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintBorderingOptionDetails> { define_guid(0x4D73BC8F, 0xFB53, 0x4EB2, 0x98, 0x5F, 0x1D, 0x91, 0xDE, 0xB, 0x76, 0x39);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintPageRangeOptionDetails> { define_guid(0x5A19E4B7, 0x2BE8, 0x4AA7, 0x9E, 0xA5, 0xDE, 0xFB, 0xE8, 0x71, 0x3B, 0x4E);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails2> { define_guid(0xCEA70B54, 0xB977, 0x4718, 0x83, 0x38, 0x7E, 0xD2, 0xB0, 0xD8, 0x6F, 0xE3);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomToggleOptionDetails> { define_guid(0x9DB4D514, 0xE461, 0x4608, 0x8E, 0xE9, 0xDB, 0x6F, 0x5E, 0xD0, 0x73, 0xC6);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails3> { define_guid(0x4FA1B53F, 0x3C34, 0x4868, 0xA4, 0x7, 0xFC, 0x5E, 0xAB, 0x25, 0x9B, 0x21);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintNumberOptionDetails> { define_guid(0x4D01BBAF, 0x645C, 0x4DE9, 0x96, 0x5F, 0x6F, 0xC6, 0xBB, 0xC4, 0x7C, 0xAB);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintTextOptionDetails> { define_guid(0xAD75E563, 0x5CE4, 0x46BC, 0x99, 0x18, 0xAB, 0x9F, 0xAD, 0x14, 0x4C, 0x5B);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails> { define_guid(0x9A2257BF, 0xFE61, 0x43D8, 0xA2, 0x4F, 0xA3, 0xF6, 0xAB, 0x73, 0x20, 0xE7);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomOptionDetails> { define_guid(0xE32BDE1C, 0x28AF, 0x4B90, 0x95, 0xDA, 0xA3, 0xAC, 0xF3, 0x20, 0xB9, 0x29);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails> { define_guid(0x2AD171F8, 0xC8BD, 0x4905, 0x91, 0x92, 0xD, 0x75, 0x13, 0x6E, 0x8B, 0x31);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemDetails> { define_guid(0x5704B637, 0x5C3A, 0x449A, 0xAA, 0x36, 0xB3, 0x29, 0x1B, 0x11, 0x92, 0xFD);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails> { define_guid(0xA5FAFD88, 0x58F2, 0x4EBD, 0xB9, 0xF, 0x51, 0xE4, 0xF2, 0x94, 0x4C, 0x5D);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails2> { define_guid(0xC9D6353D, 0x651C, 0x4A39, 0x90, 0x6E, 0x10, 0x91, 0xA1, 0x80, 0x1B, 0xF1);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionChangedEventArgs> { define_guid(0x65197D05, 0xA5EE, 0x4307, 0x94, 0x7, 0x9A, 0xCA, 0xD1, 0x47, 0x67, 0x9C);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails> { define_guid(0xF5720AF1, 0xA89E, 0x42A6, 0x81, 0xAF, 0xF8, 0xE0, 0x10, 0xB3, 0x8A, 0x68);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetailsStatic> { define_guid(0x135DA193, 0x961, 0x4B6E, 0x87, 0x66, 0xF1, 0x3B, 0x7F, 0xBC, 0xCD, 0x58);};
template<> struct uuid<Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails2> { define_guid(0x53730A09, 0xF968, 0x4692, 0xA1, 0x77, 0xC0, 0x74, 0x59, 0x71, 0x86, 0xDB);};

// types

namespace Windows { namespace Graphics { namespace Printing { namespace OptionDetails {

// IPrintOptionDetails
struct IPrintOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_OptionId(HSTRING *value) = 0;
	virtual STDMETHODIMP _get_OptionType(PrintOptionType *value) = 0;
	virtual STDMETHODIMP _put_ErrorText(HSTRING value) = 0;
	virtual STDMETHODIMP _get_ErrorText(HSTRING *value) = 0;
	virtual STDMETHODIMP _put_State(PrintOptionStates value) = 0;
	virtual STDMETHODIMP _get_State(PrintOptionStates *value) = 0;
	virtual STDMETHODIMP _get_Value(IInspectable* *value) = 0;
	virtual STDMETHODIMP _TrySetValue(IInspectable* value, bool *succeeded) = 0;
};
template<typename X> struct IPrintOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintOptionDetails_adaptor::ErrorText)->_get_ErrorText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintOptionDetails_adaptor::ErrorText)->_put_ErrorText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} ErrorText;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintOptionDetails_adaptor::OptionId)->_get_OptionId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} OptionId;
		struct : property {
			PrintOptionType get() { PrintOptionType value; hrcheck(enc(&IPrintOptionDetails_adaptor::OptionType)->_get_OptionType(&value)); return value; }
			PrintOptionType operator()() { return get(); }
			operator PrintOptionType () { return get(); }
		} OptionType;
		struct : property {
			PrintOptionStates get() { PrintOptionStates value; hrcheck(enc(&IPrintOptionDetails_adaptor::State)->_get_State(&value)); return value; }
			PrintOptionStates operator()() { return get(); }
			operator PrintOptionStates () { return get(); }
			void put(PrintOptionStates value) { hrcheck(enc(&IPrintOptionDetails_adaptor::State)->_put_State(value)); }
			void operator=(PrintOptionStates value) { put(value); }
			void operator()(PrintOptionStates value) { put(value); }
		} State;
		struct : property {
			object get() { IInspectable* value; hrcheck(enc(&IPrintOptionDetails_adaptor::Value)->_get_Value(&value)); return from_abi(value); }
			object operator()() { return get(); }
			operator object () { return get(); }
		} Value;
	};
	bool TrySetValue(object_ref value) { bool succeeded; hrcheck(X::get()->_TrySetValue(value, &succeeded)); return succeeded; }
	IPrintOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails_adaptor<X> { typedef adapt IPrintOptionDetails; };
template<typename X> struct IPrintOptionDetails_unadaptor : X {
	STDMETHODIMP _get_OptionId(HSTRING *value) { return hrtry([&, this] { get_prop(value, OptionId); }); }
	STDMETHODIMP _get_OptionType(PrintOptionType *value) { return hrtry([&, this] { get_prop(value, OptionType); }); }
	STDMETHODIMP _put_ErrorText(HSTRING value) { return hrtry([&, this] { put_prop(value, ErrorText); }); }
	STDMETHODIMP _get_ErrorText(HSTRING *value) { return hrtry([&, this] { get_prop(value, ErrorText); }); }
	STDMETHODIMP _put_State(PrintOptionStates value) { return hrtry([&, this] { put_prop(value, State); }); }
	STDMETHODIMP _get_State(PrintOptionStates *value) { return hrtry([&, this] { get_prop(value, State); }); }
	STDMETHODIMP _get_Value(IInspectable* *value) { return hrtry([&, this] { get_prop(value, Value); }); }
	STDMETHODIMP _TrySetValue(IInspectable* value, bool *succeeded) { return hrtry([&, this] { *succeeded = X::get()->TrySetValue(value); }); }
};
template<typename X> struct unadapt<IPrintOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintOptionDetails_unadaptor<X> {};
struct IPrintOptionDetails : IPrintOptionDetails_raw, generate<IPrintOptionDetails> {};

// IPrintCopiesOptionDetails
struct IPrintCopiesOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintCopiesOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCopiesOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCopiesOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCopiesOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCopiesOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintCopiesOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintCopiesOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCopiesOptionDetails_adaptor<X> { typedef adapt IPrintCopiesOptionDetails; };
struct IPrintCopiesOptionDetails : IPrintCopiesOptionDetails_raw, generate<IPrintCopiesOptionDetails> {};

// IPrintMediaSizeOptionDetails
struct IPrintMediaSizeOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintMediaSizeOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintMediaSizeOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintMediaSizeOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintMediaSizeOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintMediaSizeOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintMediaSizeOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintMediaSizeOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintMediaSizeOptionDetails_adaptor<X> { typedef adapt IPrintMediaSizeOptionDetails; };
struct IPrintMediaSizeOptionDetails : IPrintMediaSizeOptionDetails_raw, generate<IPrintMediaSizeOptionDetails> {};

// IPrintMediaTypeOptionDetails
struct IPrintMediaTypeOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintMediaTypeOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintMediaTypeOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintMediaTypeOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintMediaTypeOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintMediaTypeOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintMediaTypeOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintMediaTypeOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintMediaTypeOptionDetails_adaptor<X> { typedef adapt IPrintMediaTypeOptionDetails; };
struct IPrintMediaTypeOptionDetails : IPrintMediaTypeOptionDetails_raw, generate<IPrintMediaTypeOptionDetails> {};

// IPrintOrientationOptionDetails
struct IPrintOrientationOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintOrientationOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintOrientationOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintOrientationOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintOrientationOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintOrientationOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintOrientationOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintOrientationOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintOrientationOptionDetails_adaptor<X> { typedef adapt IPrintOrientationOptionDetails; };
struct IPrintOrientationOptionDetails : IPrintOrientationOptionDetails_raw, generate<IPrintOrientationOptionDetails> {};

// IPrintQualityOptionDetails
struct IPrintQualityOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintQualityOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintQualityOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintQualityOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintQualityOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintQualityOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintQualityOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintQualityOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintQualityOptionDetails_adaptor<X> { typedef adapt IPrintQualityOptionDetails; };
struct IPrintQualityOptionDetails : IPrintQualityOptionDetails_raw, generate<IPrintQualityOptionDetails> {};

// IPrintColorModeOptionDetails
struct IPrintColorModeOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintColorModeOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintColorModeOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintColorModeOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintColorModeOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintColorModeOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintColorModeOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintColorModeOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintColorModeOptionDetails_adaptor<X> { typedef adapt IPrintColorModeOptionDetails; };
struct IPrintColorModeOptionDetails : IPrintColorModeOptionDetails_raw, generate<IPrintColorModeOptionDetails> {};

// IPrintDuplexOptionDetails
struct IPrintDuplexOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintDuplexOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintDuplexOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintDuplexOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintDuplexOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintDuplexOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintDuplexOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintDuplexOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintDuplexOptionDetails_adaptor<X> { typedef adapt IPrintDuplexOptionDetails; };
struct IPrintDuplexOptionDetails : IPrintDuplexOptionDetails_raw, generate<IPrintDuplexOptionDetails> {};

// IPrintCollationOptionDetails
struct IPrintCollationOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintCollationOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCollationOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCollationOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCollationOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCollationOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintCollationOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintCollationOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCollationOptionDetails_adaptor<X> { typedef adapt IPrintCollationOptionDetails; };
struct IPrintCollationOptionDetails : IPrintCollationOptionDetails_raw, generate<IPrintCollationOptionDetails> {};

// IPrintStapleOptionDetails
struct IPrintStapleOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintStapleOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintStapleOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintStapleOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintStapleOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintStapleOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintStapleOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintStapleOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintStapleOptionDetails_adaptor<X> { typedef adapt IPrintStapleOptionDetails; };
struct IPrintStapleOptionDetails : IPrintStapleOptionDetails_raw, generate<IPrintStapleOptionDetails> {};

// IPrintHolePunchOptionDetails
struct IPrintHolePunchOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintHolePunchOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintHolePunchOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintHolePunchOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintHolePunchOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintHolePunchOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintHolePunchOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintHolePunchOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintHolePunchOptionDetails_adaptor<X> { typedef adapt IPrintHolePunchOptionDetails; };
struct IPrintHolePunchOptionDetails : IPrintHolePunchOptionDetails_raw, generate<IPrintHolePunchOptionDetails> {};

// IPrintBindingOptionDetails
struct IPrintBindingOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintBindingOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintBindingOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintBindingOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintBindingOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintBindingOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintBindingOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintBindingOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintBindingOptionDetails_adaptor<X> { typedef adapt IPrintBindingOptionDetails; };
struct IPrintBindingOptionDetails : IPrintBindingOptionDetails_raw, generate<IPrintBindingOptionDetails> {};

// IPrintBorderingOptionDetails
struct IPrintBorderingOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintBorderingOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintBorderingOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintBorderingOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintBorderingOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintBorderingOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintBorderingOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintBorderingOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintBorderingOptionDetails_adaptor<X> { typedef adapt IPrintBorderingOptionDetails; };
struct IPrintBorderingOptionDetails : IPrintBorderingOptionDetails_raw, generate<IPrintBorderingOptionDetails> {};

// IPrintPageRangeOptionDetails
struct IPrintPageRangeOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintPageRangeOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintPageRangeOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintPageRangeOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintPageRangeOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintPageRangeOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintPageRangeOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintPageRangeOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintPageRangeOptionDetails_adaptor<X> { typedef adapt IPrintPageRangeOptionDetails; };
struct IPrintPageRangeOptionDetails : IPrintPageRangeOptionDetails_raw, generate<IPrintPageRangeOptionDetails> {};

// IPrintCustomTextOptionDetails2
struct IPrintCustomTextOptionDetails2_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintCustomTextOptionDetails2_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomTextOptionDetails2_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomTextOptionDetails2_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomTextOptionDetails2_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomTextOptionDetails2_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintCustomTextOptionDetails2_adaptor() {}
};
template<typename X> struct adapt<IPrintCustomTextOptionDetails2, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails2_adaptor<X> { typedef adapt IPrintCustomTextOptionDetails2; };
struct IPrintCustomTextOptionDetails2 : IPrintCustomTextOptionDetails2_raw, generate<IPrintCustomTextOptionDetails2> {};

// IPrintCustomToggleOptionDetails
struct IPrintCustomToggleOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintCustomToggleOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomToggleOptionDetails_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomToggleOptionDetails_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomToggleOptionDetails_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomToggleOptionDetails_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintCustomToggleOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintCustomToggleOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomToggleOptionDetails_adaptor<X> { typedef adapt IPrintCustomToggleOptionDetails; };
struct IPrintCustomToggleOptionDetails : IPrintCustomToggleOptionDetails_raw, generate<IPrintCustomToggleOptionDetails> {};

// IPrintCustomItemListOptionDetails3
struct IPrintCustomItemListOptionDetails3_raw : IInspectable {
	virtual STDMETHODIMP _put_WarningText(HSTRING value);
	virtual STDMETHODIMP _get_WarningText(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
};
template<typename X> struct IPrintCustomItemListOptionDetails3_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomItemListOptionDetails3_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomItemListOptionDetails3_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomItemListOptionDetails3_adaptor::WarningText)->_get_WarningText(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomItemListOptionDetails3_adaptor::WarningText)->_put_WarningText(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} WarningText;
	};
	IPrintCustomItemListOptionDetails3_adaptor() {}
};
template<typename X> struct adapt<IPrintCustomItemListOptionDetails3, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails3_adaptor<X> { typedef adapt IPrintCustomItemListOptionDetails3; };
struct IPrintCustomItemListOptionDetails3 : IPrintCustomItemListOptionDetails3_raw, generate<IPrintCustomItemListOptionDetails3> {};

// IPrintNumberOptionDetails
struct IPrintNumberOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_MinValue(unsigned *value) = 0;
	virtual STDMETHODIMP _get_MaxValue(unsigned *value) = 0;
};
template<typename X> struct IPrintNumberOptionDetails_adaptor : X {
	union {
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IPrintNumberOptionDetails_adaptor::MaxValue)->_get_MaxValue(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} MaxValue;
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IPrintNumberOptionDetails_adaptor::MinValue)->_get_MinValue(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} MinValue;
	};
	IPrintNumberOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintNumberOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintNumberOptionDetails_adaptor<X> { typedef adapt IPrintNumberOptionDetails; };
template<typename X> struct IPrintNumberOptionDetails_unadaptor : X {
	STDMETHODIMP _get_MinValue(unsigned *value) { return hrtry([&, this] { get_prop(value, MinValue); }); }
	STDMETHODIMP _get_MaxValue(unsigned *value) { return hrtry([&, this] { get_prop(value, MaxValue); }); }
};
template<typename X> struct unadapt<IPrintNumberOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintNumberOptionDetails_unadaptor<X> {};
struct IPrintNumberOptionDetails : IPrintNumberOptionDetails_raw, generate<IPrintNumberOptionDetails> {};

// IPrintTextOptionDetails
struct IPrintTextOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_MaxCharacters(unsigned *value) = 0;
};
template<typename X> struct IPrintTextOptionDetails_adaptor : X {
	union {
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IPrintTextOptionDetails_adaptor::MaxCharacters)->_get_MaxCharacters(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} MaxCharacters;
	};
	IPrintTextOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintTextOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintTextOptionDetails_adaptor<X> { typedef adapt IPrintTextOptionDetails; };
template<typename X> struct IPrintTextOptionDetails_unadaptor : X {
	STDMETHODIMP _get_MaxCharacters(unsigned *value) { return hrtry([&, this] { get_prop(value, MaxCharacters); }); }
};
template<typename X> struct unadapt<IPrintTextOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintTextOptionDetails_unadaptor<X> {};
struct IPrintTextOptionDetails : IPrintTextOptionDetails_raw, generate<IPrintTextOptionDetails> {};

// IPrintItemListOptionDetails
struct IPrintItemListOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Items(Foundation::Collections::IVectorView<IInspectable*>* *value) = 0;
};
template<typename X> struct IPrintItemListOptionDetails_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVectorView<object>> get() { Foundation::Collections::IVectorView<IInspectable*>* value; hrcheck(enc(&IPrintItemListOptionDetails_adaptor::Items)->_get_Items(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<object>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<object>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<object>> operator->() { return get(); }
		} Items;
	};
	IPrintItemListOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintItemListOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails_adaptor<X> { typedef adapt IPrintItemListOptionDetails; };
template<typename X> struct IPrintItemListOptionDetails_unadaptor : X {
	STDMETHODIMP _get_Items(Foundation::Collections::IVectorView<IInspectable*>* *value) { return hrtry([&, this] { get_prop(value, Items); }); }
};
template<typename X> struct unadapt<IPrintItemListOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintItemListOptionDetails_unadaptor<X> {};
struct IPrintItemListOptionDetails : IPrintItemListOptionDetails_raw, generate<IPrintItemListOptionDetails> {};

// PrintCopiesOptionDetails
template<typename X> struct statics<PrintCopiesOptionDetails, X> : X {
	typedef typename X::root_type PrintCopiesOptionDetails;
};
struct PrintCopiesOptionDetails : generate<PrintCopiesOptionDetails> {};

// PrintMediaSizeOptionDetails
template<typename X> struct statics<PrintMediaSizeOptionDetails, X> : X {
	typedef typename X::root_type PrintMediaSizeOptionDetails;
};
struct PrintMediaSizeOptionDetails : generate<PrintMediaSizeOptionDetails> {};

// PrintMediaTypeOptionDetails
template<typename X> struct statics<PrintMediaTypeOptionDetails, X> : X {
	typedef typename X::root_type PrintMediaTypeOptionDetails;
};
struct PrintMediaTypeOptionDetails : generate<PrintMediaTypeOptionDetails> {};

// PrintOrientationOptionDetails
template<typename X> struct statics<PrintOrientationOptionDetails, X> : X {
	typedef typename X::root_type PrintOrientationOptionDetails;
};
struct PrintOrientationOptionDetails : generate<PrintOrientationOptionDetails> {};

// PrintQualityOptionDetails
template<typename X> struct statics<PrintQualityOptionDetails, X> : X {
	typedef typename X::root_type PrintQualityOptionDetails;
};
struct PrintQualityOptionDetails : generate<PrintQualityOptionDetails> {};

// PrintColorModeOptionDetails
template<typename X> struct statics<PrintColorModeOptionDetails, X> : X {
	typedef typename X::root_type PrintColorModeOptionDetails;
};
struct PrintColorModeOptionDetails : generate<PrintColorModeOptionDetails> {};

// PrintDuplexOptionDetails
template<typename X> struct statics<PrintDuplexOptionDetails, X> : X {
	typedef typename X::root_type PrintDuplexOptionDetails;
};
struct PrintDuplexOptionDetails : generate<PrintDuplexOptionDetails> {};

// PrintCollationOptionDetails
template<typename X> struct statics<PrintCollationOptionDetails, X> : X {
	typedef typename X::root_type PrintCollationOptionDetails;
};
struct PrintCollationOptionDetails : generate<PrintCollationOptionDetails> {};

// PrintStapleOptionDetails
template<typename X> struct statics<PrintStapleOptionDetails, X> : X {
	typedef typename X::root_type PrintStapleOptionDetails;
};
struct PrintStapleOptionDetails : generate<PrintStapleOptionDetails> {};

// PrintHolePunchOptionDetails
template<typename X> struct statics<PrintHolePunchOptionDetails, X> : X {
	typedef typename X::root_type PrintHolePunchOptionDetails;
};
struct PrintHolePunchOptionDetails : generate<PrintHolePunchOptionDetails> {};

// PrintBindingOptionDetails
template<typename X> struct statics<PrintBindingOptionDetails, X> : X {
	typedef typename X::root_type PrintBindingOptionDetails;
};
struct PrintBindingOptionDetails : generate<PrintBindingOptionDetails> {};

// PrintBorderingOptionDetails
template<typename X> struct statics<PrintBorderingOptionDetails, X> : X {
	typedef typename X::root_type PrintBorderingOptionDetails;
};
struct PrintBorderingOptionDetails : generate<PrintBorderingOptionDetails> {};

// PrintPageRangeOptionDetails
template<typename X> struct statics<PrintPageRangeOptionDetails, X> : X {
	typedef typename X::root_type PrintPageRangeOptionDetails;
};
struct PrintPageRangeOptionDetails : generate<PrintPageRangeOptionDetails> {};

// IPrintCustomOptionDetails
struct IPrintCustomOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_DisplayName(HSTRING value) = 0;
	virtual STDMETHODIMP _get_DisplayName(HSTRING *value) = 0;
};
template<typename X> struct IPrintCustomOptionDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomOptionDetails_adaptor::DisplayName)->_get_DisplayName(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomOptionDetails_adaptor::DisplayName)->_put_DisplayName(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} DisplayName;
	};
	IPrintCustomOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintCustomOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomOptionDetails_adaptor<X> { typedef adapt IPrintCustomOptionDetails; };
template<typename X> struct IPrintCustomOptionDetails_unadaptor : X {
	STDMETHODIMP _put_DisplayName(HSTRING value) { return hrtry([&, this] { put_prop(value, DisplayName); }); }
	STDMETHODIMP _get_DisplayName(HSTRING *value) { return hrtry([&, this] { get_prop(value, DisplayName); }); }
};
template<typename X> struct unadapt<IPrintCustomOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomOptionDetails_unadaptor<X> {};
struct IPrintCustomOptionDetails : IPrintCustomOptionDetails_raw, generate<IPrintCustomOptionDetails> {};

// IPrintCustomTextOptionDetails
struct IPrintCustomTextOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _put_MaxCharacters(unsigned value);
	virtual STDMETHODIMP _get_MaxCharacters(unsigned *value);
};
template<typename X> struct IPrintCustomTextOptionDetails_adaptor : X {
	union {
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IPrintCustomTextOptionDetails_adaptor::MaxCharacters)->_get_MaxCharacters(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
			void put(unsigned value) { hrcheck(enc(&IPrintCustomTextOptionDetails_adaptor::MaxCharacters)->_put_MaxCharacters(value)); }
			void operator=(unsigned value) { put(value); }
			void operator()(unsigned value) { put(value); }
		} MaxCharacters;
	};
	IPrintCustomTextOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintCustomTextOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomTextOptionDetails_adaptor<X> { typedef adapt IPrintCustomTextOptionDetails; };
struct IPrintCustomTextOptionDetails : IPrintCustomTextOptionDetails_raw, generate<IPrintCustomTextOptionDetails> {};

// PrintCustomTextOptionDetails
template<typename X> struct statics<PrintCustomTextOptionDetails, X> : X {
	typedef typename X::root_type PrintCustomTextOptionDetails;
};
struct PrintCustomTextOptionDetails : generate<PrintCustomTextOptionDetails> {};

// PrintCustomToggleOptionDetails
template<typename X> struct statics<PrintCustomToggleOptionDetails, X> : X {
	typedef typename X::root_type PrintCustomToggleOptionDetails;
};
struct PrintCustomToggleOptionDetails : generate<PrintCustomToggleOptionDetails> {};

// IPrintCustomItemDetails
struct IPrintCustomItemDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_ItemId(HSTRING *value);
	virtual STDMETHODIMP _put_ItemDisplayName(HSTRING value);
	virtual STDMETHODIMP _get_ItemDisplayName(HSTRING *value);
};
template<typename X> struct IPrintCustomItemDetails_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomItemDetails_adaptor::ItemDisplayName)->_get_ItemDisplayName(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IPrintCustomItemDetails_adaptor::ItemDisplayName)->_put_ItemDisplayName(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} ItemDisplayName;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IPrintCustomItemDetails_adaptor::ItemId)->_get_ItemId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ItemId;
	};
	IPrintCustomItemDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintCustomItemDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomItemDetails_adaptor<X> { typedef adapt IPrintCustomItemDetails; };
struct IPrintCustomItemDetails : IPrintCustomItemDetails_raw, generate<IPrintCustomItemDetails> {};

// PrintCustomItemDetails
template<typename X> struct statics<PrintCustomItemDetails, X> : X {
	typedef typename X::root_type PrintCustomItemDetails;
};
struct PrintCustomItemDetails : generate<PrintCustomItemDetails> {};

// IPrintCustomItemListOptionDetails
struct IPrintCustomItemListOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _AddItem(HSTRING itemId, HSTRING displayName);
};
template<typename X> struct IPrintCustomItemListOptionDetails_adaptor : X {
	void AddItem(hstring_ref itemId, hstring_ref displayName) { hrcheck(X::get()->_AddItem(itemId, displayName)); }
};
template<typename X> struct adapt<IPrintCustomItemListOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails_adaptor<X> { typedef adapt IPrintCustomItemListOptionDetails; };
struct IPrintCustomItemListOptionDetails : IPrintCustomItemListOptionDetails_raw, generate<IPrintCustomItemListOptionDetails> {};

// IPrintCustomItemListOptionDetails2
struct IPrintCustomItemListOptionDetails2_raw : IInspectable {
	virtual STDMETHODIMP _AddItem(HSTRING itemId, HSTRING displayName, HSTRING description, Storage::Streams::IRandomAccessStreamWithContentType* icon);
};
template<typename X> struct IPrintCustomItemListOptionDetails2_adaptor : X {
	void AddItem(hstring_ref itemId, hstring_ref displayName, hstring_ref description, pptr<Storage::Streams::IRandomAccessStreamWithContentType> icon) { hrcheck(X::get()->_AddItem(itemId, displayName, description, icon)); }
};
template<typename X> struct adapt<IPrintCustomItemListOptionDetails2, X> : Windows::Graphics::Printing::OptionDetails::IPrintCustomItemListOptionDetails2_adaptor<X> { typedef adapt IPrintCustomItemListOptionDetails2; };
struct IPrintCustomItemListOptionDetails2 : IPrintCustomItemListOptionDetails2_raw, generate<IPrintCustomItemListOptionDetails2> {};

// PrintCustomItemListOptionDetails
template<typename X> struct statics<PrintCustomItemListOptionDetails, X> : X {
	typedef typename X::root_type PrintCustomItemListOptionDetails;
};
struct PrintCustomItemListOptionDetails : generate<PrintCustomItemListOptionDetails> {
	using IPrintCustomItemListOptionDetails::AddItem;
	using IPrintCustomItemListOptionDetails2::AddItem;
};

// IPrintTaskOptionChangedEventArgs
struct IPrintTaskOptionChangedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_OptionId(IInspectable* *value);
};
template<typename X> struct IPrintTaskOptionChangedEventArgs_adaptor : X {
	union {
		struct : property {
			object get() { IInspectable* value; hrcheck(enc(&IPrintTaskOptionChangedEventArgs_adaptor::OptionId)->_get_OptionId(&value)); return from_abi(value); }
			object operator()() { return get(); }
			operator object () { return get(); }
		} OptionId;
	};
	IPrintTaskOptionChangedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IPrintTaskOptionChangedEventArgs, X> : Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionChangedEventArgs_adaptor<X> { typedef adapt IPrintTaskOptionChangedEventArgs; };
struct IPrintTaskOptionChangedEventArgs : IPrintTaskOptionChangedEventArgs_raw, generate<IPrintTaskOptionChangedEventArgs> {};

// PrintTaskOptionChangedEventArgs
template<typename X> struct statics<PrintTaskOptionChangedEventArgs, X> : X {
	typedef typename X::root_type PrintTaskOptionChangedEventArgs;
};
struct PrintTaskOptionChangedEventArgs : generate<PrintTaskOptionChangedEventArgs> {};

// IPrintTaskOptionDetails
struct IPrintTaskOptionDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Options(Foundation::Collections::IMapView<HSTRING, IPrintOptionDetails*>* *value);
	virtual STDMETHODIMP _CreateItemListOption(HSTRING optionId, HSTRING displayName, PrintCustomItemListOptionDetails* *itemListOption);
	virtual STDMETHODIMP _CreateTextOption(HSTRING optionId, HSTRING displayName, PrintCustomTextOptionDetails* *textOption);
	virtual STDMETHODIMP _add_OptionChanged(Foundation::TypedEventHandler<PrintTaskOptionDetails*, PrintTaskOptionChangedEventArgs*>* eventHandler, Foundation::EventRegistrationToken *eventCookie);
	virtual STDMETHODIMP _remove_OptionChanged(Foundation::EventRegistrationToken eventCookie);
	virtual STDMETHODIMP _add_BeginValidation(Foundation::TypedEventHandler<PrintTaskOptionDetails*, IInspectable*>* eventHandler, Foundation::EventRegistrationToken *eventCookie);
	virtual STDMETHODIMP _remove_BeginValidation(Foundation::EventRegistrationToken eventCookie);
};
template<typename X> struct IPrintTaskOptionDetails_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IMapView<hstring, ptr<IPrintOptionDetails>>> get() { Foundation::Collections::IMapView<HSTRING, IPrintOptionDetails*>* value; hrcheck(enc(&IPrintTaskOptionDetails_adaptor::Options)->_get_Options(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IMapView<hstring, ptr<IPrintOptionDetails>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IMapView<hstring, ptr<IPrintOptionDetails>>> () { return get(); }
			ptr<Foundation::Collections::IMapView<hstring, ptr<IPrintOptionDetails>>> operator->() { return get(); }
		} Options;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<PrintTaskOptionDetails>, object>> eventHandler) { Foundation::EventRegistrationToken eventCookie; hrcheck(enc(&IPrintTaskOptionDetails_adaptor::BeginValidation)->_add_BeginValidation(to_abi(eventHandler), &eventCookie)); return eventCookie; }
			void operator-=(const Foundation::EventRegistrationToken& eventCookie) { hrcheck(enc(&IPrintTaskOptionDetails_adaptor::BeginValidation)->_remove_BeginValidation(eventCookie)); }
		} BeginValidation;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<PrintTaskOptionDetails>, ptr<PrintTaskOptionChangedEventArgs>>> eventHandler) { Foundation::EventRegistrationToken eventCookie; hrcheck(enc(&IPrintTaskOptionDetails_adaptor::OptionChanged)->_add_OptionChanged(to_abi(eventHandler), &eventCookie)); return eventCookie; }
			void operator-=(const Foundation::EventRegistrationToken& eventCookie) { hrcheck(enc(&IPrintTaskOptionDetails_adaptor::OptionChanged)->_remove_OptionChanged(eventCookie)); }
		} OptionChanged;
	};
	ptr<PrintCustomItemListOptionDetails> CreateItemListOption(hstring_ref optionId, hstring_ref displayName) { PrintCustomItemListOptionDetails* itemListOption; hrcheck(X::get()->_CreateItemListOption(optionId, displayName, &itemListOption)); return from_abi(itemListOption); }
	ptr<PrintCustomTextOptionDetails> CreateTextOption(hstring_ref optionId, hstring_ref displayName) { PrintCustomTextOptionDetails* textOption; hrcheck(X::get()->_CreateTextOption(optionId, displayName, &textOption)); return from_abi(textOption); }
	IPrintTaskOptionDetails_adaptor() {}
};
template<typename X> struct adapt<IPrintTaskOptionDetails, X> : Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails_adaptor<X> { typedef adapt IPrintTaskOptionDetails; };
struct IPrintTaskOptionDetails : IPrintTaskOptionDetails_raw, generate<IPrintTaskOptionDetails> {};

// IPrintTaskOptionDetailsStatic
struct IPrintTaskOptionDetailsStatic : IInspectable {
	virtual STDMETHODIMP _GetFromPrintTaskOptions(PrintTaskOptions* printTaskOptions, PrintTaskOptionDetails* *printTaskOptionDetails);
};

// IPrintTaskOptionDetails2
struct IPrintTaskOptionDetails2_raw : IInspectable {
	virtual STDMETHODIMP _CreateToggleOption(HSTRING optionId, HSTRING displayName, PrintCustomToggleOptionDetails* *toggleOption);
};
template<typename X> struct IPrintTaskOptionDetails2_adaptor : X {
	ptr<PrintCustomToggleOptionDetails> CreateToggleOption(hstring_ref optionId, hstring_ref displayName) { PrintCustomToggleOptionDetails* toggleOption; hrcheck(X::get()->_CreateToggleOption(optionId, displayName, &toggleOption)); return from_abi(toggleOption); }
};
template<typename X> struct adapt<IPrintTaskOptionDetails2, X> : Windows::Graphics::Printing::OptionDetails::IPrintTaskOptionDetails2_adaptor<X> { typedef adapt IPrintTaskOptionDetails2; };
struct IPrintTaskOptionDetails2 : IPrintTaskOptionDetails2_raw, generate<IPrintTaskOptionDetails2> {};

// PrintTaskOptionDetails
template<typename> struct PrintTaskOptionDetails_statics {
	static ptr<PrintTaskOptionDetails> GetFromPrintTaskOptions(pptr<PrintTaskOptions> printTaskOptions) { PrintTaskOptionDetails* printTaskOptionDetails; hrcheck(get_activation_factory<PrintTaskOptionDetails, IPrintTaskOptionDetailsStatic>()->_GetFromPrintTaskOptions(printTaskOptions, &printTaskOptionDetails)); return from_abi(printTaskOptionDetails); }
};

template<typename X> struct statics<PrintTaskOptionDetails, X> : X, Windows::Graphics::Printing::OptionDetails::PrintTaskOptionDetails_statics<void> {
	typedef typename X::root_type PrintTaskOptionDetails;
};
struct PrintTaskOptionDetails : generate<PrintTaskOptionDetails> {};
}}}}
} // namespace iso_winrt
