#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Devices { namespace Gpio {
enum class GpioSharingMode : int {
	Exclusive = 0,
	SharedReadOnly = 1,
};
enum class GpioOpenStatus : int {
	PinOpened = 0,
	PinUnavailable = 1,
	SharingViolation = 2,
	MuxingConflict = 3,
	UnknownError = 4,
};
enum class GpioPinDriveMode : int {
	Input = 0,
	Output = 1,
	InputPullUp = 2,
	InputPullDown = 3,
	OutputOpenDrain = 4,
	OutputOpenDrainPullUp = 5,
	OutputOpenSource = 6,
	OutputOpenSourcePullDown = 7,
};
enum class GpioPinValue : int {
	Low = 0,
	High = 1,
};
enum class GpioPinEdge : int {
	FallingEdge = 0,
	RisingEdge = 1,
};
enum class GpioChangePolarity : int {
	Falling = 0,
	Rising = 1,
	Both = 2,
};
struct GpioChangeRecord {
	Foundation::TimeSpan RelativeTime;
	GpioPinEdge Edge;
};
struct GpioChangeCount {
	unsigned __int64 Count;
	Foundation::TimeSpan RelativeTime;
};
struct IGpioPinValueChangedEventArgs;
struct GpioPinValueChangedEventArgs;
struct IGpioPin;
struct GpioPin;
struct IGpioController;
struct IGpioControllerStatics;
struct IGpioControllerStatics2;
struct GpioController;
struct IGpioChangeReaderFactory;
struct IGpioChangeReader;
struct GpioChangeReader;
struct IGpioChangeCounterFactory;
struct IGpioChangeCounter;
struct GpioChangeCounter;
}}}
} // namespace iso_winrt
