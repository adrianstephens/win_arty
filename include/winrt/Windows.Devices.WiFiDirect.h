#pragma once
// generated by isopod tools
// namespaces:
// Windows.Devices.WiFiDirect

#include "Windows.Devices.WiFiDirect.0.h"
#include "Windows.Devices.Enumeration.h"
#include "Windows.Foundation.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Foundation { namespace Collections {
template<typename T> struct IVectorView;
template<typename T> struct IVector;
}}
namespace Networking {
struct EndpointPair;
}
namespace Security { namespace Credentials {
struct PasswordCredential;
}}
namespace Storage { namespace Streams {
struct IBuffer;
}}}

// defs

template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectConnectionStatus> : enum_type<int> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectError> : enum_type<int> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectDeviceSelectorType> : enum_type<int> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectAdvertisementListenStateDiscoverability> : enum_type<int> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectAdvertisementPublisherStatus> : enum_type<int> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectConfigurationMethod> : enum_type<int> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectPairingProcedure> : enum_type<int> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectDeviceStatics> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectDeviceStatics2> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectDevice> : interface_type<Windows::Foundation::IClosable> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectDevice> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectDevice> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectConnectionParametersStatics> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters2> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectConnectionParameters> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters, Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters2, Windows::Devices::Enumeration::IDevicePairingSettings> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectInformationElementStatics> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectInformationElement> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectInformationElement> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectInformationElement> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectLegacySettings> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectLegacySettings> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectLegacySettings> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement2> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectAdvertisement> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement, Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement2> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisherStatusChangedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectAdvertisementPublisherStatusChangedEventArgs> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisherStatusChangedEventArgs> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisher> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectAdvertisementPublisher> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisher> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequest> : interface_type<Windows::Foundation::IClosable> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectConnectionRequest> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequest> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequestedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectConnectionRequestedEventArgs> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequestedEventArgs> {};
template<> struct def<Windows::Devices::WiFiDirect::IWiFiDirectConnectionListener> : interface_type<> {};
template<> struct def<Windows::Devices::WiFiDirect::WiFiDirectConnectionListener> : class_type<Platform::Object, Windows::Devices::WiFiDirect::IWiFiDirectConnectionListener> {};

// uuids

template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectDeviceStatics> { define_guid(0xE86CB57C, 0x3AAC, 0x4851, 0xA7, 0x92, 0x48, 0x2A, 0xAF, 0x93, 0x1B, 0x4);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectDeviceStatics2> { define_guid(0x1A953E49, 0xB103, 0x437E, 0x92, 0x26, 0xAB, 0x67, 0x97, 0x13, 0x42, 0xF9);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectDevice> { define_guid(0x72DEAAA8, 0x72EB, 0x4DAE, 0x8A, 0x28, 0x85, 0x13, 0x35, 0x5D, 0x27, 0x77);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectConnectionParametersStatics> { define_guid(0x598AF493, 0x7642, 0x456F, 0xB9, 0xD8, 0xE8, 0xA9, 0xEB, 0x1F, 0x40, 0x1A);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters2> { define_guid(0xAB3B0FBE, 0xAA82, 0x44B4, 0x88, 0xC8, 0xE3, 0x5, 0x6B, 0x89, 0x80, 0x1D);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters> { define_guid(0xB2E55405, 0x5702, 0x4B16, 0xA0, 0x2C, 0xBB, 0xCD, 0x21, 0xEF, 0x60, 0x98);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectInformationElementStatics> { define_guid(0xDBD02F16, 0x11A5, 0x4E60, 0x8C, 0xAA, 0x34, 0x77, 0x21, 0x48, 0x37, 0x8A);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectInformationElement> { define_guid(0xAFFB72D6, 0x76BB, 0x497E, 0xAC, 0x8B, 0xDC, 0x72, 0x83, 0x8B, 0xC3, 0x9);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectLegacySettings> { define_guid(0xA64FDBBA, 0xF2FD, 0x4567, 0xA9, 0x1B, 0xF5, 0xC2, 0xF5, 0x32, 0x10, 0x57);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement> { define_guid(0xAB511A2D, 0x2A06, 0x49A1, 0xA5, 0x84, 0x61, 0x43, 0x5C, 0x79, 0x5, 0xA6);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement2> { define_guid(0xB759AA46, 0xD816, 0x491B, 0x91, 0x7A, 0xB4, 0xD, 0x7D, 0xC4, 0x3, 0xA2);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisherStatusChangedEventArgs> { define_guid(0xAAFDE53C, 0x5481, 0x46E6, 0x90, 0xDD, 0x32, 0x11, 0x65, 0x18, 0xF1, 0x92);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisher> { define_guid(0xB35A2D1A, 0x9B1F, 0x45D9, 0x92, 0x5A, 0x69, 0x4D, 0x66, 0xDF, 0x68, 0xEF);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequest> { define_guid(0x8EB99605, 0x914F, 0x49C3, 0xA6, 0x14, 0xD1, 0x8D, 0xC5, 0xB1, 0x9B, 0x43);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequestedEventArgs> { define_guid(0xF99D20BE, 0xD38D, 0x484F, 0x82, 0x15, 0xE7, 0xB6, 0x5A, 0xBF, 0x24, 0x4C);};
template<> struct uuid<Windows::Devices::WiFiDirect::IWiFiDirectConnectionListener> { define_guid(0x699C1B0D, 0x8D13, 0x4EE9, 0xB9, 0xEC, 0x9C, 0x72, 0xF8, 0x25, 0x1F, 0x7D);};

// types

namespace Windows { namespace Devices { namespace WiFiDirect {

// IWiFiDirectDeviceStatics
struct IWiFiDirectDeviceStatics : IInspectable {
	virtual STDMETHODIMP _GetDeviceSelector(HSTRING *deviceSelector);
	virtual STDMETHODIMP _FromIdAsync(HSTRING deviceId, Foundation::IAsyncOperation<WiFiDirectDevice*>* *asyncOp);
};

// IWiFiDirectDeviceStatics2
struct IWiFiDirectDeviceStatics2 : IInspectable {
	virtual STDMETHODIMP _GetDeviceSelector(WiFiDirectDeviceSelectorType type, HSTRING *result);
	virtual STDMETHODIMP _FromIdAsync(HSTRING deviceId, WiFiDirectConnectionParameters* connectionParameters, Foundation::IAsyncOperation<WiFiDirectDevice*>* *result);
};

// IWiFiDirectDevice
struct IWiFiDirectDevice_raw : IInspectable {
	virtual STDMETHODIMP _get_ConnectionStatus(WiFiDirectConnectionStatus *value);
	virtual STDMETHODIMP _get_DeviceId(HSTRING *value);
	virtual STDMETHODIMP _add_ConnectionStatusChanged(Foundation::TypedEventHandler<WiFiDirectDevice*, IInspectable*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ConnectionStatusChanged(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _GetConnectionEndpointPairs(Foundation::Collections::IVectorView<Networking::EndpointPair*>* *value);
};
template<typename X> struct IWiFiDirectDevice_adaptor : X {
	union {
		struct : property {
			WiFiDirectConnectionStatus get() { WiFiDirectConnectionStatus value; hrcheck(enc(&IWiFiDirectDevice_adaptor::ConnectionStatus)->_get_ConnectionStatus(&value)); return value; }
			WiFiDirectConnectionStatus operator()() { return get(); }
			operator WiFiDirectConnectionStatus () { return get(); }
		} ConnectionStatus;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IWiFiDirectDevice_adaptor::DeviceId)->_get_DeviceId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} DeviceId;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<WiFiDirectDevice>, object>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IWiFiDirectDevice_adaptor::ConnectionStatusChanged)->_add_ConnectionStatusChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IWiFiDirectDevice_adaptor::ConnectionStatusChanged)->_remove_ConnectionStatusChanged(token)); }
		} ConnectionStatusChanged;
	};
	ptr<Foundation::Collections::IVectorView<ptr<Networking::EndpointPair>>> GetConnectionEndpointPairs() { Foundation::Collections::IVectorView<Networking::EndpointPair*>* value; hrcheck(X::get()->_GetConnectionEndpointPairs(&value)); return from_abi(value); }
	IWiFiDirectDevice_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectDevice, X> : Windows::Devices::WiFiDirect::IWiFiDirectDevice_adaptor<X> { typedef adapt IWiFiDirectDevice; };
struct IWiFiDirectDevice : IWiFiDirectDevice_raw, generate<IWiFiDirectDevice> {};

// WiFiDirectDevice
template<typename> struct WiFiDirectDevice_statics {
	static hstring GetDeviceSelector(WiFiDirectDeviceSelectorType type) { HSTRING result; hrcheck(get_activation_factory<WiFiDirectDevice, IWiFiDirectDeviceStatics2>()->_GetDeviceSelector(type, &result)); return from_abi(result); }
	static ptr<Foundation::IAsyncOperation<ptr<WiFiDirectDevice>>> FromIdAsync(hstring_ref deviceId, pptr<WiFiDirectConnectionParameters> connectionParameters) { Foundation::IAsyncOperation<WiFiDirectDevice*>* result; hrcheck(get_activation_factory<WiFiDirectDevice, IWiFiDirectDeviceStatics2>()->_FromIdAsync(deviceId, connectionParameters, &result)); return from_abi(result); }
	static hstring GetDeviceSelector() { HSTRING deviceSelector; hrcheck(get_activation_factory<WiFiDirectDevice, IWiFiDirectDeviceStatics>()->_GetDeviceSelector(&deviceSelector)); return from_abi(deviceSelector); }
	static ptr<Foundation::IAsyncOperation<ptr<WiFiDirectDevice>>> FromIdAsync(hstring_ref deviceId) { Foundation::IAsyncOperation<WiFiDirectDevice*>* asyncOp; hrcheck(get_activation_factory<WiFiDirectDevice, IWiFiDirectDeviceStatics>()->_FromIdAsync(deviceId, &asyncOp)); return from_abi(asyncOp); }
};

template<typename X> struct statics<WiFiDirectDevice, X> : X, Windows::Devices::WiFiDirect::WiFiDirectDevice_statics<void> {
	typedef typename X::root_type WiFiDirectDevice;
};
struct WiFiDirectDevice : generate<WiFiDirectDevice> {};

// IWiFiDirectConnectionParametersStatics
struct IWiFiDirectConnectionParametersStatics : IInspectable {
	virtual STDMETHODIMP _GetDevicePairingKinds(WiFiDirectConfigurationMethod configurationMethod, Enumeration::DevicePairingKinds *result);
};

// IWiFiDirectConnectionParameters2
struct IWiFiDirectConnectionParameters2_raw : IInspectable {
	virtual STDMETHODIMP _get_PreferenceOrderedConfigurationMethods(Foundation::Collections::IVector<WiFiDirectConfigurationMethod>* *value);
	virtual STDMETHODIMP _get_PreferredPairingProcedure(WiFiDirectPairingProcedure *value);
	virtual STDMETHODIMP _put_PreferredPairingProcedure(WiFiDirectPairingProcedure value);
};
template<typename X> struct IWiFiDirectConnectionParameters2_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> get() { Foundation::Collections::IVector<WiFiDirectConfigurationMethod>* value; hrcheck(enc(&IWiFiDirectConnectionParameters2_adaptor::PreferenceOrderedConfigurationMethods)->_get_PreferenceOrderedConfigurationMethods(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> () { return get(); }
			ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> operator->() { return get(); }
		} PreferenceOrderedConfigurationMethods;
		struct : property {
			WiFiDirectPairingProcedure get() { WiFiDirectPairingProcedure value; hrcheck(enc(&IWiFiDirectConnectionParameters2_adaptor::PreferredPairingProcedure)->_get_PreferredPairingProcedure(&value)); return value; }
			WiFiDirectPairingProcedure operator()() { return get(); }
			operator WiFiDirectPairingProcedure () { return get(); }
			void put(WiFiDirectPairingProcedure value) { hrcheck(enc(&IWiFiDirectConnectionParameters2_adaptor::PreferredPairingProcedure)->_put_PreferredPairingProcedure(value)); }
			void operator=(WiFiDirectPairingProcedure value) { put(value); }
			void operator()(WiFiDirectPairingProcedure value) { put(value); }
		} PreferredPairingProcedure;
	};
	IWiFiDirectConnectionParameters2_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectConnectionParameters2, X> : Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters2_adaptor<X> { typedef adapt IWiFiDirectConnectionParameters2; };
struct IWiFiDirectConnectionParameters2 : IWiFiDirectConnectionParameters2_raw, generate<IWiFiDirectConnectionParameters2> {};

// IWiFiDirectConnectionParameters
struct IWiFiDirectConnectionParameters_raw : IInspectable {
	virtual STDMETHODIMP _get_GroupOwnerIntent(short *value);
	virtual STDMETHODIMP _put_GroupOwnerIntent(short value);
};
template<typename X> struct IWiFiDirectConnectionParameters_adaptor : X {
	union {
		struct : property {
			short get() { short value; hrcheck(enc(&IWiFiDirectConnectionParameters_adaptor::GroupOwnerIntent)->_get_GroupOwnerIntent(&value)); return value; }
			short operator()() { return get(); }
			operator short () { return get(); }
			void put(short value) { hrcheck(enc(&IWiFiDirectConnectionParameters_adaptor::GroupOwnerIntent)->_put_GroupOwnerIntent(value)); }
			void operator=(short value) { put(value); }
			void operator()(short value) { put(value); }
		} GroupOwnerIntent;
	};
	IWiFiDirectConnectionParameters_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectConnectionParameters, X> : Windows::Devices::WiFiDirect::IWiFiDirectConnectionParameters_adaptor<X> { typedef adapt IWiFiDirectConnectionParameters; };
struct IWiFiDirectConnectionParameters : IWiFiDirectConnectionParameters_raw, generate<IWiFiDirectConnectionParameters> {};

// WiFiDirectConnectionParameters
template<typename> struct WiFiDirectConnectionParameters_statics {
	static Enumeration::DevicePairingKinds GetDevicePairingKinds(WiFiDirectConfigurationMethod configurationMethod) { Enumeration::DevicePairingKinds result; hrcheck(get_activation_factory<WiFiDirectConnectionParameters, IWiFiDirectConnectionParametersStatics>()->_GetDevicePairingKinds(configurationMethod, &result)); return result; }
};

template<typename X> struct statics<WiFiDirectConnectionParameters, X> : X, Windows::Devices::WiFiDirect::WiFiDirectConnectionParameters_statics<void> {
	typedef typename X::root_type WiFiDirectConnectionParameters;
};
struct WiFiDirectConnectionParameters : generate<WiFiDirectConnectionParameters> {};

// IWiFiDirectInformationElementStatics
struct IWiFiDirectInformationElementStatics : IInspectable {
	virtual STDMETHODIMP _CreateFromBuffer(Storage::Streams::IBuffer* buffer, Foundation::Collections::IVector<WiFiDirectInformationElement*>* *result);
	virtual STDMETHODIMP _CreateFromDeviceInformation(Enumeration::DeviceInformation* deviceInformation, Foundation::Collections::IVector<WiFiDirectInformationElement*>* *result);
};

// IWiFiDirectInformationElement
struct IWiFiDirectInformationElement_raw : IInspectable {
	virtual STDMETHODIMP _get_Oui(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _put_Oui(Storage::Streams::IBuffer* value);
	virtual STDMETHODIMP _get_OuiType(unsigned char *value);
	virtual STDMETHODIMP _put_OuiType(unsigned char value);
	virtual STDMETHODIMP _get_Value(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _put_Value(Storage::Streams::IBuffer* value);
};
template<typename X> struct IWiFiDirectInformationElement_adaptor : X {
	union {
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IWiFiDirectInformationElement_adaptor::Oui)->_get_Oui(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
			void put(pptr<Storage::Streams::IBuffer> value) { hrcheck(enc(&IWiFiDirectInformationElement_adaptor::Oui)->_put_Oui(value)); }
			void operator=(pptr<Storage::Streams::IBuffer> value) { put(value); }
			void operator()(pptr<Storage::Streams::IBuffer> value) { put(value); }
		} Oui;
		struct : property {
			unsigned char get() { unsigned char value; hrcheck(enc(&IWiFiDirectInformationElement_adaptor::OuiType)->_get_OuiType(&value)); return value; }
			unsigned char operator()() { return get(); }
			operator unsigned char () { return get(); }
			void put(unsigned char value) { hrcheck(enc(&IWiFiDirectInformationElement_adaptor::OuiType)->_put_OuiType(value)); }
			void operator=(unsigned char value) { put(value); }
			void operator()(unsigned char value) { put(value); }
		} OuiType;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IWiFiDirectInformationElement_adaptor::Value)->_get_Value(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
			void put(pptr<Storage::Streams::IBuffer> value) { hrcheck(enc(&IWiFiDirectInformationElement_adaptor::Value)->_put_Value(value)); }
			void operator=(pptr<Storage::Streams::IBuffer> value) { put(value); }
			void operator()(pptr<Storage::Streams::IBuffer> value) { put(value); }
		} Value;
	};
	IWiFiDirectInformationElement_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectInformationElement, X> : Windows::Devices::WiFiDirect::IWiFiDirectInformationElement_adaptor<X> { typedef adapt IWiFiDirectInformationElement; };
struct IWiFiDirectInformationElement : IWiFiDirectInformationElement_raw, generate<IWiFiDirectInformationElement> {};

// WiFiDirectInformationElement
template<typename> struct WiFiDirectInformationElement_statics {
	static ptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> CreateFromBuffer(pptr<Storage::Streams::IBuffer> buffer) { Foundation::Collections::IVector<WiFiDirectInformationElement*>* result; hrcheck(get_activation_factory<WiFiDirectInformationElement, IWiFiDirectInformationElementStatics>()->_CreateFromBuffer(buffer, &result)); return from_abi(result); }
	static ptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> CreateFromDeviceInformation(pptr<Enumeration::DeviceInformation> deviceInformation) { Foundation::Collections::IVector<WiFiDirectInformationElement*>* result; hrcheck(get_activation_factory<WiFiDirectInformationElement, IWiFiDirectInformationElementStatics>()->_CreateFromDeviceInformation(deviceInformation, &result)); return from_abi(result); }
};

template<typename X> struct statics<WiFiDirectInformationElement, X> : X, Windows::Devices::WiFiDirect::WiFiDirectInformationElement_statics<void> {
	typedef typename X::root_type WiFiDirectInformationElement;
};
struct WiFiDirectInformationElement : generate<WiFiDirectInformationElement> {};

// IWiFiDirectLegacySettings
struct IWiFiDirectLegacySettings_raw : IInspectable {
	virtual STDMETHODIMP _get_IsEnabled(bool *value);
	virtual STDMETHODIMP _put_IsEnabled(bool value);
	virtual STDMETHODIMP _get_Ssid(HSTRING *value);
	virtual STDMETHODIMP _put_Ssid(HSTRING value);
	virtual STDMETHODIMP _get_Passphrase(Security::Credentials::PasswordCredential* *value);
	virtual STDMETHODIMP _put_Passphrase(Security::Credentials::PasswordCredential* value);
};
template<typename X> struct IWiFiDirectLegacySettings_adaptor : X {
	union {
		struct : property {
			bool get() { bool value; hrcheck(enc(&IWiFiDirectLegacySettings_adaptor::IsEnabled)->_get_IsEnabled(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IWiFiDirectLegacySettings_adaptor::IsEnabled)->_put_IsEnabled(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} IsEnabled;
		struct : property {
			ptr<Security::Credentials::PasswordCredential> get() { Security::Credentials::PasswordCredential* value; hrcheck(enc(&IWiFiDirectLegacySettings_adaptor::Passphrase)->_get_Passphrase(&value)); return from_abi(value); }
			ptr<Security::Credentials::PasswordCredential> operator()() { return get(); }
			operator ptr<Security::Credentials::PasswordCredential> () { return get(); }
			ptr<Security::Credentials::PasswordCredential> operator->() { return get(); }
			void put(pptr<Security::Credentials::PasswordCredential> value) { hrcheck(enc(&IWiFiDirectLegacySettings_adaptor::Passphrase)->_put_Passphrase(value)); }
			void operator=(pptr<Security::Credentials::PasswordCredential> value) { put(value); }
			void operator()(pptr<Security::Credentials::PasswordCredential> value) { put(value); }
		} Passphrase;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IWiFiDirectLegacySettings_adaptor::Ssid)->_get_Ssid(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IWiFiDirectLegacySettings_adaptor::Ssid)->_put_Ssid(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Ssid;
	};
	IWiFiDirectLegacySettings_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectLegacySettings, X> : Windows::Devices::WiFiDirect::IWiFiDirectLegacySettings_adaptor<X> { typedef adapt IWiFiDirectLegacySettings; };
struct IWiFiDirectLegacySettings : IWiFiDirectLegacySettings_raw, generate<IWiFiDirectLegacySettings> {};

// WiFiDirectLegacySettings
template<typename X> struct statics<WiFiDirectLegacySettings, X> : X {
	typedef typename X::root_type WiFiDirectLegacySettings;
};
struct WiFiDirectLegacySettings : generate<WiFiDirectLegacySettings> {};

// IWiFiDirectAdvertisement
struct IWiFiDirectAdvertisement_raw : IInspectable {
	virtual STDMETHODIMP _get_InformationElements(Foundation::Collections::IVector<WiFiDirectInformationElement*>* *value);
	virtual STDMETHODIMP _put_InformationElements(Foundation::Collections::IVector<WiFiDirectInformationElement*>* value);
	virtual STDMETHODIMP _get_ListenStateDiscoverability(WiFiDirectAdvertisementListenStateDiscoverability *value);
	virtual STDMETHODIMP _put_ListenStateDiscoverability(WiFiDirectAdvertisementListenStateDiscoverability value);
	virtual STDMETHODIMP _get_IsAutonomousGroupOwnerEnabled(bool *value);
	virtual STDMETHODIMP _put_IsAutonomousGroupOwnerEnabled(bool value);
	virtual STDMETHODIMP _get_LegacySettings(WiFiDirectLegacySettings* *value);
};
template<typename X> struct IWiFiDirectAdvertisement_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> get() { Foundation::Collections::IVector<WiFiDirectInformationElement*>* value; hrcheck(enc(&IWiFiDirectAdvertisement_adaptor::InformationElements)->_get_InformationElements(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> () { return get(); }
			ptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> operator->() { return get(); }
			void put(pptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> value) { hrcheck(enc(&IWiFiDirectAdvertisement_adaptor::InformationElements)->_put_InformationElements(to_abi(value))); }
			void operator=(pptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> value) { put(to_abi(value)); }
			void operator()(pptr<Foundation::Collections::IVector<ptr<WiFiDirectInformationElement>>> value) { put(to_abi(value)); }
		} InformationElements;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IWiFiDirectAdvertisement_adaptor::IsAutonomousGroupOwnerEnabled)->_get_IsAutonomousGroupOwnerEnabled(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IWiFiDirectAdvertisement_adaptor::IsAutonomousGroupOwnerEnabled)->_put_IsAutonomousGroupOwnerEnabled(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} IsAutonomousGroupOwnerEnabled;
		struct : property {
			ptr<WiFiDirectLegacySettings> get() { WiFiDirectLegacySettings* value; hrcheck(enc(&IWiFiDirectAdvertisement_adaptor::LegacySettings)->_get_LegacySettings(&value)); return from_abi(value); }
			ptr<WiFiDirectLegacySettings> operator()() { return get(); }
			operator ptr<WiFiDirectLegacySettings> () { return get(); }
			ptr<WiFiDirectLegacySettings> operator->() { return get(); }
		} LegacySettings;
		struct : property {
			WiFiDirectAdvertisementListenStateDiscoverability get() { WiFiDirectAdvertisementListenStateDiscoverability value; hrcheck(enc(&IWiFiDirectAdvertisement_adaptor::ListenStateDiscoverability)->_get_ListenStateDiscoverability(&value)); return value; }
			WiFiDirectAdvertisementListenStateDiscoverability operator()() { return get(); }
			operator WiFiDirectAdvertisementListenStateDiscoverability () { return get(); }
			void put(WiFiDirectAdvertisementListenStateDiscoverability value) { hrcheck(enc(&IWiFiDirectAdvertisement_adaptor::ListenStateDiscoverability)->_put_ListenStateDiscoverability(value)); }
			void operator=(WiFiDirectAdvertisementListenStateDiscoverability value) { put(value); }
			void operator()(WiFiDirectAdvertisementListenStateDiscoverability value) { put(value); }
		} ListenStateDiscoverability;
	};
	IWiFiDirectAdvertisement_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectAdvertisement, X> : Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement_adaptor<X> { typedef adapt IWiFiDirectAdvertisement; };
struct IWiFiDirectAdvertisement : IWiFiDirectAdvertisement_raw, generate<IWiFiDirectAdvertisement> {};

// IWiFiDirectAdvertisement2
struct IWiFiDirectAdvertisement2_raw : IInspectable {
	virtual STDMETHODIMP _get_SupportedConfigurationMethods(Foundation::Collections::IVector<WiFiDirectConfigurationMethod>* *value);
};
template<typename X> struct IWiFiDirectAdvertisement2_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> get() { Foundation::Collections::IVector<WiFiDirectConfigurationMethod>* value; hrcheck(enc(&IWiFiDirectAdvertisement2_adaptor::SupportedConfigurationMethods)->_get_SupportedConfigurationMethods(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> () { return get(); }
			ptr<Foundation::Collections::IVector<WiFiDirectConfigurationMethod>> operator->() { return get(); }
		} SupportedConfigurationMethods;
	};
	IWiFiDirectAdvertisement2_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectAdvertisement2, X> : Windows::Devices::WiFiDirect::IWiFiDirectAdvertisement2_adaptor<X> { typedef adapt IWiFiDirectAdvertisement2; };
struct IWiFiDirectAdvertisement2 : IWiFiDirectAdvertisement2_raw, generate<IWiFiDirectAdvertisement2> {};

// WiFiDirectAdvertisement
template<typename X> struct statics<WiFiDirectAdvertisement, X> : X {
	typedef typename X::root_type WiFiDirectAdvertisement;
};
struct WiFiDirectAdvertisement : generate<WiFiDirectAdvertisement> {};

// IWiFiDirectAdvertisementPublisherStatusChangedEventArgs
struct IWiFiDirectAdvertisementPublisherStatusChangedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(WiFiDirectAdvertisementPublisherStatus *value);
	virtual STDMETHODIMP _get_Error(WiFiDirectError *value);
};
template<typename X> struct IWiFiDirectAdvertisementPublisherStatusChangedEventArgs_adaptor : X {
	union {
		struct : property {
			WiFiDirectError get() { WiFiDirectError value; hrcheck(enc(&IWiFiDirectAdvertisementPublisherStatusChangedEventArgs_adaptor::Error)->_get_Error(&value)); return value; }
			WiFiDirectError operator()() { return get(); }
			operator WiFiDirectError () { return get(); }
		} Error;
		struct : property {
			WiFiDirectAdvertisementPublisherStatus get() { WiFiDirectAdvertisementPublisherStatus value; hrcheck(enc(&IWiFiDirectAdvertisementPublisherStatusChangedEventArgs_adaptor::Status)->_get_Status(&value)); return value; }
			WiFiDirectAdvertisementPublisherStatus operator()() { return get(); }
			operator WiFiDirectAdvertisementPublisherStatus () { return get(); }
		} Status;
	};
	IWiFiDirectAdvertisementPublisherStatusChangedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectAdvertisementPublisherStatusChangedEventArgs, X> : Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisherStatusChangedEventArgs_adaptor<X> { typedef adapt IWiFiDirectAdvertisementPublisherStatusChangedEventArgs; };
struct IWiFiDirectAdvertisementPublisherStatusChangedEventArgs : IWiFiDirectAdvertisementPublisherStatusChangedEventArgs_raw, generate<IWiFiDirectAdvertisementPublisherStatusChangedEventArgs> {};

// WiFiDirectAdvertisementPublisherStatusChangedEventArgs
template<typename X> struct statics<WiFiDirectAdvertisementPublisherStatusChangedEventArgs, X> : X {
	typedef typename X::root_type WiFiDirectAdvertisementPublisherStatusChangedEventArgs;
};
struct WiFiDirectAdvertisementPublisherStatusChangedEventArgs : generate<WiFiDirectAdvertisementPublisherStatusChangedEventArgs> {};

// IWiFiDirectAdvertisementPublisher
struct IWiFiDirectAdvertisementPublisher_raw : IInspectable {
	virtual STDMETHODIMP _get_Advertisement(WiFiDirectAdvertisement* *value);
	virtual STDMETHODIMP _get_Status(WiFiDirectAdvertisementPublisherStatus *value);
	virtual STDMETHODIMP _add_StatusChanged(Foundation::TypedEventHandler<WiFiDirectAdvertisementPublisher*, WiFiDirectAdvertisementPublisherStatusChangedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_StatusChanged(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _Start();
	virtual STDMETHODIMP _Stop();
};
template<typename X> struct IWiFiDirectAdvertisementPublisher_adaptor : X {
	union {
		struct : property {
			ptr<WiFiDirectAdvertisement> get() { WiFiDirectAdvertisement* value; hrcheck(enc(&IWiFiDirectAdvertisementPublisher_adaptor::Advertisement)->_get_Advertisement(&value)); return from_abi(value); }
			ptr<WiFiDirectAdvertisement> operator()() { return get(); }
			operator ptr<WiFiDirectAdvertisement> () { return get(); }
			ptr<WiFiDirectAdvertisement> operator->() { return get(); }
		} Advertisement;
		struct : property {
			WiFiDirectAdvertisementPublisherStatus get() { WiFiDirectAdvertisementPublisherStatus value; hrcheck(enc(&IWiFiDirectAdvertisementPublisher_adaptor::Status)->_get_Status(&value)); return value; }
			WiFiDirectAdvertisementPublisherStatus operator()() { return get(); }
			operator WiFiDirectAdvertisementPublisherStatus () { return get(); }
		} Status;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<WiFiDirectAdvertisementPublisher>, ptr<WiFiDirectAdvertisementPublisherStatusChangedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IWiFiDirectAdvertisementPublisher_adaptor::StatusChanged)->_add_StatusChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IWiFiDirectAdvertisementPublisher_adaptor::StatusChanged)->_remove_StatusChanged(token)); }
		} StatusChanged;
	};
	void Start() { hrcheck(X::get()->_Start()); }
	void Stop() { hrcheck(X::get()->_Stop()); }
	IWiFiDirectAdvertisementPublisher_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectAdvertisementPublisher, X> : Windows::Devices::WiFiDirect::IWiFiDirectAdvertisementPublisher_adaptor<X> { typedef adapt IWiFiDirectAdvertisementPublisher; };
struct IWiFiDirectAdvertisementPublisher : IWiFiDirectAdvertisementPublisher_raw, generate<IWiFiDirectAdvertisementPublisher> {};

// WiFiDirectAdvertisementPublisher
template<typename X> struct statics<WiFiDirectAdvertisementPublisher, X> : X {
	typedef typename X::root_type WiFiDirectAdvertisementPublisher;
};
struct WiFiDirectAdvertisementPublisher : generate<WiFiDirectAdvertisementPublisher> {};

// IWiFiDirectConnectionRequest
struct IWiFiDirectConnectionRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_DeviceInformation(Enumeration::DeviceInformation* *value);
};
template<typename X> struct IWiFiDirectConnectionRequest_adaptor : X {
	union {
		struct : property {
			ptr<Enumeration::DeviceInformation> get() { Enumeration::DeviceInformation* value; hrcheck(enc(&IWiFiDirectConnectionRequest_adaptor::DeviceInformation)->_get_DeviceInformation(&value)); return from_abi(value); }
			ptr<Enumeration::DeviceInformation> operator()() { return get(); }
			operator ptr<Enumeration::DeviceInformation> () { return get(); }
			ptr<Enumeration::DeviceInformation> operator->() { return get(); }
		} DeviceInformation;
	};
	IWiFiDirectConnectionRequest_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectConnectionRequest, X> : Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequest_adaptor<X> { typedef adapt IWiFiDirectConnectionRequest; };
struct IWiFiDirectConnectionRequest : IWiFiDirectConnectionRequest_raw, generate<IWiFiDirectConnectionRequest> {};

// WiFiDirectConnectionRequest
template<typename X> struct statics<WiFiDirectConnectionRequest, X> : X {
	typedef typename X::root_type WiFiDirectConnectionRequest;
};
struct WiFiDirectConnectionRequest : generate<WiFiDirectConnectionRequest> {};

// IWiFiDirectConnectionRequestedEventArgs
struct IWiFiDirectConnectionRequestedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _GetConnectionRequest(WiFiDirectConnectionRequest* *result);
};
template<typename X> struct IWiFiDirectConnectionRequestedEventArgs_adaptor : X {
	ptr<WiFiDirectConnectionRequest> GetConnectionRequest() { WiFiDirectConnectionRequest* result; hrcheck(X::get()->_GetConnectionRequest(&result)); return from_abi(result); }
};
template<typename X> struct adapt<IWiFiDirectConnectionRequestedEventArgs, X> : Windows::Devices::WiFiDirect::IWiFiDirectConnectionRequestedEventArgs_adaptor<X> { typedef adapt IWiFiDirectConnectionRequestedEventArgs; };
struct IWiFiDirectConnectionRequestedEventArgs : IWiFiDirectConnectionRequestedEventArgs_raw, generate<IWiFiDirectConnectionRequestedEventArgs> {};

// WiFiDirectConnectionRequestedEventArgs
template<typename X> struct statics<WiFiDirectConnectionRequestedEventArgs, X> : X {
	typedef typename X::root_type WiFiDirectConnectionRequestedEventArgs;
};
struct WiFiDirectConnectionRequestedEventArgs : generate<WiFiDirectConnectionRequestedEventArgs> {};

// IWiFiDirectConnectionListener
struct IWiFiDirectConnectionListener_raw : IInspectable {
	virtual STDMETHODIMP _add_ConnectionRequested(Foundation::TypedEventHandler<WiFiDirectConnectionListener*, WiFiDirectConnectionRequestedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ConnectionRequested(Foundation::EventRegistrationToken token);
};
template<typename X> struct IWiFiDirectConnectionListener_adaptor : X {
	union {
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<WiFiDirectConnectionListener>, ptr<WiFiDirectConnectionRequestedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IWiFiDirectConnectionListener_adaptor::ConnectionRequested)->_add_ConnectionRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IWiFiDirectConnectionListener_adaptor::ConnectionRequested)->_remove_ConnectionRequested(token)); }
		} ConnectionRequested;
	};
	IWiFiDirectConnectionListener_adaptor() {}
};
template<typename X> struct adapt<IWiFiDirectConnectionListener, X> : Windows::Devices::WiFiDirect::IWiFiDirectConnectionListener_adaptor<X> { typedef adapt IWiFiDirectConnectionListener; };
struct IWiFiDirectConnectionListener : IWiFiDirectConnectionListener_raw, generate<IWiFiDirectConnectionListener> {};

// WiFiDirectConnectionListener
template<typename X> struct statics<WiFiDirectConnectionListener, X> : X {
	typedef typename X::root_type WiFiDirectConnectionListener;
};
struct WiFiDirectConnectionListener : generate<WiFiDirectConnectionListener> {};
}}}
} // namespace iso_winrt
