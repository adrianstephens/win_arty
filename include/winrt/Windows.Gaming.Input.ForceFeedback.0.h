#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Gaming { namespace Input { namespace ForceFeedback {
enum class ConditionForceEffectKind : int {
	Spring = 0,
	Damper = 1,
	Inertia = 2,
	Friction = 3,
};
enum class ForceFeedbackEffectAxes : unsigned {
	None = 0x0,
	X = 0x1,
	Y = 0x2,
	Z = 0x4,
};
enum class ForceFeedbackEffectState : int {
	Stopped = 0,
	Running = 1,
	Paused = 2,
	Faulted = 3,
};
enum class ForceFeedbackLoadEffectResult : int {
	Succeeded = 0,
	EffectStorageFull = 1,
	EffectNotSupported = 2,
};
enum class PeriodicForceEffectKind : int {
	SquareWave = 0,
	SineWave = 1,
	TriangleWave = 2,
	SawtoothWaveUp = 3,
	SawtoothWaveDown = 4,
};
struct IForceFeedbackEffect;
struct IConditionForceEffect;
struct IConditionForceEffectFactory;
struct ConditionForceEffect;
struct IConstantForceEffect;
struct IPeriodicForceEffect;
struct IPeriodicForceEffectFactory;
struct PeriodicForceEffect;
struct IRampForceEffect;
struct IForceFeedbackMotor;
struct ConstantForceEffect;
struct RampForceEffect;
struct ForceFeedbackMotor;
}}}}
} // namespace iso_winrt
