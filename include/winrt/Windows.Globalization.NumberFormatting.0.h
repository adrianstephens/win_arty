#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Globalization { namespace NumberFormatting {
struct INumberRounder;
enum class RoundingAlgorithm : int {
	None = 0,
	RoundDown = 1,
	RoundUp = 2,
	RoundTowardsZero = 3,
	RoundAwayFromZero = 4,
	RoundHalfDown = 5,
	RoundHalfUp = 6,
	RoundHalfTowardsZero = 7,
	RoundHalfAwayFromZero = 8,
	RoundHalfToEven = 9,
	RoundHalfToOdd = 10,
};
struct ISignificantDigitsNumberRounder;
struct IIncrementNumberRounder;
struct SignificantDigitsNumberRounder;
struct IncrementNumberRounder;
struct INumberFormatter;
struct INumberFormatter2;
struct INumberParser;
struct INumberFormatterOptions;
struct ISignificantDigitsOption;
struct INumberRounderOption;
struct ISignedZeroOption;
struct IDecimalFormatterFactory;
struct DecimalFormatter;
struct IPercentFormatterFactory;
struct PercentFormatter;
struct IPermilleFormatterFactory;
struct PermilleFormatter;
enum class CurrencyFormatterMode : int {
	UseSymbol = 0,
	UseCurrencyCode = 1,
};
struct ICurrencyFormatterFactory;
struct ICurrencyFormatter2;
struct ICurrencyFormatter;
struct CurrencyFormatter;
struct INumeralSystemTranslatorFactory;
struct INumeralSystemTranslator;
struct NumeralSystemTranslator;
}}}
} // namespace iso_winrt
