#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Storage { namespace Provider {
enum class CachedFileTarget : int {
	Local = 0,
	Remote = 1,
};
enum class UIStatus : int {
	Unavailable = 0,
	Hidden = 1,
	Visible = 2,
	Complete = 3,
};
struct ICachedFileUpdaterUI;
struct ICachedFileUpdaterUI2;
struct CachedFileUpdaterUI;
struct IFileUpdateRequestedEventArgs;
struct FileUpdateRequestedEventArgs;
enum class FileUpdateStatus : int {
	Incomplete = 0,
	Complete = 1,
	UserInputNeeded = 2,
	CurrentlyUnavailable = 3,
	Failed = 4,
	CompleteAndRenamed = 5,
};
struct IFileUpdateRequest;
struct IFileUpdateRequest2;
struct FileUpdateRequest;
struct IFileUpdateRequestDeferral;
struct FileUpdateRequestDeferral;
enum class CachedFileOptions : unsigned {
	None = 0x0,
	RequireUpdateOnAccess = 0x1,
	UseCachedFileWhenOffline = 0x2,
	DenyAccessWhenOffline = 0x4,
};
enum class ReadActivationMode : int {
	NotNeeded = 0,
	BeforeAccess = 1,
};
enum class WriteActivationMode : int {
	ReadOnly = 0,
	NotNeeded = 1,
	AfterWrite = 2,
};
struct ICachedFileUpdaterStatics;
struct CachedFileUpdater;
struct CloudFilesContract {};
struct IStorageProviderPropertyCapabilities;
struct IStorageProviderItemProperty;
struct StorageProviderItemProperty;
struct IStorageProviderItemPropertiesStatics;
struct StorageProviderItemProperties;
struct IStorageProviderItemPropertySource;
enum class StorageProviderHydrationPolicy : int {
	Partial = 0,
	Progressive = 1,
	Full = 2,
	AlwaysFull = 3,
};
enum class StorageProviderPopulationPolicy : int {
	Full = 1,
	AlwaysFull = 2,
};
enum class StorageProviderHydrationPolicyModifier : unsigned {
	None = 0x0,
	ValidationRequired = 0x1,
	StreamingAllowed = 0x2,
};
enum class StorageProviderInSyncPolicy : unsigned {
	Default = 0x0,
	FileCreationTime = 0x1,
	FileReadOnlyAttribute = 0x2,
	FileHiddenAttribute = 0x4,
	FileSystemAttribute = 0x8,
	DirectoryCreationTime = 0x10,
	DirectoryReadOnlyAttribute = 0x20,
	DirectoryHiddenAttribute = 0x40,
	DirectorySystemAttribute = 0x80,
	FileLastWriteTime = 0x100,
	DirectoryLastWriteTime = 0x200,
	PreserveInsyncForSyncEngine = 0x80000000,
};
enum class StorageProviderHardlinkPolicy : unsigned {
	None = 0x0,
	Allowed = 0x1,
};
enum class StorageProviderProtectionMode : int {
	Unknown = 0,
	Personal = 1,
};
struct IStorageProviderItemPropertyDefinition;
struct StorageProviderItemPropertyDefinition;
struct IStorageProviderSyncRootInfo;
struct StorageProviderSyncRootInfo;
enum class StorageProviderUriSourceStatus : int {
	Success = 0,
	NoSyncRoot = 1,
	FileNotFound = 2,
};
struct IStorageProviderGetContentInfoForPathResult;
struct StorageProviderGetContentInfoForPathResult;
struct IStorageProviderGetPathForContentUriResult;
struct StorageProviderGetPathForContentUriResult;
struct IStorageProviderUriSource;
struct IStorageProviderSyncRootManagerStatics;
struct StorageProviderSyncRootManager;
}}}
} // namespace iso_winrt
