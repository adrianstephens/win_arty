#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace System { namespace Diagnostics {
struct IProcessDiagnosticInfo;
struct IProcessDiagnosticInfoStatics2;
struct IProcessDiagnosticInfoStatics;
struct IProcessDiagnosticInfo2;
struct ProcessDiagnosticInfo;
struct IProcessDiskUsage;
struct ProcessDiskUsage;
struct IProcessMemoryUsage;
struct ProcessMemoryUsage;
struct IProcessCpuUsage;
struct ProcessCpuUsage;
struct IProcessMemoryUsageReport;
struct ProcessMemoryUsageReport;
struct IProcessDiskUsageReport;
struct ProcessDiskUsageReport;
struct IProcessCpuUsageReport;
struct ProcessCpuUsageReport;
struct ISystemDiagnosticInfo;
struct ISystemMemoryUsage;
struct SystemMemoryUsage;
struct ISystemCpuUsage;
struct SystemCpuUsage;
struct ISystemDiagnosticInfoStatics;
struct SystemDiagnosticInfo;
struct ISystemMemoryUsageReport;
struct SystemMemoryUsageReport;
struct ISystemCpuUsageReport;
struct SystemCpuUsageReport;
enum class DiagnosticActionState : int {
	Initializing = 0,
	Downloading = 1,
	VerifyingTrust = 2,
	Detecting = 3,
	Resolving = 4,
	VerifyingResolution = 5,
};
struct IDiagnosticActionResult;
struct IDiagnosticInvokerStatics;
struct IDiagnosticInvoker2;
struct IDiagnosticInvoker;
struct DiagnosticInvoker;
struct DiagnosticActionResult;
}}}
} // namespace iso_winrt
