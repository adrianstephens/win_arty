#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace System { namespace Diagnostics { namespace TraceReporting {
enum class PlatformDiagnosticEscalationType : int {
	OnCompletion = 0,
	OnFailure = 1,
};
enum class PlatformDiagnosticTraceSlotType : int {
	Alternative = 0,
	AlwaysOn = 1,
	Mini = 2,
};
enum class PlatformDiagnosticTracePriority : int {
	Normal = 0,
	UserElevated = 1,
};
enum class PlatformDiagnosticTraceSlotState : int {
	NotRunning = 0,
	Running = 1,
	Throttled = 2,
};
enum class PlatformDiagnosticActionState : int {
	Success = 0,
	FreeNetworkNotAvailable = 1,
	ACPowerNotAvailable = 2,
};
enum class PlatformDiagnosticEventBufferLatencies : unsigned {
	Normal = 0x1,
	CostDeferred = 0x2,
	Realtime = 0x4,
};
struct IPlatformDiagnosticTraceInfo;
struct IPlatformDiagnosticTraceRuntimeInfo;
struct PlatformDiagnosticTraceInfo;
struct PlatformDiagnosticTraceRuntimeInfo;
struct IPlatformDiagnosticActionsStatics;
struct PlatformDiagnosticActions;
}}}}
} // namespace iso_winrt
