#pragma once
// generated by isopod tools
// namespaces:
// Windows.ApplicationModel.Contacts.DataProvider

#include "Windows.ApplicationModel.Contacts.DataProvider.0.h"
#include "Windows.ApplicationModel.Contacts.0.h"
#include "Windows.Foundation.0.h"

namespace iso_winrt {

// forward types


// defs

template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderTriggerDetails> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection2> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderConnection> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection, Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection2> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequestEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequestEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequestEventArgs> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequest> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactDataProviderTriggerDetails> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderTriggerDetails> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListSyncManagerSyncRequest> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequest> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListServerSearchReadBatchRequest> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequest> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListCreateOrUpdateContactRequest> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequest> {};
template<> struct def<Windows::ApplicationModel::Contacts::DataProvider::ContactListDeleteContactRequest> : class_type<Platform::Object, Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequest> {};

// uuids

template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderTriggerDetails> { define_guid(0x527104BE, 0x3C62, 0x43C8, 0x9A, 0xE7, 0xDB, 0x53, 0x16, 0x85, 0xCD, 0x99);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection2> { define_guid(0xA1D327B0, 0x196C, 0x4BFD, 0x8F, 0xF, 0xC6, 0x8D, 0x67, 0xF2, 0x49, 0xD3);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection> { define_guid(0x1A398A52, 0x8C9D, 0x4D6F, 0xA4, 0xE0, 0x11, 0x1E, 0x9A, 0x12, 0x5A, 0x30);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequestEventArgs> { define_guid(0x158E4DAC, 0x446D, 0x4F10, 0xAF, 0xC2, 0x2, 0x68, 0x3E, 0xC5, 0x33, 0xA6);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequestEventArgs> { define_guid(0x1A27E87B, 0x69D7, 0x4E4E, 0x80, 0x42, 0x86, 0x1C, 0xBA, 0x61, 0x47, 0x1E);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequestEventArgs> { define_guid(0x851C1690, 0x1A51, 0x4B0C, 0xAE, 0xEF, 0x12, 0x40, 0xAC, 0x5B, 0xED, 0x75);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequestEventArgs> { define_guid(0xB22054A1, 0xE8FA, 0x4DB5, 0x93, 0x89, 0x2D, 0x12, 0xEE, 0x7D, 0x15, 0xEE);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequest> { define_guid(0x3C0E57A4, 0xC4E7, 0x4970, 0x9A, 0x8F, 0x9A, 0x66, 0xA2, 0xBB, 0x6C, 0x1A);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequest> { define_guid(0xBA776A97, 0x4030, 0x4925, 0x9F, 0xB4, 0x14, 0x3B, 0x29, 0x5E, 0x65, 0x3B);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequest> { define_guid(0xB4AF411F, 0xC849, 0x47D0, 0xB1, 0x19, 0x91, 0xCF, 0x60, 0x5B, 0x2F, 0x2A);};
template<> struct uuid<Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequest> { define_guid(0x5E114687, 0xCE03, 0x4DE5, 0x85, 0x57, 0x9C, 0xCF, 0x55, 0x2D, 0x47, 0x2A);};

// types

namespace Windows { namespace ApplicationModel { namespace Contacts { namespace DataProvider {

// IContactDataProviderTriggerDetails
struct IContactDataProviderTriggerDetails_raw : IInspectable {
	virtual STDMETHODIMP _get_Connection(ContactDataProviderConnection* *value);
};
template<typename X> struct IContactDataProviderTriggerDetails_adaptor : X {
	union {
		struct : property {
			ptr<ContactDataProviderConnection> get() { ContactDataProviderConnection* value; hrcheck(enc(&IContactDataProviderTriggerDetails_adaptor::Connection)->_get_Connection(&value)); return from_abi(value); }
			ptr<ContactDataProviderConnection> operator()() { return get(); }
			operator ptr<ContactDataProviderConnection> () { return get(); }
			ptr<ContactDataProviderConnection> operator->() { return get(); }
		} Connection;
	};
	IContactDataProviderTriggerDetails_adaptor() {}
};
template<typename X> struct adapt<IContactDataProviderTriggerDetails, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderTriggerDetails_adaptor<X> { typedef adapt IContactDataProviderTriggerDetails; };
struct IContactDataProviderTriggerDetails : IContactDataProviderTriggerDetails_raw, generate<IContactDataProviderTriggerDetails> {};

// IContactDataProviderConnection2
struct IContactDataProviderConnection2_raw : IInspectable {
	virtual STDMETHODIMP _add_CreateOrUpdateContactRequested(Foundation::TypedEventHandler<ContactDataProviderConnection*, ContactListCreateOrUpdateContactRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_CreateOrUpdateContactRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_DeleteContactRequested(Foundation::TypedEventHandler<ContactDataProviderConnection*, ContactListDeleteContactRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_DeleteContactRequested(Foundation::EventRegistrationToken token);
};
template<typename X> struct IContactDataProviderConnection2_adaptor : X {
	union {
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<ContactDataProviderConnection>, ptr<ContactListCreateOrUpdateContactRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IContactDataProviderConnection2_adaptor::CreateOrUpdateContactRequested)->_add_CreateOrUpdateContactRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IContactDataProviderConnection2_adaptor::CreateOrUpdateContactRequested)->_remove_CreateOrUpdateContactRequested(token)); }
		} CreateOrUpdateContactRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<ContactDataProviderConnection>, ptr<ContactListDeleteContactRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IContactDataProviderConnection2_adaptor::DeleteContactRequested)->_add_DeleteContactRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IContactDataProviderConnection2_adaptor::DeleteContactRequested)->_remove_DeleteContactRequested(token)); }
		} DeleteContactRequested;
	};
	IContactDataProviderConnection2_adaptor() {}
};
template<typename X> struct adapt<IContactDataProviderConnection2, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection2_adaptor<X> { typedef adapt IContactDataProviderConnection2; };
struct IContactDataProviderConnection2 : IContactDataProviderConnection2_raw, generate<IContactDataProviderConnection2> {};

// IContactDataProviderConnection
struct IContactDataProviderConnection_raw : IInspectable {
	virtual STDMETHODIMP _add_SyncRequested(Foundation::TypedEventHandler<ContactDataProviderConnection*, ContactListSyncManagerSyncRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_SyncRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_ServerSearchReadBatchRequested(Foundation::TypedEventHandler<ContactDataProviderConnection*, ContactListServerSearchReadBatchRequestEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ServerSearchReadBatchRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _Start();
};
template<typename X> struct IContactDataProviderConnection_adaptor : X {
	union {
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<ContactDataProviderConnection>, ptr<ContactListServerSearchReadBatchRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IContactDataProviderConnection_adaptor::ServerSearchReadBatchRequested)->_add_ServerSearchReadBatchRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IContactDataProviderConnection_adaptor::ServerSearchReadBatchRequested)->_remove_ServerSearchReadBatchRequested(token)); }
		} ServerSearchReadBatchRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<ContactDataProviderConnection>, ptr<ContactListSyncManagerSyncRequestEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IContactDataProviderConnection_adaptor::SyncRequested)->_add_SyncRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IContactDataProviderConnection_adaptor::SyncRequested)->_remove_SyncRequested(token)); }
		} SyncRequested;
	};
	void Start() { hrcheck(X::get()->_Start()); }
	IContactDataProviderConnection_adaptor() {}
};
template<typename X> struct adapt<IContactDataProviderConnection, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactDataProviderConnection_adaptor<X> { typedef adapt IContactDataProviderConnection; };
struct IContactDataProviderConnection : IContactDataProviderConnection_raw, generate<IContactDataProviderConnection> {};

// ContactDataProviderConnection
template<typename X> struct statics<ContactDataProviderConnection, X> : X {
	typedef typename X::root_type ContactDataProviderConnection;
};
struct ContactDataProviderConnection : generate<ContactDataProviderConnection> {};

// IContactListSyncManagerSyncRequestEventArgs
struct IContactListSyncManagerSyncRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(ContactListSyncManagerSyncRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IContactListSyncManagerSyncRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<ContactListSyncManagerSyncRequest> get() { ContactListSyncManagerSyncRequest* value; hrcheck(enc(&IContactListSyncManagerSyncRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<ContactListSyncManagerSyncRequest> operator()() { return get(); }
			operator ptr<ContactListSyncManagerSyncRequest> () { return get(); }
			ptr<ContactListSyncManagerSyncRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IContactListSyncManagerSyncRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IContactListSyncManagerSyncRequestEventArgs, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequestEventArgs_adaptor<X> { typedef adapt IContactListSyncManagerSyncRequestEventArgs; };
struct IContactListSyncManagerSyncRequestEventArgs : IContactListSyncManagerSyncRequestEventArgs_raw, generate<IContactListSyncManagerSyncRequestEventArgs> {};

// ContactListSyncManagerSyncRequestEventArgs
template<typename X> struct statics<ContactListSyncManagerSyncRequestEventArgs, X> : X {
	typedef typename X::root_type ContactListSyncManagerSyncRequestEventArgs;
};
struct ContactListSyncManagerSyncRequestEventArgs : generate<ContactListSyncManagerSyncRequestEventArgs> {};

// IContactListServerSearchReadBatchRequestEventArgs
struct IContactListServerSearchReadBatchRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(ContactListServerSearchReadBatchRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
};
template<typename X> struct IContactListServerSearchReadBatchRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<ContactListServerSearchReadBatchRequest> get() { ContactListServerSearchReadBatchRequest* value; hrcheck(enc(&IContactListServerSearchReadBatchRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<ContactListServerSearchReadBatchRequest> operator()() { return get(); }
			operator ptr<ContactListServerSearchReadBatchRequest> () { return get(); }
			ptr<ContactListServerSearchReadBatchRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	IContactListServerSearchReadBatchRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IContactListServerSearchReadBatchRequestEventArgs, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequestEventArgs_adaptor<X> { typedef adapt IContactListServerSearchReadBatchRequestEventArgs; };
struct IContactListServerSearchReadBatchRequestEventArgs : IContactListServerSearchReadBatchRequestEventArgs_raw, generate<IContactListServerSearchReadBatchRequestEventArgs> {};

// ContactListServerSearchReadBatchRequestEventArgs
template<typename X> struct statics<ContactListServerSearchReadBatchRequestEventArgs, X> : X {
	typedef typename X::root_type ContactListServerSearchReadBatchRequestEventArgs;
};
struct ContactListServerSearchReadBatchRequestEventArgs : generate<ContactListServerSearchReadBatchRequestEventArgs> {};

// IContactListCreateOrUpdateContactRequestEventArgs
struct IContactListCreateOrUpdateContactRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(ContactListCreateOrUpdateContactRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IContactListCreateOrUpdateContactRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<ContactListCreateOrUpdateContactRequest> get() { ContactListCreateOrUpdateContactRequest* value; hrcheck(enc(&IContactListCreateOrUpdateContactRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<ContactListCreateOrUpdateContactRequest> operator()() { return get(); }
			operator ptr<ContactListCreateOrUpdateContactRequest> () { return get(); }
			ptr<ContactListCreateOrUpdateContactRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IContactListCreateOrUpdateContactRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IContactListCreateOrUpdateContactRequestEventArgs, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequestEventArgs_adaptor<X> { typedef adapt IContactListCreateOrUpdateContactRequestEventArgs; };
struct IContactListCreateOrUpdateContactRequestEventArgs : IContactListCreateOrUpdateContactRequestEventArgs_raw, generate<IContactListCreateOrUpdateContactRequestEventArgs> {};

// ContactListCreateOrUpdateContactRequestEventArgs
template<typename X> struct statics<ContactListCreateOrUpdateContactRequestEventArgs, X> : X {
	typedef typename X::root_type ContactListCreateOrUpdateContactRequestEventArgs;
};
struct ContactListCreateOrUpdateContactRequestEventArgs : generate<ContactListCreateOrUpdateContactRequestEventArgs> {};

// IContactListDeleteContactRequestEventArgs
struct IContactListDeleteContactRequestEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Request(ContactListDeleteContactRequest* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *result);
};
template<typename X> struct IContactListDeleteContactRequestEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<ContactListDeleteContactRequest> get() { ContactListDeleteContactRequest* value; hrcheck(enc(&IContactListDeleteContactRequestEventArgs_adaptor::Request)->_get_Request(&value)); return from_abi(value); }
			ptr<ContactListDeleteContactRequest> operator()() { return get(); }
			operator ptr<ContactListDeleteContactRequest> () { return get(); }
			ptr<ContactListDeleteContactRequest> operator->() { return get(); }
		} Request;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* result; hrcheck(X::get()->_GetDeferral(&result)); return from_abi(result); }
	IContactListDeleteContactRequestEventArgs_adaptor() {}
};
template<typename X> struct adapt<IContactListDeleteContactRequestEventArgs, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequestEventArgs_adaptor<X> { typedef adapt IContactListDeleteContactRequestEventArgs; };
struct IContactListDeleteContactRequestEventArgs : IContactListDeleteContactRequestEventArgs_raw, generate<IContactListDeleteContactRequestEventArgs> {};

// ContactListDeleteContactRequestEventArgs
template<typename X> struct statics<ContactListDeleteContactRequestEventArgs, X> : X {
	typedef typename X::root_type ContactListDeleteContactRequestEventArgs;
};
struct ContactListDeleteContactRequestEventArgs : generate<ContactListDeleteContactRequestEventArgs> {};

// IContactListSyncManagerSyncRequest
struct IContactListSyncManagerSyncRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_ContactListId(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IContactListSyncManagerSyncRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IContactListSyncManagerSyncRequest_adaptor::ContactListId)->_get_ContactListId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ContactListId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IContactListSyncManagerSyncRequest_adaptor() {}
};
template<typename X> struct adapt<IContactListSyncManagerSyncRequest, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListSyncManagerSyncRequest_adaptor<X> { typedef adapt IContactListSyncManagerSyncRequest; };
struct IContactListSyncManagerSyncRequest : IContactListSyncManagerSyncRequest_raw, generate<IContactListSyncManagerSyncRequest> {};

// IContactListServerSearchReadBatchRequest
struct IContactListServerSearchReadBatchRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_SessionId(HSTRING *value);
	virtual STDMETHODIMP _get_ContactListId(HSTRING *value);
	virtual STDMETHODIMP _get_Options(ContactQueryOptions* *value);
	virtual STDMETHODIMP _get_SuggestedBatchSize(unsigned *value);
	virtual STDMETHODIMP _SaveContactAsync(Contact* contact, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(ContactBatchStatus batchStatus, Foundation::IAsyncAction* *result);
};
template<typename X> struct IContactListServerSearchReadBatchRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IContactListServerSearchReadBatchRequest_adaptor::ContactListId)->_get_ContactListId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ContactListId;
		struct : property {
			ptr<ContactQueryOptions> get() { ContactQueryOptions* value; hrcheck(enc(&IContactListServerSearchReadBatchRequest_adaptor::Options)->_get_Options(&value)); return from_abi(value); }
			ptr<ContactQueryOptions> operator()() { return get(); }
			operator ptr<ContactQueryOptions> () { return get(); }
			ptr<ContactQueryOptions> operator->() { return get(); }
		} Options;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IContactListServerSearchReadBatchRequest_adaptor::SessionId)->_get_SessionId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} SessionId;
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IContactListServerSearchReadBatchRequest_adaptor::SuggestedBatchSize)->_get_SuggestedBatchSize(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} SuggestedBatchSize;
	};
	ptr<Foundation::IAsyncAction> SaveContactAsync(pptr<Contact> contact) { Foundation::IAsyncAction* result; hrcheck(X::get()->_SaveContactAsync(contact, &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync(ContactBatchStatus batchStatus) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(batchStatus, &result)); return from_abi(result); }
	IContactListServerSearchReadBatchRequest_adaptor() {}
};
template<typename X> struct adapt<IContactListServerSearchReadBatchRequest, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListServerSearchReadBatchRequest_adaptor<X> { typedef adapt IContactListServerSearchReadBatchRequest; };
struct IContactListServerSearchReadBatchRequest : IContactListServerSearchReadBatchRequest_raw, generate<IContactListServerSearchReadBatchRequest> {};

// IContactListCreateOrUpdateContactRequest
struct IContactListCreateOrUpdateContactRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_ContactListId(HSTRING *value);
	virtual STDMETHODIMP _get_Contact(Contacts::Contact* *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Contacts::Contact* createdOrUpdatedContact, Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IContactListCreateOrUpdateContactRequest_adaptor : X {
	union {
		struct : property {
			ptr<Contacts::Contact> get() { Contacts::Contact* value; hrcheck(enc(&IContactListCreateOrUpdateContactRequest_adaptor::Contact)->_get_Contact(&value)); return from_abi(value); }
			ptr<Contacts::Contact> operator()() { return get(); }
			operator ptr<Contacts::Contact> () { return get(); }
			ptr<Contacts::Contact> operator->() { return get(); }
		} Contact;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IContactListCreateOrUpdateContactRequest_adaptor::ContactListId)->_get_ContactListId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ContactListId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync(pptr<Contacts::Contact> createdOrUpdatedContact) { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(createdOrUpdatedContact, &result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IContactListCreateOrUpdateContactRequest_adaptor() {}
};
template<typename X> struct adapt<IContactListCreateOrUpdateContactRequest, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListCreateOrUpdateContactRequest_adaptor<X> { typedef adapt IContactListCreateOrUpdateContactRequest; };
struct IContactListCreateOrUpdateContactRequest : IContactListCreateOrUpdateContactRequest_raw, generate<IContactListCreateOrUpdateContactRequest> {};

// IContactListDeleteContactRequest
struct IContactListDeleteContactRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_ContactListId(HSTRING *value);
	virtual STDMETHODIMP _get_ContactId(HSTRING *value);
	virtual STDMETHODIMP _ReportCompletedAsync(Foundation::IAsyncAction* *result);
	virtual STDMETHODIMP _ReportFailedAsync(Foundation::IAsyncAction* *result);
};
template<typename X> struct IContactListDeleteContactRequest_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IContactListDeleteContactRequest_adaptor::ContactId)->_get_ContactId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ContactId;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IContactListDeleteContactRequest_adaptor::ContactListId)->_get_ContactListId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} ContactListId;
	};
	ptr<Foundation::IAsyncAction> ReportCompletedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportCompletedAsync(&result)); return from_abi(result); }
	ptr<Foundation::IAsyncAction> ReportFailedAsync() { Foundation::IAsyncAction* result; hrcheck(X::get()->_ReportFailedAsync(&result)); return from_abi(result); }
	IContactListDeleteContactRequest_adaptor() {}
};
template<typename X> struct adapt<IContactListDeleteContactRequest, X> : Windows::ApplicationModel::Contacts::DataProvider::IContactListDeleteContactRequest_adaptor<X> { typedef adapt IContactListDeleteContactRequest; };
struct IContactListDeleteContactRequest : IContactListDeleteContactRequest_raw, generate<IContactListDeleteContactRequest> {};

// ContactDataProviderTriggerDetails
template<typename X> struct statics<ContactDataProviderTriggerDetails, X> : X {
	typedef typename X::root_type ContactDataProviderTriggerDetails;
};
struct ContactDataProviderTriggerDetails : generate<ContactDataProviderTriggerDetails> {};

// ContactListSyncManagerSyncRequest
template<typename X> struct statics<ContactListSyncManagerSyncRequest, X> : X {
	typedef typename X::root_type ContactListSyncManagerSyncRequest;
};
struct ContactListSyncManagerSyncRequest : generate<ContactListSyncManagerSyncRequest> {};

// ContactListServerSearchReadBatchRequest
template<typename X> struct statics<ContactListServerSearchReadBatchRequest, X> : X {
	typedef typename X::root_type ContactListServerSearchReadBatchRequest;
};
struct ContactListServerSearchReadBatchRequest : generate<ContactListServerSearchReadBatchRequest> {};

// ContactListCreateOrUpdateContactRequest
template<typename X> struct statics<ContactListCreateOrUpdateContactRequest, X> : X {
	typedef typename X::root_type ContactListCreateOrUpdateContactRequest;
};
struct ContactListCreateOrUpdateContactRequest : generate<ContactListCreateOrUpdateContactRequest> {};

// ContactListDeleteContactRequest
template<typename X> struct statics<ContactListDeleteContactRequest, X> : X {
	typedef typename X::root_type ContactListDeleteContactRequest;
};
struct ContactListDeleteContactRequest : generate<ContactListDeleteContactRequest> {};
}}}}
} // namespace iso_winrt
