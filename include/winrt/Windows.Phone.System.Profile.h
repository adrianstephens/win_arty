#pragma once
// generated by isopod tools
// namespaces:
// Windows.Phone.System.Profile

#include "Windows.Phone.System.Profile.0.h"

namespace iso_winrt {

// forward types


// defs

template<> struct def<Windows::Phone::System::Profile::IRetailModeStatics> : interface_type<> {};
template<> struct def<Windows::Phone::System::Profile::RetailMode> : class_type<Platform::Object, Platform::Object> {};

// uuids

template<> struct uuid<Windows::Phone::System::Profile::IRetailModeStatics> { define_guid(0xD7DED029, 0xFDDA, 0x43E7, 0x93, 0xFB, 0xE5, 0x3A, 0xB6, 0xE8, 0x9E, 0xC3);};

// types

namespace Windows { namespace Phone { namespace System { namespace Profile {

// IRetailModeStatics
struct IRetailModeStatics : IInspectable {
	virtual STDMETHODIMP _get_RetailModeEnabled(bool *value);
};

// RetailMode
template<typename> struct RetailMode_statics {
	static struct _RetailModeEnabled : property {
		bool get() { bool value; hrcheck(get_activation_factory<RetailMode, IRetailModeStatics>()->_get_RetailModeEnabled(&value)); return value; }
		bool operator()() { return get(); }
		operator bool () { return get(); }
	} RetailModeEnabled;
};
template<typename X> typename RetailMode_statics<X>::_RetailModeEnabled RetailMode_statics<X>::RetailModeEnabled;

template<typename X> struct statics<RetailMode, X> : X, Windows::Phone::System::Profile::RetailMode_statics<void> {
	typedef typename X::root_type RetailMode;
};
struct RetailMode : generate<RetailMode> {};
}}}}
} // namespace iso_winrt
