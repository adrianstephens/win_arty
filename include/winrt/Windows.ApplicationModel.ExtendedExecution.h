#pragma once
// generated by isopod tools
// namespaces:
// Windows.ApplicationModel.ExtendedExecution

#include "Windows.ApplicationModel.ExtendedExecution.0.h"
#include "Windows.Foundation.h"

namespace iso_winrt {

// forward types


// defs

template<> struct def<Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionResult> : enum_type<int> {};
template<> struct def<Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedReason> : enum_type<int> {};
template<> struct def<Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionRevokedEventArgs> : interface_type<> {};
template<> struct def<Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionReason> : enum_type<int> {};
template<> struct def<Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionSession> : interface_type<Windows::Foundation::IClosable> {};
template<> struct def<Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionRevokedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionRevokedEventArgs> {};
template<> struct def<Windows::ApplicationModel::ExtendedExecution::ExtendedExecutionSession> : class_type<Platform::Object, Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionSession> {};

// uuids

template<> struct uuid<Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionRevokedEventArgs> { define_guid(0xBFBC9F16, 0x63B5, 0x4C0B, 0xAA, 0xD6, 0x82, 0x8A, 0xF5, 0x37, 0x3E, 0xC3);};
template<> struct uuid<Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionSession> { define_guid(0xAF908A2D, 0x118B, 0x48F1, 0x93, 0x8, 0xC, 0x4F, 0xC4, 0x1E, 0x20, 0xF);};

// types

namespace Windows { namespace ApplicationModel { namespace ExtendedExecution {

// IExtendedExecutionRevokedEventArgs
struct IExtendedExecutionRevokedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Reason(ExtendedExecutionRevokedReason *value);
};
template<typename X> struct IExtendedExecutionRevokedEventArgs_adaptor : X {
	union {
		struct : property {
			ExtendedExecutionRevokedReason get() { ExtendedExecutionRevokedReason value; hrcheck(enc(&IExtendedExecutionRevokedEventArgs_adaptor::Reason)->_get_Reason(&value)); return value; }
			ExtendedExecutionRevokedReason operator()() { return get(); }
			operator ExtendedExecutionRevokedReason () { return get(); }
		} Reason;
	};
	IExtendedExecutionRevokedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IExtendedExecutionRevokedEventArgs, X> : Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionRevokedEventArgs_adaptor<X> { typedef adapt IExtendedExecutionRevokedEventArgs; };
struct IExtendedExecutionRevokedEventArgs : IExtendedExecutionRevokedEventArgs_raw, generate<IExtendedExecutionRevokedEventArgs> {};

// IExtendedExecutionSession
struct IExtendedExecutionSession_raw : IInspectable {
	virtual STDMETHODIMP _get_Reason(ExtendedExecutionReason *value);
	virtual STDMETHODIMP _put_Reason(ExtendedExecutionReason value);
	virtual STDMETHODIMP _get_Description(HSTRING *value);
	virtual STDMETHODIMP _put_Description(HSTRING value);
	virtual STDMETHODIMP _get_PercentProgress(unsigned *value);
	virtual STDMETHODIMP _put_PercentProgress(unsigned value);
	virtual STDMETHODIMP _add_Revoked(Foundation::TypedEventHandler<IInspectable*, ExtendedExecutionRevokedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_Revoked(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _RequestExtensionAsync(Foundation::IAsyncOperation<ExtendedExecutionResult>* *operation);
};
template<typename X> struct IExtendedExecutionSession_adaptor : X {
	union {
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IExtendedExecutionSession_adaptor::Description)->_get_Description(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IExtendedExecutionSession_adaptor::Description)->_put_Description(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} Description;
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IExtendedExecutionSession_adaptor::PercentProgress)->_get_PercentProgress(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
			void put(unsigned value) { hrcheck(enc(&IExtendedExecutionSession_adaptor::PercentProgress)->_put_PercentProgress(value)); }
			void operator=(unsigned value) { put(value); }
			void operator()(unsigned value) { put(value); }
		} PercentProgress;
		struct : property {
			ExtendedExecutionReason get() { ExtendedExecutionReason value; hrcheck(enc(&IExtendedExecutionSession_adaptor::Reason)->_get_Reason(&value)); return value; }
			ExtendedExecutionReason operator()() { return get(); }
			operator ExtendedExecutionReason () { return get(); }
			void put(ExtendedExecutionReason value) { hrcheck(enc(&IExtendedExecutionSession_adaptor::Reason)->_put_Reason(value)); }
			void operator=(ExtendedExecutionReason value) { put(value); }
			void operator()(ExtendedExecutionReason value) { put(value); }
		} Reason;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<object, ptr<ExtendedExecutionRevokedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IExtendedExecutionSession_adaptor::Revoked)->_add_Revoked(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IExtendedExecutionSession_adaptor::Revoked)->_remove_Revoked(token)); }
		} Revoked;
	};
	ptr<Foundation::IAsyncOperation<ExtendedExecutionResult>> RequestExtensionAsync() { Foundation::IAsyncOperation<ExtendedExecutionResult>* operation; hrcheck(X::get()->_RequestExtensionAsync(&operation)); return from_abi(operation); }
	IExtendedExecutionSession_adaptor() {}
};
template<typename X> struct adapt<IExtendedExecutionSession, X> : Windows::ApplicationModel::ExtendedExecution::IExtendedExecutionSession_adaptor<X> { typedef adapt IExtendedExecutionSession; };
struct IExtendedExecutionSession : IExtendedExecutionSession_raw, generate<IExtendedExecutionSession> {};

// ExtendedExecutionRevokedEventArgs
template<typename X> struct statics<ExtendedExecutionRevokedEventArgs, X> : X {
	typedef typename X::root_type ExtendedExecutionRevokedEventArgs;
};
struct ExtendedExecutionRevokedEventArgs : generate<ExtendedExecutionRevokedEventArgs> {};

// ExtendedExecutionSession
template<typename X> struct statics<ExtendedExecutionSession, X> : X {
	typedef typename X::root_type ExtendedExecutionSession;
};
struct ExtendedExecutionSession : generate<ExtendedExecutionSession> {};
}}}
} // namespace iso_winrt
