#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Networking { namespace Sockets {
enum class ControlChannelTriggerStatus : int {
	HardwareSlotRequested = 0,
	SoftwareSlotAllocated = 1,
	HardwareSlotAllocated = 2,
	PolicyError = 3,
	SystemError = 4,
	TransportDisconnected = 5,
	ServiceUnavailable = 6,
};
enum class SocketMessageType : int {
	Binary = 0,
	Utf8 = 1,
};
enum class SocketProtectionLevel : int {
	PlainSocket = 0,
	Ssl = 1,
	SslAllowNullEncryption = 2,
	BluetoothEncryptionAllowNullAuthentication = 3,
	BluetoothEncryptionWithAuthentication = 4,
	Ssl3AllowWeakEncryption = 5,
	Tls10 = 6,
	Tls11 = 7,
	Tls12 = 8,
	Unspecified = 9,
};
enum class SocketQualityOfService : int {
	Normal = 0,
	LowLatency = 1,
};
enum class SocketErrorStatus : int {
	Unknown = 0,
	OperationAborted = 1,
	HttpInvalidServerResponse = 2,
	ConnectionTimedOut = 3,
	AddressFamilyNotSupported = 4,
	SocketTypeNotSupported = 5,
	HostNotFound = 6,
	NoDataRecordOfRequestedType = 7,
	NonAuthoritativeHostNotFound = 8,
	ClassTypeNotFound = 9,
	AddressAlreadyInUse = 10,
	CannotAssignRequestedAddress = 11,
	ConnectionRefused = 12,
	NetworkIsUnreachable = 13,
	UnreachableHost = 14,
	NetworkIsDown = 15,
	NetworkDroppedConnectionOnReset = 16,
	SoftwareCausedConnectionAbort = 17,
	ConnectionResetByPeer = 18,
	HostIsDown = 19,
	NoAddressesFound = 20,
	TooManyOpenFiles = 21,
	MessageTooLong = 22,
	CertificateExpired = 23,
	CertificateUntrustedRoot = 24,
	CertificateCommonNameIsIncorrect = 25,
	CertificateWrongUsage = 26,
	CertificateRevoked = 27,
	CertificateNoRevocationCheck = 28,
	CertificateRevocationServerOffline = 29,
	CertificateIsInvalid = 30,
};
enum class SocketSslErrorSeverity : int {
	None = 0,
	Ignorable = 1,
	Fatal = 2,
};
struct RoundTripTimeStatistics {
	unsigned Variance;
	unsigned Max;
	unsigned Min;
	unsigned Sum;
};
struct BandwidthStatistics {
	unsigned __int64 OutboundBitsPerSecond;
	unsigned __int64 InboundBitsPerSecond;
	unsigned __int64 OutboundBitsPerSecondInstability;
	unsigned __int64 InboundBitsPerSecondInstability;
	bool OutboundBandwidthPeaked;
	bool InboundBandwidthPeaked;
};
enum class SocketActivityKind : int {
	None = 0,
	StreamSocketListener = 1,
	DatagramSocket = 2,
	StreamSocket = 3,
};
enum class SocketActivityTriggerReason : int {
	None = 0,
	SocketActivity = 1,
	ConnectionAccepted = 2,
	KeepAliveTimerExpired = 3,
	SocketClosed = 4,
};
enum class SocketActivityConnectedStandbyAction : int {
	DoNotWake = 0,
	Wake = 1,
};
enum class MessageWebSocketReceiveMode : int {
	FullMessage = 0,
	PartialMessage = 1,
};
struct ISocketActivityInformation;
struct ISocketActivityContextFactory;
struct ISocketActivityContext;
struct SocketActivityContext;
struct IDatagramSocketStatics;
struct IDatagramSocket3;
struct IDatagramSocket2;
struct IDatagramSocket;
struct DatagramSocket;
struct IStreamSocketStatics;
struct IStreamSocket3;
struct IStreamSocket2;
struct IStreamSocket;
struct StreamSocket;
struct IStreamSocketListener3;
struct IStreamSocketListener2;
struct IStreamSocketListener;
struct StreamSocketListener;
struct ISocketActivityTriggerDetails;
struct ISocketActivityInformationStatics;
struct SocketActivityInformation;
struct IDatagramSocketMessageReceivedEventArgs;
struct IMessageWebSocketMessageReceivedEventArgs;
struct IMessageWebSocketMessageReceivedEventArgs2;
struct IWebSocketClosedEventArgs;
struct IDatagramSocketInformation;
struct IDatagramSocketControl;
struct IDatagramSocketControl2;
struct IDatagramSocketControl3;
struct DatagramSocketControl;
struct DatagramSocketInformation;
struct DatagramSocketMessageReceivedEventArgs;
struct IStreamSocketInformation;
struct IStreamSocketInformation2;
struct IStreamSocketControl;
struct IStreamSocketControl2;
struct IStreamSocketControl3;
struct IStreamSocketControl4;
struct StreamSocketControl;
struct StreamSocketInformation;
struct IStreamSocketListenerControl;
struct IStreamSocketListenerControl2;
struct IStreamSocketListenerInformation;
struct IStreamSocketListenerConnectionReceivedEventArgs;
struct StreamSocketListenerControl;
struct StreamSocketListenerInformation;
struct StreamSocketListenerConnectionReceivedEventArgs;
struct IWebSocketServerCustomValidationRequestedEventArgs;
struct IWebSocketControl;
struct IWebSocketControl2;
struct IWebSocketInformation;
struct IWebSocketInformation2;
struct IWebSocket;
struct WebSocketClosedEventArgs;
struct IMessageWebSocketControl;
struct IMessageWebSocketControl2;
struct IMessageWebSocket;
struct MessageWebSocketControl;
struct MessageWebSocketInformation;
struct IMessageWebSocket3;
struct IMessageWebSocket2;
struct MessageWebSocket;
struct MessageWebSocketMessageReceivedEventArgs;
struct WebSocketServerCustomValidationRequestedEventArgs;
struct IStreamWebSocketControl;
struct IStreamWebSocketControl2;
struct IStreamWebSocket;
struct StreamWebSocketControl;
struct StreamWebSocketInformation;
struct IStreamWebSocket2;
struct StreamWebSocket;
struct ISocketErrorStatics;
struct IWebSocketErrorStatics;
struct IServerMessageWebSocket;
struct ServerMessageWebSocket;
struct IServerMessageWebSocketControl;
struct ServerMessageWebSocketControl;
struct IServerMessageWebSocketInformation;
struct ServerMessageWebSocketInformation;
struct IServerStreamWebSocketInformation;
struct IServerStreamWebSocket;
struct ServerStreamWebSocketInformation;
struct ServerStreamWebSocket;
struct WebSocketKeepAlive;
struct SocketError;
struct WebSocketError;
struct SocketActivityTriggerDetails;
struct ControlChannelTriggerContract {};
enum class ControlChannelTriggerResourceType : int {
	RequestSoftwareSlot = 0,
	RequestHardwareSlot = 1,
};
enum class ControlChannelTriggerResetReason : int {
	FastUserSwitched = 0,
	LowPowerExit = 1,
	QuietHoursExit = 2,
	ApplicationRestart = 3,
};
struct IControlChannelTrigger;
struct IControlChannelTriggerFactory;
struct IControlChannelTrigger2;
struct ControlChannelTrigger;
struct IControlChannelTriggerEventDetails;
struct IControlChannelTriggerResetEventDetails;
}}}
} // namespace iso_winrt
