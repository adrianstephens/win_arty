#pragma once
// generated by isopod tools
// namespaces:
// Windows.UI.WebUI

#include "Windows.UI.WebUI.0.h"
#include "Windows.ApplicationModel.Core.0.h"
#include "Windows.ApplicationModel.Wallet.0.h"
#include "Windows.ApplicationModel.h"
#include "Windows.ApplicationModel.Background.h"
#include "Windows.Foundation.h"
#include "Windows.ApplicationModel.Activation.h"
#include "Windows.Graphics.Printing.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace ApplicationModel { namespace Appointments { namespace AppointmentsProvider {
struct ReplaceAppointmentOperation;
struct AddAppointmentOperation;
struct RemoveAppointmentOperation;
}}
namespace Calls {
struct LockScreenCallUI;
}
namespace Contacts { namespace Provider {
struct ContactPickerUI;
}
struct Contact;
struct ContactAddress;
struct ContactPanel;
}
namespace DataTransfer { namespace ShareTarget {
struct ShareOperation;
}}
namespace Search {
struct SearchPaneQueryLinguisticDetails;
}
namespace UserDataAccounts { namespace Provider {
struct IUserDataAccountProviderOperation;
}}}
namespace Devices { namespace Enumeration {
struct DeviceInformation;
}
namespace Printers { namespace Extensions {
struct PrintTaskConfiguration;
struct Print3DWorkflow;
}}}
namespace Foundation { namespace Collections {
struct ValueSet;
template<typename T> struct IVectorView;
}}
namespace Media { namespace SpeechRecognition {
struct SpeechRecognitionResult;
}}
namespace Security { namespace Authentication { namespace Web { namespace Provider {
struct IWebAccountProviderOperation;
}
struct WebAuthenticationResult;
}}}
namespace Storage { namespace Pickers { namespace Provider {
struct FileSavePickerUI;
struct FileOpenPickerUI;
}}
namespace Provider {
struct CachedFileUpdaterUI;
}
namespace Search {
struct StorageFileQueryResult;
}
struct StorageFolder;
struct StorageFile;
struct IStorageItem;
}
namespace System {
struct ProtocolForResultsOperation;
struct User;
}}

// defs

template<> struct def<Windows::UI::WebUI::IActivatedEventArgsDeferral> : overridable_type<> {};
template<> struct def<Windows::UI::WebUI::WebUIPrintTaskSettingsActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IPrintTaskSettingsActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIPrint3DWorkflowActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IPrint3DWorkflowActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUILockScreenCallActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::ILockScreenCallActivatedEventArgs, Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUICameraSettingsActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::ICameraSettingsActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIContactPickerActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IContactPickerActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIContactCallActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IContactCallActivatedEventArgs, Windows::ApplicationModel::Activation::IContactActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIContactMessageActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IContactMessageActivatedEventArgs, Windows::ApplicationModel::Activation::IContactActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIContactMapActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IContactMapActivatedEventArgs, Windows::ApplicationModel::Activation::IContactActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIContactPostActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IContactPostActivatedEventArgs, Windows::ApplicationModel::Activation::IContactActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIContactVideoCallActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IContactVideoCallActivatedEventArgs, Windows::ApplicationModel::Activation::IContactActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUISearchActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::ISearchActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::ISearchActivatedEventArgsWithLinguisticDetails, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIWalletActionActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IWalletActionActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIAppointmentsProviderAddAppointmentActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IAppointmentsProviderAddAppointmentActivatedEventArgs, Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIAppointmentsProviderReplaceAppointmentActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IAppointmentsProviderReplaceAppointmentActivatedEventArgs, Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIAppointmentsProviderRemoveAppointmentActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IAppointmentsProviderRemoveAppointmentActivatedEventArgs, Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs, Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIAppointmentsProviderShowTimeFrameActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IAppointmentsProviderShowTimeFrameActivatedEventArgs, Windows::ApplicationModel::Activation::IAppointmentsProviderActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIContactPanelActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IContactPanelActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIShareTargetActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIUserDataAccountProviderActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IUserDataAccountProviderActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIDevicePairingActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IDevicePairingActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIVoiceCommandActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IVoiceCommandActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::IActivatedDeferral> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::ActivatedDeferral> : class_type<Platform::Object, Windows::UI::WebUI::IActivatedDeferral> {};
template<> struct def<Windows::UI::WebUI::IActivatedOperation> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::ActivatedOperation> : class_type<Platform::Object, Windows::UI::WebUI::IActivatedOperation> {};
template<> struct def<Windows::UI::WebUI::WebUILaunchActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IPrelaunchActivatedEventArgs, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser, Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs2> {};
template<> struct def<Windows::UI::WebUI::WebUIFileActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IFileActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IFileActivatedEventArgsWithNeighboringFiles, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIProtocolActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIProtocolForResultsActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IProtocolForResultsActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IProtocolActivatedEventArgs, Windows::ApplicationModel::Activation::IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIFileOpenPickerActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs2, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIFileSavePickerActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs2, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUICachedFileUpdaterActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIDeviceActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IDeviceActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUILockScreenActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::ILockScreenActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIRestrictedLaunchActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IRestrictedLaunchActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIFileOpenPickerContinuationEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IFileOpenPickerContinuationEventArgs, Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIFileSavePickerContinuationEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IFileSavePickerContinuationEventArgs, Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIFolderPickerContinuationEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IFolderPickerContinuationEventArgs, Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIWebAuthenticationBrokerContinuationEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IWebAuthenticationBrokerContinuationEventArgs, Windows::ApplicationModel::Activation::IContinuationActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIWebAccountProviderActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IWebAccountProviderActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIDialReceiverActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IDialReceiverActivatedEventArgs, Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IApplicationViewActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUIToastNotificationActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IToastNotificationActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser> {};
template<> struct def<Windows::UI::WebUI::WebUILockScreenComponentActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIPrintWorkflowForegroundTaskActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUICommandLineActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::ICommandLineActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIStartupTaskActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IStartupTaskActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUIBarcodeScannerPreviewActivatedEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::Activation::IBarcodeScannerPreviewActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgs, Windows::ApplicationModel::Activation::IActivatedEventArgsWithUser, Windows::UI::WebUI::IActivatedEventArgsDeferral> {};
template<> struct def<Windows::UI::WebUI::ActivatedEventHandler> : delegate_type {};
template<> struct def<Windows::UI::WebUI::ResumingEventHandler> : delegate_type {};
template<> struct def<Windows::UI::WebUI::SuspendingEventHandler> : delegate_type {};
template<> struct def<Windows::UI::WebUI::LeavingBackgroundEventHandler> : delegate_type {};
template<> struct def<Windows::UI::WebUI::EnteredBackgroundEventHandler> : delegate_type {};
template<> struct def<Windows::UI::WebUI::NavigatedEventHandler> : delegate_type {};
template<> struct def<Windows::UI::WebUI::IWebUINavigatedEventArgs> : overridable_type<> {};
template<> struct def<Windows::UI::WebUI::IWebUINavigatedOperation> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::WebUINavigatedOperation> : class_type<Platform::Object, Windows::UI::WebUI::IWebUINavigatedOperation> {};
template<> struct def<Windows::UI::WebUI::SuspendingDeferral> : class_type<Platform::Object, Windows::ApplicationModel::ISuspendingDeferral> {};
template<> struct def<Windows::UI::WebUI::SuspendingOperation> : class_type<Platform::Object, Windows::ApplicationModel::ISuspendingOperation> {};
template<> struct def<Windows::UI::WebUI::SuspendingEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::ISuspendingEventArgs> {};
template<> struct def<Windows::UI::WebUI::LeavingBackgroundEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::ILeavingBackgroundEventArgs> {};
template<> struct def<Windows::UI::WebUI::EnteredBackgroundEventArgs> : class_type<Platform::Object, Windows::ApplicationModel::IEnteredBackgroundEventArgs> {};
template<> struct def<Windows::UI::WebUI::IWebUIBackgroundTaskInstance> : overridable_type<> {};
template<> struct def<Windows::UI::WebUI::IWebUIBackgroundTaskInstanceStatics> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::WebUIBackgroundTaskInstanceRuntimeClass> : class_type<Platform::Object, Windows::UI::WebUI::IWebUIBackgroundTaskInstance, Windows::ApplicationModel::Background::IBackgroundTaskInstance> {};
template<> struct def<Windows::UI::WebUI::WebUIBackgroundTaskInstance> : class_type<Platform::Object, Platform::Object> {};
template<> struct def<Windows::UI::WebUI::IWebUINavigatedDeferral> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::WebUINavigatedDeferral> : class_type<Platform::Object, Windows::UI::WebUI::IWebUINavigatedDeferral> {};
template<> struct def<Windows::UI::WebUI::WebUINavigatedEventArgs> : class_type<Platform::Object, Windows::UI::WebUI::IWebUINavigatedEventArgs> {};
template<> struct def<Windows::UI::WebUI::IWebUIActivationStatics> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::IWebUIActivationStatics2> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::IWebUIActivationStatics3> : interface_type<> {};
template<> struct def<Windows::UI::WebUI::WebUIApplication> : class_type<Platform::Object, Platform::Object> {};
template<> struct def<Windows::UI::WebUI::PrintContent> : enum_type<int> {};
template<> struct def<Windows::UI::WebUI::IHtmlPrintDocumentSource> : interface_type<Windows::Graphics::Printing::IPrintDocumentSource> {};
template<> struct def<Windows::UI::WebUI::HtmlPrintDocumentSource> : class_type<Platform::Object, Windows::UI::WebUI::IHtmlPrintDocumentSource, Windows::Foundation::IClosable> {};

// uuids

template<> struct uuid<Windows::UI::WebUI::IActivatedEventArgsDeferral> { define_guid(0xCA6D5F74, 0x63C2, 0x44A6, 0xB9, 0x7B, 0xD9, 0xA0, 0x3C, 0x20, 0xBC, 0x9B);};
template<> struct uuid<Windows::UI::WebUI::IActivatedDeferral> { define_guid(0xC3BD1978, 0xA431, 0x49D8, 0xA7, 0x6A, 0x39, 0x5A, 0x4E, 0x3, 0xDC, 0xF3);};
template<> struct uuid<Windows::UI::WebUI::IActivatedOperation> { define_guid(0xB6A0B4BC, 0xC6CA, 0x42FD, 0x98, 0x18, 0x71, 0x90, 0x4E, 0x45, 0xFE, 0xD7);};
template<> struct uuid<Windows::UI::WebUI::ActivatedEventHandler> { define_guid(0x50F1E730, 0xC5D1, 0x4B6B, 0x9A, 0xDB, 0x8A, 0x11, 0x75, 0x6B, 0xE2, 0x9C);};
template<> struct uuid<Windows::UI::WebUI::ResumingEventHandler> { define_guid(0x26599BA9, 0xA22D, 0x4806, 0xA7, 0x28, 0xAC, 0xAD, 0xC1, 0xD0, 0x75, 0xFA);};
template<> struct uuid<Windows::UI::WebUI::SuspendingEventHandler> { define_guid(0x509C429C, 0x78E2, 0x4883, 0xAB, 0xC8, 0x89, 0x60, 0xDC, 0xDE, 0x1B, 0x5C);};
template<> struct uuid<Windows::UI::WebUI::LeavingBackgroundEventHandler> { define_guid(0xB4CCD9, 0x7A9C, 0x4B6B, 0x9A, 0xC4, 0x13, 0x47, 0x4F, 0x26, 0x8B, 0xC4);};
template<> struct uuid<Windows::UI::WebUI::EnteredBackgroundEventHandler> { define_guid(0x2B09A173, 0xB68E, 0x4DEF, 0x88, 0xC1, 0x8D, 0xE8, 0x4E, 0x5A, 0xAB, 0x2F);};
template<> struct uuid<Windows::UI::WebUI::NavigatedEventHandler> { define_guid(0x7AF46FE6, 0x40CA, 0x4E49, 0xA7, 0xD6, 0xDB, 0xDB, 0x33, 0xC, 0xD1, 0xA3);};
template<> struct uuid<Windows::UI::WebUI::IWebUINavigatedEventArgs> { define_guid(0xA75841B8, 0x2499, 0x4030, 0xA6, 0x9D, 0x15, 0xD2, 0xD9, 0xCF, 0xE5, 0x24);};
template<> struct uuid<Windows::UI::WebUI::IWebUINavigatedOperation> { define_guid(0x7A965F08, 0x8182, 0x4A89, 0xAB, 0x67, 0x84, 0x92, 0xE8, 0x75, 0xD, 0x4B);};
template<> struct uuid<Windows::UI::WebUI::IWebUIBackgroundTaskInstance> { define_guid(0x23F12C25, 0xE2F7, 0x4741, 0xBC, 0x9C, 0x39, 0x45, 0x95, 0xDE, 0x24, 0xDC);};
template<> struct uuid<Windows::UI::WebUI::IWebUIBackgroundTaskInstanceStatics> { define_guid(0x9C7A5291, 0x19AE, 0x4CA3, 0xB9, 0x4B, 0xFE, 0x4E, 0xC7, 0x44, 0xA7, 0x40);};
template<> struct uuid<Windows::UI::WebUI::IWebUINavigatedDeferral> { define_guid(0xD804204D, 0x831F, 0x46E2, 0xB4, 0x32, 0x3A, 0xFC, 0xE2, 0x11, 0xF9, 0x62);};
template<> struct uuid<Windows::UI::WebUI::IWebUIActivationStatics> { define_guid(0x351B86BD, 0x43B3, 0x482B, 0x85, 0xDB, 0x35, 0xD8, 0x7B, 0x51, 0x7A, 0xD9);};
template<> struct uuid<Windows::UI::WebUI::IWebUIActivationStatics2> { define_guid(0xC8E88696, 0x4D78, 0x4AA4, 0x8F, 0x6, 0x2A, 0x9E, 0xAD, 0xC6, 0xC4, 0xA);};
template<> struct uuid<Windows::UI::WebUI::IWebUIActivationStatics3> { define_guid(0x91ABB686, 0x1AF5, 0x4445, 0xB4, 0x9F, 0x94, 0x59, 0xF4, 0xF, 0xC8, 0xDE);};
template<> struct uuid<Windows::UI::WebUI::IHtmlPrintDocumentSource> { define_guid(0xCEA6469A, 0xE05, 0x467A, 0xAB, 0xC9, 0x36, 0xEC, 0x1D, 0x4C, 0xDC, 0xB6);};

// types

namespace Windows { namespace UI { namespace WebUI {

// IActivatedEventArgsDeferral
struct IActivatedEventArgsDeferral_raw : IInspectable {
	virtual STDMETHODIMP _get_ActivatedOperation(WebUI::ActivatedOperation* *value) = 0;
};
template<typename X> struct IActivatedEventArgsDeferral_adaptor : X {
	union {
		struct : property {
			ptr<WebUI::ActivatedOperation> get() { WebUI::ActivatedOperation* value; hrcheck(enc(&IActivatedEventArgsDeferral_adaptor::ActivatedOperation)->_get_ActivatedOperation(&value)); return from_abi(value); }
			ptr<WebUI::ActivatedOperation> operator()() { return get(); }
			operator ptr<WebUI::ActivatedOperation> () { return get(); }
			ptr<WebUI::ActivatedOperation> operator->() { return get(); }
		} ActivatedOperation;
	};
	IActivatedEventArgsDeferral_adaptor() {}
};
template<typename X> struct adapt<IActivatedEventArgsDeferral, X> : Windows::UI::WebUI::IActivatedEventArgsDeferral_adaptor<X> { typedef adapt IActivatedEventArgsDeferral; };
template<typename X> struct IActivatedEventArgsDeferral_unadaptor : X {
	STDMETHODIMP _get_ActivatedOperation(WebUI::ActivatedOperation* *value) { return hrtry([&, this] { get_prop(value, ActivatedOperation); }); }
};
template<typename X> struct unadapt<IActivatedEventArgsDeferral, X> : Windows::UI::WebUI::IActivatedEventArgsDeferral_unadaptor<X> {};
struct IActivatedEventArgsDeferral : IActivatedEventArgsDeferral_raw, generate<IActivatedEventArgsDeferral> {};

// WebUIPrintTaskSettingsActivatedEventArgs
template<typename X> struct statics<WebUIPrintTaskSettingsActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIPrintTaskSettingsActivatedEventArgs;
};
struct WebUIPrintTaskSettingsActivatedEventArgs : generate<WebUIPrintTaskSettingsActivatedEventArgs> {};

// WebUIPrint3DWorkflowActivatedEventArgs
template<typename X> struct statics<WebUIPrint3DWorkflowActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIPrint3DWorkflowActivatedEventArgs;
};
struct WebUIPrint3DWorkflowActivatedEventArgs : generate<WebUIPrint3DWorkflowActivatedEventArgs> {};

// WebUILockScreenCallActivatedEventArgs
template<typename X> struct statics<WebUILockScreenCallActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUILockScreenCallActivatedEventArgs;
};
struct WebUILockScreenCallActivatedEventArgs : generate<WebUILockScreenCallActivatedEventArgs> {};

// WebUICameraSettingsActivatedEventArgs
template<typename X> struct statics<WebUICameraSettingsActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUICameraSettingsActivatedEventArgs;
};
struct WebUICameraSettingsActivatedEventArgs : generate<WebUICameraSettingsActivatedEventArgs> {};

// WebUIContactPickerActivatedEventArgs
template<typename X> struct statics<WebUIContactPickerActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIContactPickerActivatedEventArgs;
};
struct WebUIContactPickerActivatedEventArgs : generate<WebUIContactPickerActivatedEventArgs> {};

// WebUIContactCallActivatedEventArgs
template<typename X> struct statics<WebUIContactCallActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIContactCallActivatedEventArgs;
};
struct WebUIContactCallActivatedEventArgs : generate<WebUIContactCallActivatedEventArgs> {};

// WebUIContactMessageActivatedEventArgs
template<typename X> struct statics<WebUIContactMessageActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIContactMessageActivatedEventArgs;
};
struct WebUIContactMessageActivatedEventArgs : generate<WebUIContactMessageActivatedEventArgs> {};

// WebUIContactMapActivatedEventArgs
template<typename X> struct statics<WebUIContactMapActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIContactMapActivatedEventArgs;
};
struct WebUIContactMapActivatedEventArgs : generate<WebUIContactMapActivatedEventArgs> {};

// WebUIContactPostActivatedEventArgs
template<typename X> struct statics<WebUIContactPostActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIContactPostActivatedEventArgs;
};
struct WebUIContactPostActivatedEventArgs : generate<WebUIContactPostActivatedEventArgs> {};

// WebUIContactVideoCallActivatedEventArgs
template<typename X> struct statics<WebUIContactVideoCallActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIContactVideoCallActivatedEventArgs;
};
struct WebUIContactVideoCallActivatedEventArgs : generate<WebUIContactVideoCallActivatedEventArgs> {};

// WebUISearchActivatedEventArgs
template<typename X> struct statics<WebUISearchActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUISearchActivatedEventArgs;
};
struct WebUISearchActivatedEventArgs : generate<WebUISearchActivatedEventArgs> {};

// WebUIWalletActionActivatedEventArgs
template<typename X> struct statics<WebUIWalletActionActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIWalletActionActivatedEventArgs;
};
struct WebUIWalletActionActivatedEventArgs : generate<WebUIWalletActionActivatedEventArgs> {};

// WebUIAppointmentsProviderAddAppointmentActivatedEventArgs
template<typename X> struct statics<WebUIAppointmentsProviderAddAppointmentActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIAppointmentsProviderAddAppointmentActivatedEventArgs;
};
struct WebUIAppointmentsProviderAddAppointmentActivatedEventArgs : generate<WebUIAppointmentsProviderAddAppointmentActivatedEventArgs> {};

// WebUIAppointmentsProviderReplaceAppointmentActivatedEventArgs
template<typename X> struct statics<WebUIAppointmentsProviderReplaceAppointmentActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIAppointmentsProviderReplaceAppointmentActivatedEventArgs;
};
struct WebUIAppointmentsProviderReplaceAppointmentActivatedEventArgs : generate<WebUIAppointmentsProviderReplaceAppointmentActivatedEventArgs> {};

// WebUIAppointmentsProviderRemoveAppointmentActivatedEventArgs
template<typename X> struct statics<WebUIAppointmentsProviderRemoveAppointmentActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIAppointmentsProviderRemoveAppointmentActivatedEventArgs;
};
struct WebUIAppointmentsProviderRemoveAppointmentActivatedEventArgs : generate<WebUIAppointmentsProviderRemoveAppointmentActivatedEventArgs> {};

// WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs
template<typename X> struct statics<WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs;
};
struct WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs : generate<WebUIAppointmentsProviderShowAppointmentDetailsActivatedEventArgs> {};

// WebUIAppointmentsProviderShowTimeFrameActivatedEventArgs
template<typename X> struct statics<WebUIAppointmentsProviderShowTimeFrameActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIAppointmentsProviderShowTimeFrameActivatedEventArgs;
};
struct WebUIAppointmentsProviderShowTimeFrameActivatedEventArgs : generate<WebUIAppointmentsProviderShowTimeFrameActivatedEventArgs> {};

// WebUIContactPanelActivatedEventArgs
template<typename X> struct statics<WebUIContactPanelActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIContactPanelActivatedEventArgs;
};
struct WebUIContactPanelActivatedEventArgs : generate<WebUIContactPanelActivatedEventArgs> {};

// WebUIShareTargetActivatedEventArgs
template<typename X> struct statics<WebUIShareTargetActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIShareTargetActivatedEventArgs;
};
struct WebUIShareTargetActivatedEventArgs : generate<WebUIShareTargetActivatedEventArgs> {};

// WebUIUserDataAccountProviderActivatedEventArgs
template<typename X> struct statics<WebUIUserDataAccountProviderActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIUserDataAccountProviderActivatedEventArgs;
};
struct WebUIUserDataAccountProviderActivatedEventArgs : generate<WebUIUserDataAccountProviderActivatedEventArgs> {};

// WebUIDevicePairingActivatedEventArgs
template<typename X> struct statics<WebUIDevicePairingActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIDevicePairingActivatedEventArgs;
};
struct WebUIDevicePairingActivatedEventArgs : generate<WebUIDevicePairingActivatedEventArgs> {};

// WebUIVoiceCommandActivatedEventArgs
template<typename X> struct statics<WebUIVoiceCommandActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIVoiceCommandActivatedEventArgs;
};
struct WebUIVoiceCommandActivatedEventArgs : generate<WebUIVoiceCommandActivatedEventArgs> {};

// IActivatedDeferral
struct IActivatedDeferral_raw : IInspectable {
	virtual STDMETHODIMP _Complete();
};
template<typename X> struct IActivatedDeferral_adaptor : X {
	void Complete() { hrcheck(X::get()->_Complete()); }
};
template<typename X> struct adapt<IActivatedDeferral, X> : Windows::UI::WebUI::IActivatedDeferral_adaptor<X> { typedef adapt IActivatedDeferral; };
struct IActivatedDeferral : IActivatedDeferral_raw, generate<IActivatedDeferral> {};

// ActivatedDeferral
template<typename X> struct statics<ActivatedDeferral, X> : X {
	typedef typename X::root_type ActivatedDeferral;
};
struct ActivatedDeferral : generate<ActivatedDeferral> {};

// IActivatedOperation
struct IActivatedOperation_raw : IInspectable {
	virtual STDMETHODIMP _GetDeferral(ActivatedDeferral* *deferral);
};
template<typename X> struct IActivatedOperation_adaptor : X {
	ptr<ActivatedDeferral> GetDeferral() { ActivatedDeferral* deferral; hrcheck(X::get()->_GetDeferral(&deferral)); return from_abi(deferral); }
};
template<typename X> struct adapt<IActivatedOperation, X> : Windows::UI::WebUI::IActivatedOperation_adaptor<X> { typedef adapt IActivatedOperation; };
struct IActivatedOperation : IActivatedOperation_raw, generate<IActivatedOperation> {};

// ActivatedOperation
template<typename X> struct statics<ActivatedOperation, X> : X {
	typedef typename X::root_type ActivatedOperation;
};
struct ActivatedOperation : generate<ActivatedOperation> {};

// WebUILaunchActivatedEventArgs
template<typename X> struct statics<WebUILaunchActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUILaunchActivatedEventArgs;
};
struct WebUILaunchActivatedEventArgs : generate<WebUILaunchActivatedEventArgs> {};

// WebUIFileActivatedEventArgs
template<typename X> struct statics<WebUIFileActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIFileActivatedEventArgs;
};
struct WebUIFileActivatedEventArgs : generate<WebUIFileActivatedEventArgs> {};

// WebUIProtocolActivatedEventArgs
template<typename X> struct statics<WebUIProtocolActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIProtocolActivatedEventArgs;
};
struct WebUIProtocolActivatedEventArgs : generate<WebUIProtocolActivatedEventArgs> {};

// WebUIProtocolForResultsActivatedEventArgs
template<typename X> struct statics<WebUIProtocolForResultsActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIProtocolForResultsActivatedEventArgs;
};
struct WebUIProtocolForResultsActivatedEventArgs : generate<WebUIProtocolForResultsActivatedEventArgs> {};

// WebUIFileOpenPickerActivatedEventArgs
template<typename X> struct statics<WebUIFileOpenPickerActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIFileOpenPickerActivatedEventArgs;
};
struct WebUIFileOpenPickerActivatedEventArgs : generate<WebUIFileOpenPickerActivatedEventArgs> {};

// WebUIFileSavePickerActivatedEventArgs
template<typename X> struct statics<WebUIFileSavePickerActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIFileSavePickerActivatedEventArgs;
};
struct WebUIFileSavePickerActivatedEventArgs : generate<WebUIFileSavePickerActivatedEventArgs> {};

// WebUICachedFileUpdaterActivatedEventArgs
template<typename X> struct statics<WebUICachedFileUpdaterActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUICachedFileUpdaterActivatedEventArgs;
};
struct WebUICachedFileUpdaterActivatedEventArgs : generate<WebUICachedFileUpdaterActivatedEventArgs> {};

// WebUIDeviceActivatedEventArgs
template<typename X> struct statics<WebUIDeviceActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIDeviceActivatedEventArgs;
};
struct WebUIDeviceActivatedEventArgs : generate<WebUIDeviceActivatedEventArgs> {};

// WebUILockScreenActivatedEventArgs
template<typename X> struct statics<WebUILockScreenActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUILockScreenActivatedEventArgs;
};
struct WebUILockScreenActivatedEventArgs : generate<WebUILockScreenActivatedEventArgs> {};

// WebUIRestrictedLaunchActivatedEventArgs
template<typename X> struct statics<WebUIRestrictedLaunchActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIRestrictedLaunchActivatedEventArgs;
};
struct WebUIRestrictedLaunchActivatedEventArgs : generate<WebUIRestrictedLaunchActivatedEventArgs> {};

// WebUIFileOpenPickerContinuationEventArgs
template<typename X> struct statics<WebUIFileOpenPickerContinuationEventArgs, X> : X {
	typedef typename X::root_type WebUIFileOpenPickerContinuationEventArgs;
};
struct WebUIFileOpenPickerContinuationEventArgs : generate<WebUIFileOpenPickerContinuationEventArgs> {};

// WebUIFileSavePickerContinuationEventArgs
template<typename X> struct statics<WebUIFileSavePickerContinuationEventArgs, X> : X {
	typedef typename X::root_type WebUIFileSavePickerContinuationEventArgs;
};
struct WebUIFileSavePickerContinuationEventArgs : generate<WebUIFileSavePickerContinuationEventArgs> {};

// WebUIFolderPickerContinuationEventArgs
template<typename X> struct statics<WebUIFolderPickerContinuationEventArgs, X> : X {
	typedef typename X::root_type WebUIFolderPickerContinuationEventArgs;
};
struct WebUIFolderPickerContinuationEventArgs : generate<WebUIFolderPickerContinuationEventArgs> {};

// WebUIWebAuthenticationBrokerContinuationEventArgs
template<typename X> struct statics<WebUIWebAuthenticationBrokerContinuationEventArgs, X> : X {
	typedef typename X::root_type WebUIWebAuthenticationBrokerContinuationEventArgs;
};
struct WebUIWebAuthenticationBrokerContinuationEventArgs : generate<WebUIWebAuthenticationBrokerContinuationEventArgs> {};

// WebUIWebAccountProviderActivatedEventArgs
template<typename X> struct statics<WebUIWebAccountProviderActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIWebAccountProviderActivatedEventArgs;
};
struct WebUIWebAccountProviderActivatedEventArgs : generate<WebUIWebAccountProviderActivatedEventArgs> {};

// WebUIDialReceiverActivatedEventArgs
template<typename X> struct statics<WebUIDialReceiverActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIDialReceiverActivatedEventArgs;
};
struct WebUIDialReceiverActivatedEventArgs : generate<WebUIDialReceiverActivatedEventArgs> {};

// WebUIToastNotificationActivatedEventArgs
template<typename X> struct statics<WebUIToastNotificationActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIToastNotificationActivatedEventArgs;
};
struct WebUIToastNotificationActivatedEventArgs : generate<WebUIToastNotificationActivatedEventArgs> {};

// WebUILockScreenComponentActivatedEventArgs
template<typename X> struct statics<WebUILockScreenComponentActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUILockScreenComponentActivatedEventArgs;
};
struct WebUILockScreenComponentActivatedEventArgs : generate<WebUILockScreenComponentActivatedEventArgs> {};

// WebUIPrintWorkflowForegroundTaskActivatedEventArgs
template<typename X> struct statics<WebUIPrintWorkflowForegroundTaskActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIPrintWorkflowForegroundTaskActivatedEventArgs;
};
struct WebUIPrintWorkflowForegroundTaskActivatedEventArgs : generate<WebUIPrintWorkflowForegroundTaskActivatedEventArgs> {};

// WebUICommandLineActivatedEventArgs
template<typename X> struct statics<WebUICommandLineActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUICommandLineActivatedEventArgs;
};
struct WebUICommandLineActivatedEventArgs : generate<WebUICommandLineActivatedEventArgs> {};

// WebUIStartupTaskActivatedEventArgs
template<typename X> struct statics<WebUIStartupTaskActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIStartupTaskActivatedEventArgs;
};
struct WebUIStartupTaskActivatedEventArgs : generate<WebUIStartupTaskActivatedEventArgs> {};

// WebUIBarcodeScannerPreviewActivatedEventArgs
template<typename X> struct statics<WebUIBarcodeScannerPreviewActivatedEventArgs, X> : X {
	typedef typename X::root_type WebUIBarcodeScannerPreviewActivatedEventArgs;
};
struct WebUIBarcodeScannerPreviewActivatedEventArgs : generate<WebUIBarcodeScannerPreviewActivatedEventArgs> {};

// ActivatedEventHandler
struct ActivatedEventHandler : IUnknown {
	virtual STDMETHODIMP _Invoke(IInspectable* sender, ApplicationModel::Activation::IActivatedEventArgs* eventArgs) = 0;
};

// ResumingEventHandler
struct ResumingEventHandler : IUnknown {
	virtual STDMETHODIMP _Invoke(IInspectable* sender) = 0;
};

// SuspendingEventHandler
struct SuspendingEventHandler : IUnknown {
	virtual STDMETHODIMP _Invoke(IInspectable* sender, ApplicationModel::ISuspendingEventArgs* e) = 0;
};

// LeavingBackgroundEventHandler
struct LeavingBackgroundEventHandler : IUnknown {
	virtual STDMETHODIMP _Invoke(IInspectable* sender, ApplicationModel::ILeavingBackgroundEventArgs* e) = 0;
};

// EnteredBackgroundEventHandler
struct EnteredBackgroundEventHandler : IUnknown {
	virtual STDMETHODIMP _Invoke(IInspectable* sender, ApplicationModel::IEnteredBackgroundEventArgs* e) = 0;
};

// NavigatedEventHandler
struct NavigatedEventHandler : IUnknown {
	virtual STDMETHODIMP _Invoke(IInspectable* sender, IWebUINavigatedEventArgs* e) = 0;
};

// IWebUINavigatedEventArgs
struct IWebUINavigatedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_NavigatedOperation(WebUINavigatedOperation* *value) = 0;
};
template<typename X> struct IWebUINavigatedEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<WebUINavigatedOperation> get() { WebUINavigatedOperation* value; hrcheck(enc(&IWebUINavigatedEventArgs_adaptor::NavigatedOperation)->_get_NavigatedOperation(&value)); return from_abi(value); }
			ptr<WebUINavigatedOperation> operator()() { return get(); }
			operator ptr<WebUINavigatedOperation> () { return get(); }
			ptr<WebUINavigatedOperation> operator->() { return get(); }
		} NavigatedOperation;
	};
	IWebUINavigatedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IWebUINavigatedEventArgs, X> : Windows::UI::WebUI::IWebUINavigatedEventArgs_adaptor<X> { typedef adapt IWebUINavigatedEventArgs; };
template<typename X> struct IWebUINavigatedEventArgs_unadaptor : X {
	STDMETHODIMP _get_NavigatedOperation(WebUINavigatedOperation* *value) { return hrtry([&, this] { get_prop(value, NavigatedOperation); }); }
};
template<typename X> struct unadapt<IWebUINavigatedEventArgs, X> : Windows::UI::WebUI::IWebUINavigatedEventArgs_unadaptor<X> {};
struct IWebUINavigatedEventArgs : IWebUINavigatedEventArgs_raw, generate<IWebUINavigatedEventArgs> {};

// IWebUINavigatedOperation
struct IWebUINavigatedOperation_raw : IInspectable {
	virtual STDMETHODIMP _GetDeferral(WebUINavigatedDeferral* *deferral);
};
template<typename X> struct IWebUINavigatedOperation_adaptor : X {
	ptr<WebUINavigatedDeferral> GetDeferral() { WebUINavigatedDeferral* deferral; hrcheck(X::get()->_GetDeferral(&deferral)); return from_abi(deferral); }
};
template<typename X> struct adapt<IWebUINavigatedOperation, X> : Windows::UI::WebUI::IWebUINavigatedOperation_adaptor<X> { typedef adapt IWebUINavigatedOperation; };
struct IWebUINavigatedOperation : IWebUINavigatedOperation_raw, generate<IWebUINavigatedOperation> {};

// WebUINavigatedOperation
template<typename X> struct statics<WebUINavigatedOperation, X> : X {
	typedef typename X::root_type WebUINavigatedOperation;
};
struct WebUINavigatedOperation : generate<WebUINavigatedOperation> {};

// SuspendingDeferral
template<typename X> struct statics<SuspendingDeferral, X> : X {
	typedef typename X::root_type SuspendingDeferral;
};
struct SuspendingDeferral : generate<SuspendingDeferral> {};

// SuspendingOperation
template<typename X> struct statics<SuspendingOperation, X> : X {
	typedef typename X::root_type SuspendingOperation;
};
struct SuspendingOperation : generate<SuspendingOperation> {};

// SuspendingEventArgs
template<typename X> struct statics<SuspendingEventArgs, X> : X {
	typedef typename X::root_type SuspendingEventArgs;
};
struct SuspendingEventArgs : generate<SuspendingEventArgs> {};

// LeavingBackgroundEventArgs
template<typename X> struct statics<LeavingBackgroundEventArgs, X> : X {
	typedef typename X::root_type LeavingBackgroundEventArgs;
};
struct LeavingBackgroundEventArgs : generate<LeavingBackgroundEventArgs> {};

// EnteredBackgroundEventArgs
template<typename X> struct statics<EnteredBackgroundEventArgs, X> : X {
	typedef typename X::root_type EnteredBackgroundEventArgs;
};
struct EnteredBackgroundEventArgs : generate<EnteredBackgroundEventArgs> {};

// IWebUIBackgroundTaskInstance
struct IWebUIBackgroundTaskInstance_raw : IInspectable {
	virtual STDMETHODIMP _get_Succeeded(bool *succeeded) = 0;
	virtual STDMETHODIMP _put_Succeeded(bool succeeded) = 0;
};
template<typename X> struct IWebUIBackgroundTaskInstance_adaptor : X {
	union {
		struct : property {
			bool get() { bool succeeded; hrcheck(enc(&IWebUIBackgroundTaskInstance_adaptor::Succeeded)->_get_Succeeded(&succeeded)); return succeeded; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool succeeded) { hrcheck(enc(&IWebUIBackgroundTaskInstance_adaptor::Succeeded)->_put_Succeeded(succeeded)); }
			void operator=(bool succeeded) { put(succeeded); }
			void operator()(bool succeeded) { put(succeeded); }
		} Succeeded;
	};
	IWebUIBackgroundTaskInstance_adaptor() {}
};
template<typename X> struct adapt<IWebUIBackgroundTaskInstance, X> : Windows::UI::WebUI::IWebUIBackgroundTaskInstance_adaptor<X> { typedef adapt IWebUIBackgroundTaskInstance; };
template<typename X> struct IWebUIBackgroundTaskInstance_unadaptor : X {
	STDMETHODIMP _get_Succeeded(bool *succeeded) { return hrtry([&, this] { get_prop(succeeded, Succeeded); }); }
	STDMETHODIMP _put_Succeeded(bool succeeded) { return hrtry([&, this] { put_prop(succeeded, Succeeded); }); }
};
template<typename X> struct unadapt<IWebUIBackgroundTaskInstance, X> : Windows::UI::WebUI::IWebUIBackgroundTaskInstance_unadaptor<X> {};
struct IWebUIBackgroundTaskInstance : IWebUIBackgroundTaskInstance_raw, generate<IWebUIBackgroundTaskInstance> {};

// IWebUIBackgroundTaskInstanceStatics
struct IWebUIBackgroundTaskInstanceStatics : IInspectable {
	virtual STDMETHODIMP _get_Current(IWebUIBackgroundTaskInstance* *backgroundTaskInstance);
};

// WebUIBackgroundTaskInstanceRuntimeClass
template<typename X> struct statics<WebUIBackgroundTaskInstanceRuntimeClass, X> : X {
	typedef typename X::root_type WebUIBackgroundTaskInstanceRuntimeClass;
};
struct WebUIBackgroundTaskInstanceRuntimeClass : generate<WebUIBackgroundTaskInstanceRuntimeClass> {};

// WebUIBackgroundTaskInstance
template<typename> struct WebUIBackgroundTaskInstance_statics {
	static struct _Current : property {
		ptr<IWebUIBackgroundTaskInstance> get() { IWebUIBackgroundTaskInstance* backgroundTaskInstance; hrcheck(get_activation_factory<WebUIBackgroundTaskInstance, IWebUIBackgroundTaskInstanceStatics>()->_get_Current(&backgroundTaskInstance)); return from_abi(backgroundTaskInstance); }
		ptr<IWebUIBackgroundTaskInstance> operator()() { return get(); }
		operator ptr<IWebUIBackgroundTaskInstance> () { return get(); }
		ptr<IWebUIBackgroundTaskInstance> operator->() { return get(); }
	} Current;
};
template<typename X> typename WebUIBackgroundTaskInstance_statics<X>::_Current WebUIBackgroundTaskInstance_statics<X>::Current;

template<typename X> struct statics<WebUIBackgroundTaskInstance, X> : X, Windows::UI::WebUI::WebUIBackgroundTaskInstance_statics<void> {
	typedef typename X::root_type WebUIBackgroundTaskInstance;
};
struct WebUIBackgroundTaskInstance : generate<WebUIBackgroundTaskInstance> {};

// IWebUINavigatedDeferral
struct IWebUINavigatedDeferral_raw : IInspectable {
	virtual STDMETHODIMP _Complete();
};
template<typename X> struct IWebUINavigatedDeferral_adaptor : X {
	void Complete() { hrcheck(X::get()->_Complete()); }
};
template<typename X> struct adapt<IWebUINavigatedDeferral, X> : Windows::UI::WebUI::IWebUINavigatedDeferral_adaptor<X> { typedef adapt IWebUINavigatedDeferral; };
struct IWebUINavigatedDeferral : IWebUINavigatedDeferral_raw, generate<IWebUINavigatedDeferral> {};

// WebUINavigatedDeferral
template<typename X> struct statics<WebUINavigatedDeferral, X> : X {
	typedef typename X::root_type WebUINavigatedDeferral;
};
struct WebUINavigatedDeferral : generate<WebUINavigatedDeferral> {};

// WebUINavigatedEventArgs
template<typename X> struct statics<WebUINavigatedEventArgs, X> : X {
	typedef typename X::root_type WebUINavigatedEventArgs;
};
struct WebUINavigatedEventArgs : generate<WebUINavigatedEventArgs> {};

// IWebUIActivationStatics
struct IWebUIActivationStatics : IInspectable {
	virtual STDMETHODIMP _add_Activated(ActivatedEventHandler* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_Activated(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_Suspending(SuspendingEventHandler* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_Suspending(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_Resuming(ResumingEventHandler* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_Resuming(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_Navigated(NavigatedEventHandler* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_Navigated(Foundation::EventRegistrationToken token);
};

// IWebUIActivationStatics2
struct IWebUIActivationStatics2 : IInspectable {
	virtual STDMETHODIMP _add_LeavingBackground(LeavingBackgroundEventHandler* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_LeavingBackground(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_EnteredBackground(EnteredBackgroundEventHandler* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_EnteredBackground(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _EnablePrelaunch(bool value);
};

// IWebUIActivationStatics3
struct IWebUIActivationStatics3 : IInspectable {
	virtual STDMETHODIMP _RequestRestartAsync(HSTRING launchArguments, Foundation::IAsyncOperation<ApplicationModel::Core::AppRestartFailureReason>* *operation);
	virtual STDMETHODIMP _RequestRestartForUserAsync(System::User* user, HSTRING launchArguments, Foundation::IAsyncOperation<ApplicationModel::Core::AppRestartFailureReason>* *operation);
};

// WebUIApplication
template<typename> struct WebUIApplication_statics {
	static struct _Activated : property {
		Foundation::EventRegistrationToken operator+=(handler_ref<ActivatedEventHandler> handler) { Foundation::EventRegistrationToken token; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_add_Activated(handler, &token)); return token; }
		void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_remove_Activated(token)); }
	} Activated;
	static struct _Navigated : property {
		Foundation::EventRegistrationToken operator+=(handler_ref<NavigatedEventHandler> handler) { Foundation::EventRegistrationToken token; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_add_Navigated(handler, &token)); return token; }
		void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_remove_Navigated(token)); }
	} Navigated;
	static struct _Resuming : property {
		Foundation::EventRegistrationToken operator+=(handler_ref<ResumingEventHandler> handler) { Foundation::EventRegistrationToken token; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_add_Resuming(handler, &token)); return token; }
		void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_remove_Resuming(token)); }
	} Resuming;
	static struct _Suspending : property {
		Foundation::EventRegistrationToken operator+=(handler_ref<SuspendingEventHandler> handler) { Foundation::EventRegistrationToken token; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_add_Suspending(handler, &token)); return token; }
		void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics>()->_remove_Suspending(token)); }
	} Suspending;
	static struct _EnteredBackground : property {
		Foundation::EventRegistrationToken operator+=(handler_ref<EnteredBackgroundEventHandler> handler) { Foundation::EventRegistrationToken token; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics2>()->_add_EnteredBackground(handler, &token)); return token; }
		void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics2>()->_remove_EnteredBackground(token)); }
	} EnteredBackground;
	static struct _LeavingBackground : property {
		Foundation::EventRegistrationToken operator+=(handler_ref<LeavingBackgroundEventHandler> handler) { Foundation::EventRegistrationToken token; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics2>()->_add_LeavingBackground(handler, &token)); return token; }
		void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics2>()->_remove_LeavingBackground(token)); }
	} LeavingBackground;
	static ptr<Foundation::IAsyncOperation<ApplicationModel::Core::AppRestartFailureReason>> RequestRestartAsync(hstring_ref launchArguments) { Foundation::IAsyncOperation<ApplicationModel::Core::AppRestartFailureReason>* operation; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics3>()->_RequestRestartAsync(launchArguments, &operation)); return from_abi(operation); }
	static ptr<Foundation::IAsyncOperation<ApplicationModel::Core::AppRestartFailureReason>> RequestRestartForUserAsync(pptr<System::User> user, hstring_ref launchArguments) { Foundation::IAsyncOperation<ApplicationModel::Core::AppRestartFailureReason>* operation; hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics3>()->_RequestRestartForUserAsync(user, launchArguments, &operation)); return from_abi(operation); }
	static void EnablePrelaunch(bool value) { hrcheck(get_activation_factory<WebUIApplication, IWebUIActivationStatics2>()->_EnablePrelaunch(value)); }
};
template<typename X> typename WebUIApplication_statics<X>::_Activated WebUIApplication_statics<X>::Activated;
template<typename X> typename WebUIApplication_statics<X>::_Navigated WebUIApplication_statics<X>::Navigated;
template<typename X> typename WebUIApplication_statics<X>::_Resuming WebUIApplication_statics<X>::Resuming;
template<typename X> typename WebUIApplication_statics<X>::_Suspending WebUIApplication_statics<X>::Suspending;
template<typename X> typename WebUIApplication_statics<X>::_EnteredBackground WebUIApplication_statics<X>::EnteredBackground;
template<typename X> typename WebUIApplication_statics<X>::_LeavingBackground WebUIApplication_statics<X>::LeavingBackground;

template<typename X> struct statics<WebUIApplication, X> : X, Windows::UI::WebUI::WebUIApplication_statics<void> {
	typedef typename X::root_type WebUIApplication;
};
struct WebUIApplication : generate<WebUIApplication> {};

// IHtmlPrintDocumentSource
struct IHtmlPrintDocumentSource_raw : IInspectable {
	virtual STDMETHODIMP _get_Content(PrintContent *value);
	virtual STDMETHODIMP _put_Content(PrintContent value);
	virtual STDMETHODIMP _get_LeftMargin(float *value);
	virtual STDMETHODIMP _put_LeftMargin(float value);
	virtual STDMETHODIMP _get_TopMargin(float *value);
	virtual STDMETHODIMP _put_TopMargin(float value);
	virtual STDMETHODIMP _get_RightMargin(float *value);
	virtual STDMETHODIMP _put_RightMargin(float value);
	virtual STDMETHODIMP _get_BottomMargin(float *value);
	virtual STDMETHODIMP _put_BottomMargin(float value);
	virtual STDMETHODIMP _get_EnableHeaderFooter(bool *value);
	virtual STDMETHODIMP _put_EnableHeaderFooter(bool value);
	virtual STDMETHODIMP _get_ShrinkToFit(bool *value);
	virtual STDMETHODIMP _put_ShrinkToFit(bool value);
	virtual STDMETHODIMP _get_PercentScale(float *pScalePercent);
	virtual STDMETHODIMP _put_PercentScale(float scalePercent);
	virtual STDMETHODIMP _get_PageRange(HSTRING *pstrPageRange);
	virtual STDMETHODIMP _TrySetPageRange(HSTRING strPageRange, bool *pfSuccess);
};
template<typename X> struct IHtmlPrintDocumentSource_adaptor : X {
	union {
		struct : property {
			float get() { float value; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::BottomMargin)->_get_BottomMargin(&value)); return value; }
			float operator()() { return get(); }
			operator float () { return get(); }
			void put(float value) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::BottomMargin)->_put_BottomMargin(value)); }
			void operator=(float value) { put(value); }
			void operator()(float value) { put(value); }
		} BottomMargin;
		struct : property {
			PrintContent get() { PrintContent value; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::Content)->_get_Content(&value)); return value; }
			PrintContent operator()() { return get(); }
			operator PrintContent () { return get(); }
			void put(PrintContent value) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::Content)->_put_Content(value)); }
			void operator=(PrintContent value) { put(value); }
			void operator()(PrintContent value) { put(value); }
		} Content;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::EnableHeaderFooter)->_get_EnableHeaderFooter(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::EnableHeaderFooter)->_put_EnableHeaderFooter(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} EnableHeaderFooter;
		struct : property {
			float get() { float value; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::LeftMargin)->_get_LeftMargin(&value)); return value; }
			float operator()() { return get(); }
			operator float () { return get(); }
			void put(float value) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::LeftMargin)->_put_LeftMargin(value)); }
			void operator=(float value) { put(value); }
			void operator()(float value) { put(value); }
		} LeftMargin;
		struct : property {
			hstring get() { HSTRING pstrPageRange; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::PageRange)->_get_PageRange(&pstrPageRange)); return from_abi(pstrPageRange); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} PageRange;
		struct : property {
			float get() { float pScalePercent; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::PercentScale)->_get_PercentScale(&pScalePercent)); return pScalePercent; }
			float operator()() { return get(); }
			operator float () { return get(); }
			void put(float scalePercent) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::PercentScale)->_put_PercentScale(scalePercent)); }
			void operator=(float scalePercent) { put(scalePercent); }
			void operator()(float scalePercent) { put(scalePercent); }
		} PercentScale;
		struct : property {
			float get() { float value; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::RightMargin)->_get_RightMargin(&value)); return value; }
			float operator()() { return get(); }
			operator float () { return get(); }
			void put(float value) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::RightMargin)->_put_RightMargin(value)); }
			void operator=(float value) { put(value); }
			void operator()(float value) { put(value); }
		} RightMargin;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::ShrinkToFit)->_get_ShrinkToFit(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::ShrinkToFit)->_put_ShrinkToFit(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} ShrinkToFit;
		struct : property {
			float get() { float value; hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::TopMargin)->_get_TopMargin(&value)); return value; }
			float operator()() { return get(); }
			operator float () { return get(); }
			void put(float value) { hrcheck(enc(&IHtmlPrintDocumentSource_adaptor::TopMargin)->_put_TopMargin(value)); }
			void operator=(float value) { put(value); }
			void operator()(float value) { put(value); }
		} TopMargin;
	};
	bool TrySetPageRange(hstring_ref strPageRange) { bool pfSuccess; hrcheck(X::get()->_TrySetPageRange(strPageRange, &pfSuccess)); return pfSuccess; }
	IHtmlPrintDocumentSource_adaptor() {}
};
template<typename X> struct adapt<IHtmlPrintDocumentSource, X> : Windows::UI::WebUI::IHtmlPrintDocumentSource_adaptor<X> { typedef adapt IHtmlPrintDocumentSource; };
struct IHtmlPrintDocumentSource : IHtmlPrintDocumentSource_raw, generate<IHtmlPrintDocumentSource> {};

// HtmlPrintDocumentSource
template<typename X> struct statics<HtmlPrintDocumentSource, X> : X {
	typedef typename X::root_type HtmlPrintDocumentSource;
};
struct HtmlPrintDocumentSource : generate<HtmlPrintDocumentSource> {};
}}}
} // namespace iso_winrt
