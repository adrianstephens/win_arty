#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace UI { namespace Input { namespace Spatial {
enum class SpatialGestureSettings : unsigned {
	None = 0x0,
	Tap = 0x1,
	DoubleTap = 0x2,
	Hold = 0x4,
	ManipulationTranslate = 0x8,
	NavigationX = 0x10,
	NavigationY = 0x20,
	NavigationZ = 0x40,
	NavigationRailsX = 0x80,
	NavigationRailsY = 0x100,
	NavigationRailsZ = 0x200,
};
enum class SpatialInteractionSourceKind : int {
	Other = 0,
	Hand = 1,
	Voice = 2,
	Controller = 3,
};
struct ISpatialRecognitionStartedEventArgs;
struct ISpatialRecognitionEndedEventArgs;
struct ISpatialTappedEventArgs;
struct ISpatialHoldStartedEventArgs;
struct ISpatialHoldCompletedEventArgs;
struct ISpatialHoldCanceledEventArgs;
struct ISpatialManipulationDelta;
struct ISpatialManipulationStartedEventArgs;
struct ISpatialManipulationUpdatedEventArgs;
struct SpatialManipulationDelta;
struct ISpatialManipulationCompletedEventArgs;
struct ISpatialManipulationCanceledEventArgs;
struct ISpatialNavigationStartedEventArgs;
struct ISpatialNavigationUpdatedEventArgs;
struct ISpatialNavigationCompletedEventArgs;
struct ISpatialNavigationCanceledEventArgs;
struct ISpatialGestureRecognizer;
struct ISpatialGestureRecognizerFactory;
struct SpatialGestureRecognizer;
struct SpatialRecognitionStartedEventArgs;
struct SpatialRecognitionEndedEventArgs;
struct SpatialTappedEventArgs;
struct SpatialHoldStartedEventArgs;
struct SpatialHoldCompletedEventArgs;
struct SpatialHoldCanceledEventArgs;
struct SpatialManipulationStartedEventArgs;
struct SpatialManipulationUpdatedEventArgs;
struct SpatialManipulationCompletedEventArgs;
struct SpatialManipulationCanceledEventArgs;
struct SpatialNavigationStartedEventArgs;
struct SpatialNavigationUpdatedEventArgs;
struct SpatialNavigationCompletedEventArgs;
struct SpatialNavigationCanceledEventArgs;
enum class SpatialInteractionPressKind : int {
	None = 0,
	Select = 1,
	Menu = 2,
	Grasp = 3,
	Touchpad = 4,
	Thumbstick = 5,
};
enum class SpatialInteractionSourceHandedness : int {
	Unspecified = 0,
	Left = 1,
	Right = 2,
};
enum class SpatialInteractionSourcePositionAccuracy : int {
	High = 0,
	Approximate = 1,
};
struct ISpatialInteractionSourceLocation;
struct ISpatialInteractionSourceLocation2;
struct ISpatialInteractionSourceLocation3;
struct ISpatialPointerInteractionSourcePose;
struct ISpatialPointerInteractionSourcePose2;
struct SpatialPointerInteractionSourcePose;
struct ISpatialInteractionSource;
struct ISpatialInteractionSource2;
struct ISpatialInteractionController;
struct ISpatialInteractionController2;
struct ISpatialInteractionController3;
struct SpatialInteractionController;
struct ISpatialInteractionSourceState;
struct ISpatialInteractionSourceState2;
struct SpatialInteractionSourceState;
struct ISpatialInteractionSource3;
struct ISpatialInteractionSourceProperties;
struct SpatialInteractionSourceLocation;
struct ISpatialPointerPose;
struct ISpatialPointerPose2;
struct SpatialInteractionSource;
struct ISpatialPointerPoseStatics;
struct SpatialPointerPose;
struct SpatialInteractionSourceProperties;
struct ISpatialInteractionControllerProperties;
struct SpatialInteractionControllerProperties;
struct ISpatialInteraction;
struct ISpatialInteractionDetectedEventArgs;
struct SpatialInteraction;
struct ISpatialInteractionDetectedEventArgs2;
struct ISpatialInteractionSourceEventArgs;
struct ISpatialInteractionSourceEventArgs2;
struct ISpatialInteractionManager;
struct ISpatialInteractionManagerStatics;
struct SpatialInteractionManager;
struct SpatialInteractionSourceEventArgs;
struct SpatialInteractionDetectedEventArgs;
}}}}
} // namespace iso_winrt
