#pragma once
// generated by isopod tools
// namespaces:
// Windows.Data.Html

#include "Windows.Data.Html.0.h"

namespace iso_winrt {

// forward types


// defs

template<> struct def<Windows::Data::Html::IHtmlUtilities> : interface_type<> {};
template<> struct def<Windows::Data::Html::HtmlUtilities> : class_type<Platform::Object, Platform::Object> {};

// uuids

template<> struct uuid<Windows::Data::Html::IHtmlUtilities> { define_guid(0xFEC00ADD, 0x2399, 0x4FAC, 0xB5, 0xA7, 0x5, 0xE9, 0xAC, 0xD7, 0x18, 0x1D);};

// types

namespace Windows { namespace Data { namespace Html {

// IHtmlUtilities
struct IHtmlUtilities : IInspectable {
	virtual STDMETHODIMP _ConvertToText(HSTRING html, HSTRING *text);
};

// HtmlUtilities
template<typename> struct HtmlUtilities_statics {
	static hstring ConvertToText(hstring_ref html) { HSTRING text; hrcheck(get_activation_factory<HtmlUtilities, IHtmlUtilities>()->_ConvertToText(html, &text)); return from_abi(text); }
};

template<typename X> struct statics<HtmlUtilities, X> : X, Windows::Data::Html::HtmlUtilities_statics<void> {
	typedef typename X::root_type HtmlUtilities;
};
struct HtmlUtilities : generate<HtmlUtilities> {};
}}}
} // namespace iso_winrt
