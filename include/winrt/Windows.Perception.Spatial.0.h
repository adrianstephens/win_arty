#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Perception { namespace Spatial {
struct ISpatialCoordinateSystem;
struct SpatialCoordinateSystem;
enum class SpatialPerceptionAccessStatus : int {
	Unspecified = 0,
	Allowed = 1,
	DeniedByUser = 2,
	DeniedBySystem = 3,
};
enum class SpatialLocatability : int {
	Unavailable = 0,
	OrientationOnly = 1,
	PositionalTrackingActivating = 2,
	PositionalTrackingActive = 3,
	PositionalTrackingInhibited = 4,
};
struct ISpatialAnchorRawCoordinateSystemAdjustedEventArgs;
struct ISpatialAnchor;
struct ISpatialAnchorStatics;
struct ISpatialAnchor2;
struct SpatialAnchor;
struct SpatialAnchorRawCoordinateSystemAdjustedEventArgs;
struct ISpatialAnchorStore;
struct ISpatialAnchorManagerStatics;
struct SpatialAnchorStore;
struct ISpatialAnchorTransferManagerStatics;
struct ISpatialLocatorPositionalTrackingDeactivatingEventArgs;
struct ISpatialLocatorAttachedFrameOfReference;
struct ISpatialStationaryFrameOfReference;
struct ISpatialLocation;
struct ISpatialLocator;
struct ISpatialLocatorStatics;
struct SpatialLocator;
struct SpatialLocatorPositionalTrackingDeactivatingEventArgs;
struct SpatialLocation;
struct SpatialLocatorAttachedFrameOfReference;
struct SpatialStationaryFrameOfReference;
struct SpatialAnchorManager;
struct SpatialAnchorTransferManager;
struct SpatialBoundingFrustum {
	Foundation::Numerics::Plane Near;
	Foundation::Numerics::Plane Far;
	Foundation::Numerics::Plane Right;
	Foundation::Numerics::Plane Left;
	Foundation::Numerics::Plane Top;
	Foundation::Numerics::Plane Bottom;
};
struct SpatialBoundingBox {
	Foundation::Numerics::Vector3 Center;
	Foundation::Numerics::Vector3 Extents;
};
struct SpatialBoundingOrientedBox {
	Foundation::Numerics::Vector3 Center;
	Foundation::Numerics::Vector3 Extents;
	Foundation::Numerics::Quaternion Orientation;
};
struct SpatialBoundingSphere {
	Foundation::Numerics::Vector3 Center;
	float Radius;
};
struct ISpatialBoundingVolume;
struct ISpatialBoundingVolumeStatics;
struct SpatialBoundingVolume;
enum class SpatialMovementRange : int {
	NoMovement = 0,
	Bounded = 1,
};
enum class SpatialLookDirectionRange : int {
	ForwardOnly = 0,
	Omnidirectional = 1,
};
struct ISpatialStageFrameOfReference;
struct ISpatialStageFrameOfReferenceStatics;
struct SpatialStageFrameOfReference;
struct ISpatialEntity;
struct ISpatialEntityFactory;
struct SpatialEntity;
enum class SpatialEntityWatcherStatus : int {
	Created = 0,
	Started = 1,
	EnumerationCompleted = 2,
	Stopping = 3,
	Stopped = 4,
	Aborted = 5,
};
struct ISpatialEntityAddedEventArgs;
struct SpatialEntityAddedEventArgs;
struct ISpatialEntityUpdatedEventArgs;
struct SpatialEntityUpdatedEventArgs;
struct ISpatialEntityRemovedEventArgs;
struct SpatialEntityRemovedEventArgs;
struct ISpatialEntityWatcher;
struct SpatialEntityWatcher;
struct ISpatialEntityStore;
struct ISpatialEntityStoreStatics;
struct SpatialEntityStore;
}}}
} // namespace iso_winrt
