#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Foundation { namespace Collections {
enum class CollectionChange : int {
	Reset = 0,
	ItemInserted = 1,
	ItemRemoved = 2,
	ItemChanged = 3,
};
struct IVectorChangedEventArgs;
template<typename K, typename V> struct IKeyValuePair;
template<typename T> struct IIterable;
template<typename K, typename V> struct IMap;
template<typename K, typename V> struct IObservableMap;
struct IPropertySet;
struct PropertySet;
struct ValueSet;
struct StringMap;
template<typename T> struct IIterator;
template<typename T> struct IVectorView;
template<typename T> struct IVector;
template<typename K, typename V> struct IMapView;
template<typename T> struct VectorChangedEventHandler;
template<typename T> struct IObservableVector;
template<typename K> struct IMapChangedEventArgs;
template<typename K, typename V> struct MapChangedEventHandler;
}}}
} // namespace iso_winrt
