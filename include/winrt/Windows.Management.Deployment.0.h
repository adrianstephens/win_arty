#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Management { namespace Deployment {
enum class DeploymentProgressState : int {
	Queued = 0,
	Processing = 1,
};
struct DeploymentProgress {
	DeploymentProgressState state;
	unsigned percentage;
};
enum class DeploymentOptions : unsigned {
	None = 0x0,
	ForceApplicationShutdown = 0x1,
	DevelopmentMode = 0x2,
	InstallAllResources = 0x20,
	ForceTargetApplicationShutdown = 0x40,
	RequiredContentGroupOnly = 0x100,
};
enum class RemovalOptions : unsigned {
	None = 0x0,
	PreserveApplicationData = 0x1000,
};
enum class AddPackageByAppInstallerOptions : unsigned {
	None = 0x0,
	InstallAllResources = 0x20,
	ForceTargetAppShutdown = 0x40,
	RequiredContentGroupOnly = 0x100,
};
enum class PackageTypes : unsigned {
	None = 0x0,
	Main = 0x1,
	Framework = 0x2,
	Resource = 0x4,
	Bundle = 0x8,
	Xap = 0x10,
	Optional = 0x20,
};
struct IDeploymentResult;
struct IDeploymentResult2;
struct DeploymentResult;
enum class PackageInstallState : int {
	NotInstalled = 0,
	Staged = 1,
	Installed = 2,
	Paused = 6,
};
struct IPackageUserInformation;
struct PackageUserInformation;
enum class PackageState : int {
	Normal = 0,
	LicenseInvalid = 1,
	Modified = 2,
	Tampered = 3,
};
enum class PackageStatus : unsigned {
	OK = 0x0,
	LicenseIssue = 0x1,
	Modified = 0x2,
	Tampered = 0x4,
	Disabled = 0x8,
};
struct IPackageManager;
struct IPackageManager2;
struct IPackageManager3;
struct IPackageVolume2;
struct IPackageVolume;
struct PackageVolume;
struct IPackageManager4;
struct IPackageManager5;
struct IPackageManagerDebugSettings;
struct PackageManagerDebugSettings;
struct IPackageManager6;
struct IPackageManager7;
struct PackageManager;
}}}
} // namespace iso_winrt
