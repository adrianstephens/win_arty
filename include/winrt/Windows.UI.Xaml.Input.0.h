#pragma once
// generated by isopod tools

#include "pre_include.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace UI { namespace Xaml { namespace Input {
enum class FocusInputDeviceKind : int {
	None = 0,
	Mouse = 1,
	Touch = 2,
	Pen = 3,
	Keyboard = 4,
	GameController = 5,
};
enum class FocusNavigationDirection : int {
	Next = 0,
	Previous = 1,
	Up = 2,
	Down = 3,
	Left = 4,
	Right = 5,
	None = 6,
};
enum class InputScopeNameValue : int {
	Default = 0,
	Url = 1,
	EmailSmtpAddress = 5,
	PersonalFullName = 7,
	CurrencyAmountAndSymbol = 20,
	CurrencyAmount = 21,
	DateMonthNumber = 23,
	DateDayNumber = 24,
	DateYear = 25,
	Digits = 28,
	Number = 29,
	Password = 31,
	TelephoneNumber = 32,
	TelephoneCountryCode = 33,
	TelephoneAreaCode = 34,
	TelephoneLocalNumber = 35,
	TimeHour = 37,
	TimeMinutesOrSeconds = 38,
	NumberFullWidth = 39,
	AlphanumericHalfWidth = 40,
	AlphanumericFullWidth = 41,
	Hiragana = 44,
	KatakanaHalfWidth = 45,
	KatakanaFullWidth = 46,
	Hanja = 47,
	HangulHalfWidth = 48,
	HangulFullWidth = 49,
	Search = 50,
	Formula = 51,
	SearchIncremental = 52,
	ChineseHalfWidth = 53,
	ChineseFullWidth = 54,
	NativeScript = 55,
	Text = 57,
	Chat = 58,
	NameOrPhoneNumber = 59,
	EmailNameOrAddress = 60,
	Maps = 62,
	NumericPassword = 63,
	NumericPin = 64,
	AlphanumericPin = 65,
	FormulaNumber = 67,
	ChatWithoutEmoji = 68,
};
enum class KeyboardAcceleratorPlacementMode : int {
	Auto = 0,
	Hidden = 1,
};
enum class KeyboardNavigationMode : int {
	Local = 0,
	Cycle = 1,
	Once = 2,
};
enum class KeyTipPlacementMode : int {
	Auto = 0,
	Bottom = 1,
	Top = 2,
	Left = 3,
	Right = 4,
	Center = 5,
	Hidden = 6,
};
enum class ManipulationModes : unsigned {
	None = 0x0,
	TranslateX = 0x1,
	TranslateY = 0x2,
	TranslateRailsX = 0x4,
	TranslateRailsY = 0x8,
	Rotate = 0x10,
	Scale = 0x20,
	TranslateInertia = 0x40,
	RotateInertia = 0x80,
	ScaleInertia = 0x100,
	All = 0xFFFF,
	System = 0x10000,
};
enum class XYFocusKeyboardNavigationMode : int {
	Auto = 0,
	Enabled = 1,
	Disabled = 2,
};
enum class XYFocusNavigationStrategy : int {
	Auto = 0,
	Projection = 1,
	NavigationDirectionDistance = 2,
	RectilinearDistance = 3,
};
enum class XYFocusNavigationStrategyOverride : int {
	None = 0,
	Auto = 1,
	Projection = 2,
	NavigationDirectionDistance = 3,
	RectilinearDistance = 4,
};
struct DoubleTappedEventHandler;
struct HoldingEventHandler;
struct KeyEventHandler;
struct ManipulationCompletedEventHandler;
struct ManipulationDeltaEventHandler;
struct ManipulationInertiaStartingEventHandler;
struct ManipulationStartedEventHandler;
struct ManipulationStartingEventHandler;
struct PointerEventHandler;
struct RightTappedEventHandler;
struct TappedEventHandler;
struct IPointer;
struct Pointer;
struct IAccessKeyDisplayRequestedEventArgs;
struct AccessKeyDisplayRequestedEventArgs;
struct IAccessKeyDisplayDismissedEventArgs;
struct AccessKeyDisplayDismissedEventArgs;
struct IAccessKeyInvokedEventArgs;
struct AccessKeyInvokedEventArgs;
struct IProcessKeyboardAcceleratorEventArgs;
struct ProcessKeyboardAcceleratorEventArgs;
struct IKeyboardAcceleratorInvokedEventArgs2;
struct IKeyboardAcceleratorInvokedEventArgs;
struct KeyboardAcceleratorInvokedEventArgs;
struct ICommand;
struct IAccessKeyManager;
struct IAccessKeyManagerStatics;
struct IAccessKeyManagerStatics2;
struct AccessKeyManager;
struct IInertiaExpansionBehavior;
struct InertiaExpansionBehavior;
struct IInertiaRotationBehavior;
struct InertiaRotationBehavior;
struct IInertiaTranslationBehavior;
struct InertiaTranslationBehavior;
struct IManipulationPivot;
struct IManipulationPivotFactory;
struct ManipulationPivot;
struct ICharacterReceivedRoutedEventArgs;
struct CharacterReceivedRoutedEventArgs;
struct IContextRequestedEventArgs;
struct ContextRequestedEventArgs;
struct IDoubleTappedRoutedEventArgs;
struct DoubleTappedRoutedEventArgs;
struct IGettingFocusEventArgs;
struct IGettingFocusEventArgs2;
struct GettingFocusEventArgs;
struct IHoldingRoutedEventArgs;
struct HoldingRoutedEventArgs;
struct IInputScope;
struct InputScope;
struct IInputScopeName;
struct IInputScopeNameFactory;
struct InputScopeName;
struct IKeyboardAccelerator;
struct IKeyboardAcceleratorFactory;
struct IKeyboardAcceleratorStatics;
struct KeyboardAccelerator;
struct IKeyRoutedEventArgs;
struct IKeyRoutedEventArgs2;
struct IKeyRoutedEventArgs3;
struct KeyRoutedEventArgs;
struct ILosingFocusEventArgs;
struct ILosingFocusEventArgs2;
struct LosingFocusEventArgs;
struct IManipulationCompletedRoutedEventArgs;
struct ManipulationCompletedRoutedEventArgs;
struct IManipulationDeltaRoutedEventArgs;
struct ManipulationDeltaRoutedEventArgs;
struct IManipulationInertiaStartingRoutedEventArgs;
struct ManipulationInertiaStartingRoutedEventArgs;
struct IManipulationStartedRoutedEventArgs;
struct IManipulationStartedRoutedEventArgsFactory;
struct ManipulationStartedRoutedEventArgs;
struct IManipulationStartingRoutedEventArgs;
struct ManipulationStartingRoutedEventArgs;
struct INoFocusCandidateFoundEventArgs;
struct NoFocusCandidateFoundEventArgs;
struct IPointerRoutedEventArgs;
struct IPointerRoutedEventArgs2;
struct PointerRoutedEventArgs;
struct IRightTappedRoutedEventArgs;
struct RightTappedRoutedEventArgs;
struct ITappedRoutedEventArgs;
struct TappedRoutedEventArgs;
struct IFindNextElementOptions;
struct FindNextElementOptions;
struct IFocusManager;
struct IFocusManagerStatics;
struct IFocusManagerStatics2;
struct IFocusManagerStatics3;
struct IFocusManagerStatics4;
struct IFocusManagerStatics5;
struct IFocusMovementResult;
struct FocusMovementResult;
struct FocusManager;
}}}}
} // namespace iso_winrt
