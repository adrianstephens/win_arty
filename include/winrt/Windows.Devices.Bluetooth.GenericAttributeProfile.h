#pragma once
// generated by isopod tools
// namespaces:
// Windows.Devices.Bluetooth.GenericAttributeProfile

#include "Windows.Devices.Bluetooth.GenericAttributeProfile.0.h"
#include "Windows.Devices.Bluetooth.0.h"
#include "Windows.Devices.Enumeration.0.h"
#include "Windows.Foundation.h"

namespace iso_winrt {

// forward types

namespace Windows { namespace Foundation { namespace Collections {
template<typename T> struct IVector;
template<typename T> struct IVectorView;
}}
namespace Storage { namespace Streams {
struct IBuffer;
}}}

// defs

template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattSharingMode> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServiceStatics2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServiceStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattOpenStatus> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService3> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService> : interface_type<Windows::Foundation::IClosable> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService2> : interface_type<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattDeviceService> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService3, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService2> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattCommunicationStatus> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServicesResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattDeviceServicesResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServicesResult> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattSessionStatus> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattCharacteristicProperties> : enum_type<unsigned> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattClientCharacteristicConfigurationDescriptorValue> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattProtectionLevel> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattWriteOption> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattRequestState> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceProviderAdvertisementStatus> : enum_type<int> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattProtocolErrorStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattProtocolError> : class_type<Platform::Object, Platform::Object> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSessionStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSession> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattSession> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSession, Windows::Foundation::IClosable> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSessionStatusChangedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattSessionStatusChangedEventArgs> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSessionStatusChangedEventArgs> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic3> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic2> : interface_type<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattCharacteristic> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic2, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic3> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicsResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattCharacteristicsResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicsResult> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattDescriptor> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor2> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormatStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormatStatics2> : interface_type<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormatStatics> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormat> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattPresentationFormat> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormat> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattReadResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult2> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattReadClientCharacteristicConfigurationDescriptorResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult2> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattValueChangedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattValueChangedEventArgs> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattValueChangedEventArgs> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorsResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattDescriptorsResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorsResult> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattWriteResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteResult> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormatTypesStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattPresentationFormatTypes> : class_type<Platform::Object, Platform::Object> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceUuidsStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceUuidsStatics2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceUuids> : class_type<Platform::Object, Platform::Object> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicUuidsStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicUuidsStatics2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattCharacteristicUuids> : class_type<Platform::Object, Platform::Object> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorUuidsStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattDescriptorUuids> : class_type<Platform::Object, Platform::Object> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattReliableWriteTransaction> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction2> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisingParameters> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceProviderAdvertisingParameters> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisingParameters> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicParameters> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattLocalCharacteristicParameters> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicParameters> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorParameters> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattLocalDescriptorParameters> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorParameters> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderStatics> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceProviderResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderResult> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProvider> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalService> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattLocalService> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalService> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceProvider> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProvider> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisementStatusChangedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceProviderAdvertisementStatusChangedEventArgs> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisementStatusChangedEventArgs> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattLocalCharacteristicResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicResult> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristic> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattLocalCharacteristic> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristic> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattLocalDescriptorResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorResult> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptor> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattLocalDescriptor> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptor> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSubscribedClient> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattSubscribedClient> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSubscribedClient> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequestedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattReadRequestedEventArgs> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequestedEventArgs> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequestedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattWriteRequestedEventArgs> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequestedEventArgs> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult2> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattClientNotificationResult> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult2> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequest> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattReadRequest> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequest> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattRequestStateChangedEventArgs> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattRequestStateChangedEventArgs> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattRequestStateChangedEventArgs> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequest> : interface_type<> {};
template<> struct def<Windows::Devices::Bluetooth::GenericAttributeProfile::GattWriteRequest> : class_type<Platform::Object, Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequest> {};

// uuids

template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServiceStatics2> { define_guid(0x604186E, 0x24A6, 0x4B0D, 0xA2, 0xF2, 0x30, 0xCC, 0x1, 0x54, 0x5D, 0x25);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServiceStatics> { define_guid(0x196D0022, 0xFAAD, 0x45DC, 0xAE, 0x5B, 0x2A, 0xC3, 0x18, 0x4E, 0x84, 0xDB);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService3> { define_guid(0xB293A950, 0xC53, 0x437C, 0xA9, 0xB3, 0x5C, 0x32, 0x10, 0xC6, 0xE5, 0x69);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService> { define_guid(0xAC7B7C05, 0xB33C, 0x47CF, 0x99, 0xF, 0x6B, 0x8F, 0x55, 0x77, 0xDF, 0x71);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService2> { define_guid(0xFC54520B, 0xB0D, 0x4708, 0xBA, 0xE0, 0x9F, 0xFD, 0x94, 0x89, 0xBC, 0x59);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServicesResult> { define_guid(0x171DD3EE, 0x16D, 0x419D, 0x83, 0x8A, 0x57, 0x6C, 0xF4, 0x75, 0xA3, 0xD8);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattProtocolErrorStatics> { define_guid(0xCA46C5C5, 0xECC, 0x4809, 0xBE, 0xA3, 0xCF, 0x79, 0xBC, 0x99, 0x1E, 0x37);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSessionStatics> { define_guid(0x2E65B95C, 0x539F, 0x4DB7, 0x82, 0xA8, 0x73, 0xBD, 0xBB, 0xF7, 0x3E, 0xBF);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSession> { define_guid(0xD23B5143, 0xE04E, 0x4C24, 0x99, 0x9C, 0x9C, 0x25, 0x6F, 0x98, 0x56, 0xB1);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSessionStatusChangedEventArgs> { define_guid(0x7605B72E, 0x837F, 0x404C, 0xAB, 0x34, 0x31, 0x63, 0xF3, 0x9D, 0xDF, 0x32);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicStatics> { define_guid(0x59CB50C3, 0x5934, 0x4F68, 0xA1, 0x98, 0xEB, 0x86, 0x4F, 0xA4, 0x4E, 0x6B);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic3> { define_guid(0x3F3C663E, 0x93D4, 0x406B, 0xB8, 0x17, 0xDB, 0x81, 0xF8, 0xED, 0x53, 0xB3);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic> { define_guid(0x59CB50C1, 0x5934, 0x4F68, 0xA1, 0x98, 0xEB, 0x86, 0x4F, 0xA4, 0x4E, 0x6B);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic2> { define_guid(0xAE1AB578, 0xEC06, 0x4764, 0xB7, 0x80, 0x98, 0x35, 0xA1, 0xD3, 0x5D, 0x6E);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicsResult> { define_guid(0x1194945C, 0xB257, 0x4F3E, 0x9D, 0xB7, 0xF6, 0x8B, 0xC9, 0xA9, 0xAE, 0xF2);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorStatics> { define_guid(0x92055F2D, 0x8084, 0x4344, 0xB4, 0xC2, 0x28, 0x4D, 0xE1, 0x9A, 0x85, 0x6);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor2> { define_guid(0x8F563D39, 0xD630, 0x406C, 0xBA, 0x11, 0x10, 0xCD, 0xD1, 0x6B, 0xE, 0x5E);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor> { define_guid(0x92055F2B, 0x8084, 0x4344, 0xB4, 0xC2, 0x28, 0x4D, 0xE1, 0x9A, 0x85, 0x6);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormatStatics> { define_guid(0x196D0020, 0xFAAD, 0x45DC, 0xAE, 0x5B, 0x2A, 0xC3, 0x18, 0x4E, 0x84, 0xDB);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormatStatics2> { define_guid(0xA9C21713, 0xB82F, 0x435E, 0xB6, 0x34, 0x21, 0xFD, 0x85, 0xA4, 0x3C, 0x7);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormat> { define_guid(0x196D0021, 0xFAAD, 0x45DC, 0xAE, 0x5B, 0x2A, 0xC3, 0x18, 0x4E, 0x84, 0xDB);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult2> { define_guid(0xA10F50A0, 0xFB43, 0x48AF, 0xBA, 0xAA, 0x63, 0x8A, 0x5C, 0x63, 0x29, 0xFE);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult> { define_guid(0x63A66F08, 0x1AEA, 0x4C4C, 0xA5, 0xF, 0x97, 0xBA, 0xE4, 0x74, 0xB3, 0x48);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult2> { define_guid(0x1BF1A59D, 0xBA4D, 0x4622, 0x86, 0x51, 0xF4, 0xEE, 0x15, 0xD, 0xA, 0x5D);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult> { define_guid(0x63A66F09, 0x1AEA, 0x4C4C, 0xA5, 0xF, 0x97, 0xBA, 0xE4, 0x74, 0xB3, 0x48);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattValueChangedEventArgs> { define_guid(0xD21BDB54, 0x6E3, 0x4ED8, 0xA2, 0x63, 0xAC, 0xFA, 0xC8, 0xBA, 0x73, 0x13);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorsResult> { define_guid(0x9BC091F3, 0x95E7, 0x4489, 0x8D, 0x25, 0xFF, 0x81, 0x95, 0x5A, 0x57, 0xB9);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteResult> { define_guid(0x4991DDB1, 0xCB2B, 0x44F7, 0x99, 0xFC, 0xD2, 0x9A, 0x28, 0x71, 0xDC, 0x9B);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormatTypesStatics> { define_guid(0xFAF1BA0A, 0x30BA, 0x409C, 0xBE, 0xF7, 0xCF, 0xFB, 0x6D, 0x3, 0xB8, 0xFB);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceUuidsStatics> { define_guid(0x6DC57058, 0x9ABA, 0x4417, 0xB8, 0xF2, 0xDC, 0xE0, 0x16, 0xD3, 0x4E, 0xE2);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceUuidsStatics2> { define_guid(0xD2AE94F5, 0x3D15, 0x4F79, 0x9C, 0xC, 0xEA, 0xAF, 0xA6, 0x75, 0x15, 0x5C);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicUuidsStatics> { define_guid(0x58FA4586, 0xB1DE, 0x470C, 0xB7, 0xDE, 0xD, 0x11, 0xFF, 0x44, 0xF4, 0xB7);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicUuidsStatics2> { define_guid(0x1855B425, 0xD46E, 0x4A2C, 0x9C, 0x3F, 0xED, 0x6D, 0xEA, 0x29, 0xE7, 0xBE);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorUuidsStatics> { define_guid(0xA6F862CE, 0x9CFC, 0x42F1, 0x91, 0x85, 0xFF, 0x37, 0xB7, 0x51, 0x81, 0xD3);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction> { define_guid(0x63A66F07, 0x1AEA, 0x4C4C, 0xA5, 0xF, 0x97, 0xBA, 0xE4, 0x74, 0xB3, 0x48);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction2> { define_guid(0x51113987, 0xEF12, 0x462F, 0x9F, 0xB2, 0xA1, 0xA4, 0x3A, 0x67, 0x94, 0x16);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisingParameters> { define_guid(0xE2CE31AB, 0x6315, 0x4C22, 0x9B, 0xD7, 0x78, 0x1D, 0xBC, 0x3D, 0x8D, 0x82);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicParameters> { define_guid(0xFAF73DB4, 0x4CFF, 0x44C7, 0x84, 0x45, 0x4, 0xE, 0x6E, 0xAD, 0x0, 0x63);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorParameters> { define_guid(0x5FDEDE6A, 0xF3C1, 0x4B66, 0x8C, 0x4B, 0xE3, 0xD2, 0x29, 0x3B, 0x40, 0xE9);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderStatics> { define_guid(0x31794063, 0x5256, 0x4054, 0xA4, 0xF4, 0x7B, 0xBE, 0x77, 0x55, 0xA5, 0x7E);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderResult> { define_guid(0x764696D8, 0xC53E, 0x428C, 0x8A, 0x48, 0x67, 0xAF, 0xE0, 0x2C, 0x3A, 0xE6);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProvider> { define_guid(0x7822B3CD, 0x2889, 0x4F86, 0xA0, 0x51, 0x3F, 0xA, 0xED, 0x1C, 0x27, 0x60);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalService> { define_guid(0xF513E258, 0xF7F7, 0x4902, 0xB8, 0x3, 0x57, 0xFC, 0xC7, 0xD6, 0xFE, 0x83);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisementStatusChangedEventArgs> { define_guid(0x59A5AA65, 0xFA21, 0x4FFC, 0xB1, 0x55, 0x4, 0xD9, 0x28, 0x1, 0x26, 0x86);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicResult> { define_guid(0x7975DE9B, 0x170, 0x4397, 0x96, 0x66, 0x92, 0xF8, 0x63, 0xF1, 0x2E, 0xE6);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristic> { define_guid(0xAEDE376D, 0x5412, 0x4D74, 0x92, 0xA8, 0x8D, 0xEB, 0x85, 0x26, 0x82, 0x9C);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorResult> { define_guid(0x375791BE, 0x321F, 0x4366, 0xBF, 0xC1, 0x3B, 0xC6, 0xB8, 0x2C, 0x79, 0xF8);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptor> { define_guid(0xF48EBE06, 0x789D, 0x4A4B, 0x86, 0x52, 0xBD, 0x1, 0x7B, 0x5D, 0x2F, 0xC6);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSubscribedClient> { define_guid(0x736E9001, 0x15A4, 0x4EC2, 0x92, 0x48, 0xE3, 0xF2, 0xD, 0x46, 0x3B, 0xE9);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequestedEventArgs> { define_guid(0x93497243, 0xF39C, 0x484B, 0x8A, 0xB6, 0x99, 0x6B, 0xA4, 0x86, 0xCF, 0xA3);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequestedEventArgs> { define_guid(0x2DEC8BBE, 0xA73A, 0x471A, 0x94, 0xD5, 0x3, 0x7D, 0xEA, 0xDD, 0x8, 0x6);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult2> { define_guid(0x8FAEC497, 0x45E0, 0x497E, 0x95, 0x82, 0x29, 0xA1, 0xFE, 0x28, 0x1A, 0xD5);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult> { define_guid(0x506D5599, 0x112, 0x419A, 0x8E, 0x3B, 0xAE, 0x21, 0xAF, 0xAB, 0xD2, 0xC2);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequest> { define_guid(0xF1DD6535, 0x6ACD, 0x42A6, 0xA4, 0xBB, 0xD7, 0x89, 0xDA, 0xE0, 0x4, 0x3E);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattRequestStateChangedEventArgs> { define_guid(0xE834D92C, 0x27BE, 0x44B3, 0x9D, 0xD, 0x4F, 0xC6, 0xE8, 0x8, 0xDD, 0x3F);};
template<> struct uuid<Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequest> { define_guid(0xAEB6A9ED, 0xDE2F, 0x4FC2, 0xA9, 0xA8, 0x94, 0xEA, 0x78, 0x44, 0xF1, 0x3D);};

// types

namespace Windows { namespace Devices { namespace Bluetooth { namespace GenericAttributeProfile {

// IGattDeviceServiceStatics2
struct IGattDeviceServiceStatics2 : IInspectable {
	virtual STDMETHODIMP _FromIdWithSharingModeAsync(HSTRING deviceId, GattSharingMode sharingMode, Foundation::IAsyncOperation<GattDeviceService*>* *operation);
	virtual STDMETHODIMP _GetDeviceSelectorForBluetoothDeviceId(BluetoothDeviceId* bluetoothDeviceId, HSTRING *result);
	virtual STDMETHODIMP _GetDeviceSelectorForBluetoothDeviceIdWithCacheMode(BluetoothDeviceId* bluetoothDeviceId, BluetoothCacheMode cacheMode, HSTRING *result);
	virtual STDMETHODIMP _GetDeviceSelectorForBluetoothDeviceIdAndUuid(BluetoothDeviceId* bluetoothDeviceId, Platform::Guid serviceUuid, HSTRING *result);
	virtual STDMETHODIMP _GetDeviceSelectorForBluetoothDeviceIdAndUuidWithCacheMode(BluetoothDeviceId* bluetoothDeviceId, Platform::Guid serviceUuid, BluetoothCacheMode cacheMode, HSTRING *result);
};

// IGattDeviceServiceStatics
struct IGattDeviceServiceStatics : IInspectable {
	virtual STDMETHODIMP _FromIdAsync(HSTRING deviceId, Foundation::IAsyncOperation<GattDeviceService*>* *asyncOp);
	virtual STDMETHODIMP _GetDeviceSelectorFromUuid(Platform::Guid serviceUuid, HSTRING *selector);
	virtual STDMETHODIMP _GetDeviceSelectorFromShortId(unsigned short serviceShortId, HSTRING *selector);
	virtual STDMETHODIMP _ConvertShortIdToUuid(unsigned short shortId, Platform::Guid *serviceUuid);
};

// IGattDeviceService3
struct IGattDeviceService3_raw : IInspectable {
	virtual STDMETHODIMP _get_DeviceAccessInformation(Enumeration::DeviceAccessInformation* *value);
	virtual STDMETHODIMP _get_Session(GattSession* *value);
	virtual STDMETHODIMP _get_SharingMode(GattSharingMode *value);
	virtual STDMETHODIMP _RequestAccessAsync(Foundation::IAsyncOperation<Enumeration::DeviceAccessStatus>* *value);
	virtual STDMETHODIMP _OpenAsync(GattSharingMode sharingMode, Foundation::IAsyncOperation<GattOpenStatus>* *operation);
	virtual STDMETHODIMP _GetCharacteristicsAsync(Foundation::IAsyncOperation<GattCharacteristicsResult*>* *operation);
	virtual STDMETHODIMP _GetCharacteristicsWithCacheModeAsync(BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattCharacteristicsResult*>* *operation);
	virtual STDMETHODIMP _GetCharacteristicsForUuidAsync(Platform::Guid characteristicUuid, Foundation::IAsyncOperation<GattCharacteristicsResult*>* *operation);
	virtual STDMETHODIMP _GetCharacteristicsForUuidWithCacheModeAsync(Platform::Guid characteristicUuid, BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattCharacteristicsResult*>* *operation);
	virtual STDMETHODIMP _GetIncludedServicesAsync(Foundation::IAsyncOperation<GattDeviceServicesResult*>* *operation);
	virtual STDMETHODIMP _GetIncludedServicesWithCacheModeAsync(BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattDeviceServicesResult*>* *operation);
	virtual STDMETHODIMP _GetIncludedServicesForUuidAsync(Platform::Guid serviceUuid, Foundation::IAsyncOperation<GattDeviceServicesResult*>* *operation);
	virtual STDMETHODIMP _GetIncludedServicesForUuidWithCacheModeAsync(Platform::Guid serviceUuid, BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattDeviceServicesResult*>* *operation);
};
template<typename X> struct IGattDeviceService3_adaptor : X {
	union {
		struct : property {
			ptr<Enumeration::DeviceAccessInformation> get() { Enumeration::DeviceAccessInformation* value; hrcheck(enc(&IGattDeviceService3_adaptor::DeviceAccessInformation)->_get_DeviceAccessInformation(&value)); return from_abi(value); }
			ptr<Enumeration::DeviceAccessInformation> operator()() { return get(); }
			operator ptr<Enumeration::DeviceAccessInformation> () { return get(); }
			ptr<Enumeration::DeviceAccessInformation> operator->() { return get(); }
		} DeviceAccessInformation;
		struct : property {
			ptr<GattSession> get() { GattSession* value; hrcheck(enc(&IGattDeviceService3_adaptor::Session)->_get_Session(&value)); return from_abi(value); }
			ptr<GattSession> operator()() { return get(); }
			operator ptr<GattSession> () { return get(); }
			ptr<GattSession> operator->() { return get(); }
		} Session;
		struct : property {
			GattSharingMode get() { GattSharingMode value; hrcheck(enc(&IGattDeviceService3_adaptor::SharingMode)->_get_SharingMode(&value)); return value; }
			GattSharingMode operator()() { return get(); }
			operator GattSharingMode () { return get(); }
		} SharingMode;
	};
	ptr<Foundation::IAsyncOperation<Enumeration::DeviceAccessStatus>> RequestAccessAsync() { Foundation::IAsyncOperation<Enumeration::DeviceAccessStatus>* value; hrcheck(X::get()->_RequestAccessAsync(&value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<GattOpenStatus>> OpenAsync(GattSharingMode sharingMode) { Foundation::IAsyncOperation<GattOpenStatus>* operation; hrcheck(X::get()->_OpenAsync(sharingMode, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattCharacteristicsResult>>> GetCharacteristicsAsync() { Foundation::IAsyncOperation<GattCharacteristicsResult*>* operation; hrcheck(X::get()->_GetCharacteristicsAsync(&operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattCharacteristicsResult>>> GetCharacteristicsAsync(BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattCharacteristicsResult*>* operation; hrcheck(X::get()->_GetCharacteristicsWithCacheModeAsync(cacheMode, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattCharacteristicsResult>>> GetCharacteristicsForUuidAsync(const Platform::Guid& characteristicUuid) { Foundation::IAsyncOperation<GattCharacteristicsResult*>* operation; hrcheck(X::get()->_GetCharacteristicsForUuidAsync(characteristicUuid, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattCharacteristicsResult>>> GetCharacteristicsForUuidAsync(const Platform::Guid& characteristicUuid, BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattCharacteristicsResult*>* operation; hrcheck(X::get()->_GetCharacteristicsForUuidWithCacheModeAsync(characteristicUuid, cacheMode, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattDeviceServicesResult>>> GetIncludedServicesAsync() { Foundation::IAsyncOperation<GattDeviceServicesResult*>* operation; hrcheck(X::get()->_GetIncludedServicesAsync(&operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattDeviceServicesResult>>> GetIncludedServicesAsync(BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattDeviceServicesResult*>* operation; hrcheck(X::get()->_GetIncludedServicesWithCacheModeAsync(cacheMode, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattDeviceServicesResult>>> GetIncludedServicesForUuidAsync(const Platform::Guid& serviceUuid) { Foundation::IAsyncOperation<GattDeviceServicesResult*>* operation; hrcheck(X::get()->_GetIncludedServicesForUuidAsync(serviceUuid, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattDeviceServicesResult>>> GetIncludedServicesForUuidAsync(const Platform::Guid& serviceUuid, BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattDeviceServicesResult*>* operation; hrcheck(X::get()->_GetIncludedServicesForUuidWithCacheModeAsync(serviceUuid, cacheMode, &operation)); return from_abi(operation); }
	IGattDeviceService3_adaptor() {}
};
template<typename X> struct adapt<IGattDeviceService3, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService3_adaptor<X> { typedef adapt IGattDeviceService3; };
struct IGattDeviceService3 : IGattDeviceService3_raw, generate<IGattDeviceService3> {};

// IGattDeviceService
struct IGattDeviceService_raw : IInspectable {
	virtual STDMETHODIMP _GetCharacteristics(Platform::Guid characteristicUuid, Foundation::Collections::IVectorView<GattCharacteristic*>* *value);
	virtual STDMETHODIMP _GetIncludedServices(Platform::Guid serviceUuid, Foundation::Collections::IVectorView<GattDeviceService*>* *value);
	virtual STDMETHODIMP _get_DeviceId(HSTRING *value);
	virtual STDMETHODIMP _get_Uuid(Platform::Guid *value);
	virtual STDMETHODIMP _get_AttributeHandle(unsigned short *value);
};
template<typename X> struct IGattDeviceService_adaptor : X {
	union {
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattDeviceService_adaptor::AttributeHandle)->_get_AttributeHandle(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} AttributeHandle;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IGattDeviceService_adaptor::DeviceId)->_get_DeviceId(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} DeviceId;
		struct : property {
			Platform::Guid get() { Platform::Guid value; hrcheck(enc(&IGattDeviceService_adaptor::Uuid)->_get_Uuid(&value)); return value; }
			Platform::Guid operator()() { return get(); }
			operator Platform::Guid () { return get(); }
		} Uuid;
	};
	ptr<Foundation::Collections::IVectorView<ptr<GattCharacteristic>>> GetCharacteristics(const Platform::Guid& characteristicUuid) { Foundation::Collections::IVectorView<GattCharacteristic*>* value; hrcheck(X::get()->_GetCharacteristics(characteristicUuid, &value)); return from_abi(value); }
	ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> GetIncludedServices(const Platform::Guid& serviceUuid) { Foundation::Collections::IVectorView<GattDeviceService*>* value; hrcheck(X::get()->_GetIncludedServices(serviceUuid, &value)); return from_abi(value); }
	IGattDeviceService_adaptor() {}
};
template<typename X> struct adapt<IGattDeviceService, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService_adaptor<X> { typedef adapt IGattDeviceService; };
struct IGattDeviceService : IGattDeviceService_raw, generate<IGattDeviceService> {};

// IGattDeviceService2
struct IGattDeviceService2_raw : IInspectable {
	virtual STDMETHODIMP _get_Device(BluetoothLEDevice* *value);
	virtual STDMETHODIMP _get_ParentServices(Foundation::Collections::IVectorView<GattDeviceService*>* *value);
	virtual STDMETHODIMP _GetAllCharacteristics(Foundation::Collections::IVectorView<GattCharacteristic*>* *characteristics);
	virtual STDMETHODIMP _GetAllIncludedServices(Foundation::Collections::IVectorView<GattDeviceService*>* *includedServices);
};
template<typename X> struct IGattDeviceService2_adaptor : X {
	union {
		struct : property {
			ptr<BluetoothLEDevice> get() { BluetoothLEDevice* value; hrcheck(enc(&IGattDeviceService2_adaptor::Device)->_get_Device(&value)); return from_abi(value); }
			ptr<BluetoothLEDevice> operator()() { return get(); }
			operator ptr<BluetoothLEDevice> () { return get(); }
			ptr<BluetoothLEDevice> operator->() { return get(); }
		} Device;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> get() { Foundation::Collections::IVectorView<GattDeviceService*>* value; hrcheck(enc(&IGattDeviceService2_adaptor::ParentServices)->_get_ParentServices(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> operator->() { return get(); }
		} ParentServices;
	};
	ptr<Foundation::Collections::IVectorView<ptr<GattCharacteristic>>> GetAllCharacteristics() { Foundation::Collections::IVectorView<GattCharacteristic*>* characteristics; hrcheck(X::get()->_GetAllCharacteristics(&characteristics)); return from_abi(characteristics); }
	ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> GetAllIncludedServices() { Foundation::Collections::IVectorView<GattDeviceService*>* includedServices; hrcheck(X::get()->_GetAllIncludedServices(&includedServices)); return from_abi(includedServices); }
	IGattDeviceService2_adaptor() {}
};
template<typename X> struct adapt<IGattDeviceService2, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceService2_adaptor<X> { typedef adapt IGattDeviceService2; };
struct IGattDeviceService2 : IGattDeviceService2_raw, generate<IGattDeviceService2> {};

// GattDeviceService
template<typename> struct GattDeviceService_statics {
	static ptr<Foundation::IAsyncOperation<ptr<GattDeviceService>>> FromIdAsync(hstring_ref deviceId, GattSharingMode sharingMode) { Foundation::IAsyncOperation<GattDeviceService*>* operation; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics2>()->_FromIdWithSharingModeAsync(deviceId, sharingMode, &operation)); return from_abi(operation); }
	static hstring GetDeviceSelectorForBluetoothDeviceId(pptr<BluetoothDeviceId> bluetoothDeviceId) { HSTRING result; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics2>()->_GetDeviceSelectorForBluetoothDeviceId(bluetoothDeviceId, &result)); return from_abi(result); }
	static hstring GetDeviceSelectorForBluetoothDeviceId(pptr<BluetoothDeviceId> bluetoothDeviceId, BluetoothCacheMode cacheMode) { HSTRING result; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics2>()->_GetDeviceSelectorForBluetoothDeviceIdWithCacheMode(bluetoothDeviceId, cacheMode, &result)); return from_abi(result); }
	static hstring GetDeviceSelectorForBluetoothDeviceIdAndUuid(pptr<BluetoothDeviceId> bluetoothDeviceId, const Platform::Guid& serviceUuid) { HSTRING result; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics2>()->_GetDeviceSelectorForBluetoothDeviceIdAndUuid(bluetoothDeviceId, serviceUuid, &result)); return from_abi(result); }
	static hstring GetDeviceSelectorForBluetoothDeviceIdAndUuid(pptr<BluetoothDeviceId> bluetoothDeviceId, const Platform::Guid& serviceUuid, BluetoothCacheMode cacheMode) { HSTRING result; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics2>()->_GetDeviceSelectorForBluetoothDeviceIdAndUuidWithCacheMode(bluetoothDeviceId, serviceUuid, cacheMode, &result)); return from_abi(result); }
	static ptr<Foundation::IAsyncOperation<ptr<GattDeviceService>>> FromIdAsync(hstring_ref deviceId) { Foundation::IAsyncOperation<GattDeviceService*>* asyncOp; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics>()->_FromIdAsync(deviceId, &asyncOp)); return from_abi(asyncOp); }
	static hstring GetDeviceSelectorFromUuid(const Platform::Guid& serviceUuid) { HSTRING selector; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics>()->_GetDeviceSelectorFromUuid(serviceUuid, &selector)); return from_abi(selector); }
	static hstring GetDeviceSelectorFromShortId(unsigned short serviceShortId) { HSTRING selector; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics>()->_GetDeviceSelectorFromShortId(serviceShortId, &selector)); return from_abi(selector); }
	static Platform::Guid ConvertShortIdToUuid(unsigned short shortId) { Platform::Guid serviceUuid; hrcheck(get_activation_factory<GattDeviceService, IGattDeviceServiceStatics>()->_ConvertShortIdToUuid(shortId, &serviceUuid)); return serviceUuid; }
};

template<typename X> struct statics<GattDeviceService, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattDeviceService_statics<void> {
	typedef typename X::root_type GattDeviceService;
};
struct GattDeviceService : generate<GattDeviceService> {
	using IGattDeviceService3::GetIncludedServicesAsync;
	using IGattDeviceService3::GetIncludedServicesForUuidAsync;
	using IGattDeviceService3::GetCharacteristicsAsync;
	using IGattDeviceService3::GetCharacteristicsForUuidAsync;
};

// IGattDeviceServicesResult
struct IGattDeviceServicesResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(GattCommunicationStatus *value);
	virtual STDMETHODIMP _get_ProtocolError(Foundation::IReference<unsigned char>* *value);
	virtual STDMETHODIMP _get_Services(Foundation::Collections::IVectorView<GattDeviceService*>* *value);
};
template<typename X> struct IGattDeviceServicesResult_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::IReference<unsigned char>> get() { Foundation::IReference<unsigned char>* value; hrcheck(enc(&IGattDeviceServicesResult_adaptor::ProtocolError)->_get_ProtocolError(&value)); return from_abi(value); }
			ptr<Foundation::IReference<unsigned char>> operator()() { return get(); }
			operator ptr<Foundation::IReference<unsigned char>> () { return get(); }
			ptr<Foundation::IReference<unsigned char>> operator->() { return get(); }
		} ProtocolError;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> get() { Foundation::Collections::IVectorView<GattDeviceService*>* value; hrcheck(enc(&IGattDeviceServicesResult_adaptor::Services)->_get_Services(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattDeviceService>>> operator->() { return get(); }
		} Services;
		struct : property {
			GattCommunicationStatus get() { GattCommunicationStatus value; hrcheck(enc(&IGattDeviceServicesResult_adaptor::Status)->_get_Status(&value)); return value; }
			GattCommunicationStatus operator()() { return get(); }
			operator GattCommunicationStatus () { return get(); }
		} Status;
	};
	IGattDeviceServicesResult_adaptor() {}
};
template<typename X> struct adapt<IGattDeviceServicesResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDeviceServicesResult_adaptor<X> { typedef adapt IGattDeviceServicesResult; };
struct IGattDeviceServicesResult : IGattDeviceServicesResult_raw, generate<IGattDeviceServicesResult> {};

// GattDeviceServicesResult
template<typename X> struct statics<GattDeviceServicesResult, X> : X {
	typedef typename X::root_type GattDeviceServicesResult;
};
struct GattDeviceServicesResult : generate<GattDeviceServicesResult> {};

// IGattProtocolErrorStatics
struct IGattProtocolErrorStatics : IInspectable {
	virtual STDMETHODIMP _get_InvalidHandle(unsigned char *value);
	virtual STDMETHODIMP _get_ReadNotPermitted(unsigned char *value);
	virtual STDMETHODIMP _get_WriteNotPermitted(unsigned char *value);
	virtual STDMETHODIMP _get_InvalidPdu(unsigned char *value);
	virtual STDMETHODIMP _get_InsufficientAuthentication(unsigned char *value);
	virtual STDMETHODIMP _get_RequestNotSupported(unsigned char *value);
	virtual STDMETHODIMP _get_InvalidOffset(unsigned char *value);
	virtual STDMETHODIMP _get_InsufficientAuthorization(unsigned char *value);
	virtual STDMETHODIMP _get_PrepareQueueFull(unsigned char *value);
	virtual STDMETHODIMP _get_AttributeNotFound(unsigned char *value);
	virtual STDMETHODIMP _get_AttributeNotLong(unsigned char *value);
	virtual STDMETHODIMP _get_InsufficientEncryptionKeySize(unsigned char *value);
	virtual STDMETHODIMP _get_InvalidAttributeValueLength(unsigned char *value);
	virtual STDMETHODIMP _get_UnlikelyError(unsigned char *value);
	virtual STDMETHODIMP _get_InsufficientEncryption(unsigned char *value);
	virtual STDMETHODIMP _get_UnsupportedGroupType(unsigned char *value);
	virtual STDMETHODIMP _get_InsufficientResources(unsigned char *value);
};

// GattProtocolError
template<typename> struct GattProtocolError_statics {
	static struct _AttributeNotFound : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_AttributeNotFound(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} AttributeNotFound;
	static struct _AttributeNotLong : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_AttributeNotLong(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} AttributeNotLong;
	static struct _InsufficientAuthentication : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InsufficientAuthentication(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InsufficientAuthentication;
	static struct _InsufficientAuthorization : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InsufficientAuthorization(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InsufficientAuthorization;
	static struct _InsufficientEncryption : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InsufficientEncryption(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InsufficientEncryption;
	static struct _InsufficientEncryptionKeySize : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InsufficientEncryptionKeySize(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InsufficientEncryptionKeySize;
	static struct _InsufficientResources : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InsufficientResources(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InsufficientResources;
	static struct _InvalidAttributeValueLength : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InvalidAttributeValueLength(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InvalidAttributeValueLength;
	static struct _InvalidHandle : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InvalidHandle(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InvalidHandle;
	static struct _InvalidOffset : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InvalidOffset(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InvalidOffset;
	static struct _InvalidPdu : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_InvalidPdu(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} InvalidPdu;
	static struct _PrepareQueueFull : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_PrepareQueueFull(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} PrepareQueueFull;
	static struct _ReadNotPermitted : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_ReadNotPermitted(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} ReadNotPermitted;
	static struct _RequestNotSupported : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_RequestNotSupported(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} RequestNotSupported;
	static struct _UnlikelyError : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_UnlikelyError(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UnlikelyError;
	static struct _UnsupportedGroupType : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_UnsupportedGroupType(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UnsupportedGroupType;
	static struct _WriteNotPermitted : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattProtocolError, IGattProtocolErrorStatics>()->_get_WriteNotPermitted(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} WriteNotPermitted;
};
template<typename X> typename GattProtocolError_statics<X>::_AttributeNotFound GattProtocolError_statics<X>::AttributeNotFound;
template<typename X> typename GattProtocolError_statics<X>::_AttributeNotLong GattProtocolError_statics<X>::AttributeNotLong;
template<typename X> typename GattProtocolError_statics<X>::_InsufficientAuthentication GattProtocolError_statics<X>::InsufficientAuthentication;
template<typename X> typename GattProtocolError_statics<X>::_InsufficientAuthorization GattProtocolError_statics<X>::InsufficientAuthorization;
template<typename X> typename GattProtocolError_statics<X>::_InsufficientEncryption GattProtocolError_statics<X>::InsufficientEncryption;
template<typename X> typename GattProtocolError_statics<X>::_InsufficientEncryptionKeySize GattProtocolError_statics<X>::InsufficientEncryptionKeySize;
template<typename X> typename GattProtocolError_statics<X>::_InsufficientResources GattProtocolError_statics<X>::InsufficientResources;
template<typename X> typename GattProtocolError_statics<X>::_InvalidAttributeValueLength GattProtocolError_statics<X>::InvalidAttributeValueLength;
template<typename X> typename GattProtocolError_statics<X>::_InvalidHandle GattProtocolError_statics<X>::InvalidHandle;
template<typename X> typename GattProtocolError_statics<X>::_InvalidOffset GattProtocolError_statics<X>::InvalidOffset;
template<typename X> typename GattProtocolError_statics<X>::_InvalidPdu GattProtocolError_statics<X>::InvalidPdu;
template<typename X> typename GattProtocolError_statics<X>::_PrepareQueueFull GattProtocolError_statics<X>::PrepareQueueFull;
template<typename X> typename GattProtocolError_statics<X>::_ReadNotPermitted GattProtocolError_statics<X>::ReadNotPermitted;
template<typename X> typename GattProtocolError_statics<X>::_RequestNotSupported GattProtocolError_statics<X>::RequestNotSupported;
template<typename X> typename GattProtocolError_statics<X>::_UnlikelyError GattProtocolError_statics<X>::UnlikelyError;
template<typename X> typename GattProtocolError_statics<X>::_UnsupportedGroupType GattProtocolError_statics<X>::UnsupportedGroupType;
template<typename X> typename GattProtocolError_statics<X>::_WriteNotPermitted GattProtocolError_statics<X>::WriteNotPermitted;

template<typename X> struct statics<GattProtocolError, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattProtocolError_statics<void> {
	typedef typename X::root_type GattProtocolError;
};
struct GattProtocolError : generate<GattProtocolError> {};

// IGattSessionStatics
struct IGattSessionStatics : IInspectable {
	virtual STDMETHODIMP _FromDeviceIdAsync(BluetoothDeviceId* deviceId, Foundation::IAsyncOperation<GattSession*>* *operation);
};

// IGattSession
struct IGattSession_raw : IInspectable {
	virtual STDMETHODIMP _get_DeviceId(BluetoothDeviceId* *value);
	virtual STDMETHODIMP _get_CanMaintainConnection(bool *value);
	virtual STDMETHODIMP _put_MaintainConnection(bool value);
	virtual STDMETHODIMP _get_MaintainConnection(bool *value);
	virtual STDMETHODIMP _get_MaxPduSize(unsigned short *value);
	virtual STDMETHODIMP _get_SessionStatus(GattSessionStatus *value);
	virtual STDMETHODIMP _add_MaxPduSizeChanged(Foundation::TypedEventHandler<GattSession*, IInspectable*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_MaxPduSizeChanged(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_SessionStatusChanged(Foundation::TypedEventHandler<GattSession*, GattSessionStatusChangedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_SessionStatusChanged(Foundation::EventRegistrationToken token);
};
template<typename X> struct IGattSession_adaptor : X {
	union {
		struct : property {
			bool get() { bool value; hrcheck(enc(&IGattSession_adaptor::CanMaintainConnection)->_get_CanMaintainConnection(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
		} CanMaintainConnection;
		struct : property {
			ptr<BluetoothDeviceId> get() { BluetoothDeviceId* value; hrcheck(enc(&IGattSession_adaptor::DeviceId)->_get_DeviceId(&value)); return from_abi(value); }
			ptr<BluetoothDeviceId> operator()() { return get(); }
			operator ptr<BluetoothDeviceId> () { return get(); }
			ptr<BluetoothDeviceId> operator->() { return get(); }
		} DeviceId;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IGattSession_adaptor::MaintainConnection)->_get_MaintainConnection(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IGattSession_adaptor::MaintainConnection)->_put_MaintainConnection(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} MaintainConnection;
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattSession_adaptor::MaxPduSize)->_get_MaxPduSize(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} MaxPduSize;
		struct : property {
			GattSessionStatus get() { GattSessionStatus value; hrcheck(enc(&IGattSession_adaptor::SessionStatus)->_get_SessionStatus(&value)); return value; }
			GattSessionStatus operator()() { return get(); }
			operator GattSessionStatus () { return get(); }
		} SessionStatus;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattSession>, object>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattSession_adaptor::MaxPduSizeChanged)->_add_MaxPduSizeChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattSession_adaptor::MaxPduSizeChanged)->_remove_MaxPduSizeChanged(token)); }
		} MaxPduSizeChanged;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattSession>, ptr<GattSessionStatusChangedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattSession_adaptor::SessionStatusChanged)->_add_SessionStatusChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattSession_adaptor::SessionStatusChanged)->_remove_SessionStatusChanged(token)); }
		} SessionStatusChanged;
	};
	IGattSession_adaptor() {}
};
template<typename X> struct adapt<IGattSession, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSession_adaptor<X> { typedef adapt IGattSession; };
struct IGattSession : IGattSession_raw, generate<IGattSession> {};

// GattSession
template<typename> struct GattSession_statics {
	static ptr<Foundation::IAsyncOperation<ptr<GattSession>>> FromDeviceIdAsync(pptr<BluetoothDeviceId> deviceId) { Foundation::IAsyncOperation<GattSession*>* operation; hrcheck(get_activation_factory<GattSession, IGattSessionStatics>()->_FromDeviceIdAsync(deviceId, &operation)); return from_abi(operation); }
};

template<typename X> struct statics<GattSession, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattSession_statics<void> {
	typedef typename X::root_type GattSession;
};
struct GattSession : generate<GattSession> {};

// IGattSessionStatusChangedEventArgs
struct IGattSessionStatusChangedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
	virtual STDMETHODIMP _get_Status(GattSessionStatus *value);
};
template<typename X> struct IGattSessionStatusChangedEventArgs_adaptor : X {
	union {
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IGattSessionStatusChangedEventArgs_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
		struct : property {
			GattSessionStatus get() { GattSessionStatus value; hrcheck(enc(&IGattSessionStatusChangedEventArgs_adaptor::Status)->_get_Status(&value)); return value; }
			GattSessionStatus operator()() { return get(); }
			operator GattSessionStatus () { return get(); }
		} Status;
	};
	IGattSessionStatusChangedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IGattSessionStatusChangedEventArgs, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSessionStatusChangedEventArgs_adaptor<X> { typedef adapt IGattSessionStatusChangedEventArgs; };
struct IGattSessionStatusChangedEventArgs : IGattSessionStatusChangedEventArgs_raw, generate<IGattSessionStatusChangedEventArgs> {};

// GattSessionStatusChangedEventArgs
template<typename X> struct statics<GattSessionStatusChangedEventArgs, X> : X {
	typedef typename X::root_type GattSessionStatusChangedEventArgs;
};
struct GattSessionStatusChangedEventArgs : generate<GattSessionStatusChangedEventArgs> {};

// IGattCharacteristicStatics
struct IGattCharacteristicStatics : IInspectable {
	virtual STDMETHODIMP _ConvertShortIdToUuid(unsigned short shortId, Platform::Guid *characteristicUuid);
};

// IGattCharacteristic3
struct IGattCharacteristic3_raw : IInspectable {
	virtual STDMETHODIMP _GetDescriptorsAsync(Foundation::IAsyncOperation<GattDescriptorsResult*>* *operation);
	virtual STDMETHODIMP _GetDescriptorsWithCacheModeAsync(BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattDescriptorsResult*>* *operation);
	virtual STDMETHODIMP _GetDescriptorsForUuidAsync(Platform::Guid descriptorUuid, Foundation::IAsyncOperation<GattDescriptorsResult*>* *operation);
	virtual STDMETHODIMP _GetDescriptorsForUuidWithCacheModeAsync(Platform::Guid descriptorUuid, BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattDescriptorsResult*>* *operation);
	virtual STDMETHODIMP _WriteValueWithResultAsync(Storage::Streams::IBuffer* value, Foundation::IAsyncOperation<GattWriteResult*>* *operation);
	virtual STDMETHODIMP _WriteValueWithResultAndOptionAsync(Storage::Streams::IBuffer* value, GattWriteOption writeOption, Foundation::IAsyncOperation<GattWriteResult*>* *operation);
	virtual STDMETHODIMP _WriteClientCharacteristicConfigurationDescriptorWithResultAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue, Foundation::IAsyncOperation<GattWriteResult*>* *operation);
};
template<typename X> struct IGattCharacteristic3_adaptor : X {
	ptr<Foundation::IAsyncOperation<ptr<GattDescriptorsResult>>> GetDescriptorsAsync() { Foundation::IAsyncOperation<GattDescriptorsResult*>* operation; hrcheck(X::get()->_GetDescriptorsAsync(&operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattDescriptorsResult>>> GetDescriptorsAsync(BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattDescriptorsResult*>* operation; hrcheck(X::get()->_GetDescriptorsWithCacheModeAsync(cacheMode, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattDescriptorsResult>>> GetDescriptorsForUuidAsync(const Platform::Guid& descriptorUuid) { Foundation::IAsyncOperation<GattDescriptorsResult*>* operation; hrcheck(X::get()->_GetDescriptorsForUuidAsync(descriptorUuid, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattDescriptorsResult>>> GetDescriptorsForUuidAsync(const Platform::Guid& descriptorUuid, BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattDescriptorsResult*>* operation; hrcheck(X::get()->_GetDescriptorsForUuidWithCacheModeAsync(descriptorUuid, cacheMode, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattWriteResult>>> WriteValueWithResultAsync(pptr<Storage::Streams::IBuffer> value) { Foundation::IAsyncOperation<GattWriteResult*>* operation; hrcheck(X::get()->_WriteValueWithResultAsync(value, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattWriteResult>>> WriteValueWithResultAsync(pptr<Storage::Streams::IBuffer> value, GattWriteOption writeOption) { Foundation::IAsyncOperation<GattWriteResult*>* operation; hrcheck(X::get()->_WriteValueWithResultAndOptionAsync(value, writeOption, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattWriteResult>>> WriteClientCharacteristicConfigurationDescriptorWithResultAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue) { Foundation::IAsyncOperation<GattWriteResult*>* operation; hrcheck(X::get()->_WriteClientCharacteristicConfigurationDescriptorWithResultAsync(clientCharacteristicConfigurationDescriptorValue, &operation)); return from_abi(operation); }
};
template<typename X> struct adapt<IGattCharacteristic3, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic3_adaptor<X> { typedef adapt IGattCharacteristic3; };
struct IGattCharacteristic3 : IGattCharacteristic3_raw, generate<IGattCharacteristic3> {};

// IGattCharacteristic
struct IGattCharacteristic_raw : IInspectable {
	virtual STDMETHODIMP _GetDescriptors(Platform::Guid descriptorUuid, Foundation::Collections::IVectorView<GattDescriptor*>* *value);
	virtual STDMETHODIMP _get_CharacteristicProperties(GattCharacteristicProperties *value);
	virtual STDMETHODIMP _get_ProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _put_ProtectionLevel(GattProtectionLevel value);
	virtual STDMETHODIMP _get_UserDescription(HSTRING *value);
	virtual STDMETHODIMP _get_Uuid(Platform::Guid *value);
	virtual STDMETHODIMP _get_AttributeHandle(unsigned short *value);
	virtual STDMETHODIMP _get_PresentationFormats(Foundation::Collections::IVectorView<GattPresentationFormat*>* *value);
	virtual STDMETHODIMP _ReadValueAsync(Foundation::IAsyncOperation<GattReadResult*>* *value);
	virtual STDMETHODIMP _ReadValueWithCacheModeAsync(BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattReadResult*>* *value);
	virtual STDMETHODIMP _WriteValueAsync(Storage::Streams::IBuffer* value, Foundation::IAsyncOperation<GattCommunicationStatus>* *asyncOp);
	virtual STDMETHODIMP _WriteValueWithOptionAsync(Storage::Streams::IBuffer* value, GattWriteOption writeOption, Foundation::IAsyncOperation<GattCommunicationStatus>* *asyncOp);
	virtual STDMETHODIMP _ReadClientCharacteristicConfigurationDescriptorAsync(Foundation::IAsyncOperation<GattReadClientCharacteristicConfigurationDescriptorResult*>* *asyncOp);
	virtual STDMETHODIMP _WriteClientCharacteristicConfigurationDescriptorAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue, Foundation::IAsyncOperation<GattCommunicationStatus>* *asyncOp);
	virtual STDMETHODIMP _add_ValueChanged(Foundation::TypedEventHandler<GattCharacteristic*, GattValueChangedEventArgs*>* valueChangedHandler, Foundation::EventRegistrationToken *valueChangedEventCookie);
	virtual STDMETHODIMP _remove_ValueChanged(Foundation::EventRegistrationToken valueChangedEventCookie);
};
template<typename X> struct IGattCharacteristic_adaptor : X {
	union {
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattCharacteristic_adaptor::AttributeHandle)->_get_AttributeHandle(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} AttributeHandle;
		struct : property {
			GattCharacteristicProperties get() { GattCharacteristicProperties value; hrcheck(enc(&IGattCharacteristic_adaptor::CharacteristicProperties)->_get_CharacteristicProperties(&value)); return value; }
			GattCharacteristicProperties operator()() { return get(); }
			operator GattCharacteristicProperties () { return get(); }
		} CharacteristicProperties;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> get() { Foundation::Collections::IVectorView<GattPresentationFormat*>* value; hrcheck(enc(&IGattCharacteristic_adaptor::PresentationFormats)->_get_PresentationFormats(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> operator->() { return get(); }
		} PresentationFormats;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattCharacteristic_adaptor::ProtectionLevel)->_get_ProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
			void put(GattProtectionLevel value) { hrcheck(enc(&IGattCharacteristic_adaptor::ProtectionLevel)->_put_ProtectionLevel(value)); }
			void operator=(GattProtectionLevel value) { put(value); }
			void operator()(GattProtectionLevel value) { put(value); }
		} ProtectionLevel;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IGattCharacteristic_adaptor::UserDescription)->_get_UserDescription(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} UserDescription;
		struct : property {
			Platform::Guid get() { Platform::Guid value; hrcheck(enc(&IGattCharacteristic_adaptor::Uuid)->_get_Uuid(&value)); return value; }
			Platform::Guid operator()() { return get(); }
			operator Platform::Guid () { return get(); }
		} Uuid;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattCharacteristic>, ptr<GattValueChangedEventArgs>>> valueChangedHandler) { Foundation::EventRegistrationToken valueChangedEventCookie; hrcheck(enc(&IGattCharacteristic_adaptor::ValueChanged)->_add_ValueChanged(to_abi(valueChangedHandler), &valueChangedEventCookie)); return valueChangedEventCookie; }
			void operator-=(const Foundation::EventRegistrationToken& valueChangedEventCookie) { hrcheck(enc(&IGattCharacteristic_adaptor::ValueChanged)->_remove_ValueChanged(valueChangedEventCookie)); }
		} ValueChanged;
	};
	ptr<Foundation::Collections::IVectorView<ptr<GattDescriptor>>> GetDescriptors(const Platform::Guid& descriptorUuid) { Foundation::Collections::IVectorView<GattDescriptor*>* value; hrcheck(X::get()->_GetDescriptors(descriptorUuid, &value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<ptr<GattReadResult>>> ReadValueAsync() { Foundation::IAsyncOperation<GattReadResult*>* value; hrcheck(X::get()->_ReadValueAsync(&value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<ptr<GattReadResult>>> ReadValueAsync(BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattReadResult*>* value; hrcheck(X::get()->_ReadValueWithCacheModeAsync(cacheMode, &value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<GattCommunicationStatus>> WriteValueAsync(pptr<Storage::Streams::IBuffer> value) { Foundation::IAsyncOperation<GattCommunicationStatus>* asyncOp; hrcheck(X::get()->_WriteValueAsync(value, &asyncOp)); return from_abi(asyncOp); }
	ptr<Foundation::IAsyncOperation<GattCommunicationStatus>> WriteValueAsync(pptr<Storage::Streams::IBuffer> value, GattWriteOption writeOption) { Foundation::IAsyncOperation<GattCommunicationStatus>* asyncOp; hrcheck(X::get()->_WriteValueWithOptionAsync(value, writeOption, &asyncOp)); return from_abi(asyncOp); }
	ptr<Foundation::IAsyncOperation<ptr<GattReadClientCharacteristicConfigurationDescriptorResult>>> ReadClientCharacteristicConfigurationDescriptorAsync() { Foundation::IAsyncOperation<GattReadClientCharacteristicConfigurationDescriptorResult*>* asyncOp; hrcheck(X::get()->_ReadClientCharacteristicConfigurationDescriptorAsync(&asyncOp)); return from_abi(asyncOp); }
	ptr<Foundation::IAsyncOperation<GattCommunicationStatus>> WriteClientCharacteristicConfigurationDescriptorAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue) { Foundation::IAsyncOperation<GattCommunicationStatus>* asyncOp; hrcheck(X::get()->_WriteClientCharacteristicConfigurationDescriptorAsync(clientCharacteristicConfigurationDescriptorValue, &asyncOp)); return from_abi(asyncOp); }
	IGattCharacteristic_adaptor() {}
};
template<typename X> struct adapt<IGattCharacteristic, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic_adaptor<X> { typedef adapt IGattCharacteristic; };
struct IGattCharacteristic : IGattCharacteristic_raw, generate<IGattCharacteristic> {};

// IGattCharacteristic2
struct IGattCharacteristic2_raw : IInspectable {
	virtual STDMETHODIMP _get_Service(GattDeviceService* *value);
	virtual STDMETHODIMP _GetAllDescriptors(Foundation::Collections::IVectorView<GattDescriptor*>* *descriptors);
};
template<typename X> struct IGattCharacteristic2_adaptor : X {
	union {
		struct : property {
			ptr<GattDeviceService> get() { GattDeviceService* value; hrcheck(enc(&IGattCharacteristic2_adaptor::Service)->_get_Service(&value)); return from_abi(value); }
			ptr<GattDeviceService> operator()() { return get(); }
			operator ptr<GattDeviceService> () { return get(); }
			ptr<GattDeviceService> operator->() { return get(); }
		} Service;
	};
	ptr<Foundation::Collections::IVectorView<ptr<GattDescriptor>>> GetAllDescriptors() { Foundation::Collections::IVectorView<GattDescriptor*>* descriptors; hrcheck(X::get()->_GetAllDescriptors(&descriptors)); return from_abi(descriptors); }
	IGattCharacteristic2_adaptor() {}
};
template<typename X> struct adapt<IGattCharacteristic2, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristic2_adaptor<X> { typedef adapt IGattCharacteristic2; };
struct IGattCharacteristic2 : IGattCharacteristic2_raw, generate<IGattCharacteristic2> {};

// GattCharacteristic
template<typename> struct GattCharacteristic_statics {
	static Platform::Guid ConvertShortIdToUuid(unsigned short shortId) { Platform::Guid characteristicUuid; hrcheck(get_activation_factory<GattCharacteristic, IGattCharacteristicStatics>()->_ConvertShortIdToUuid(shortId, &characteristicUuid)); return characteristicUuid; }
};

template<typename X> struct statics<GattCharacteristic, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattCharacteristic_statics<void> {
	typedef typename X::root_type GattCharacteristic;
};
struct GattCharacteristic : generate<GattCharacteristic> {
	using IGattCharacteristic3::WriteValueWithResultAsync;
	using IGattCharacteristic::ReadValueAsync;
	using IGattCharacteristic::WriteValueAsync;
	using IGattCharacteristic3::GetDescriptorsForUuidAsync;
	using IGattCharacteristic3::GetDescriptorsAsync;
};

// IGattCharacteristicsResult
struct IGattCharacteristicsResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(GattCommunicationStatus *value);
	virtual STDMETHODIMP _get_ProtocolError(Foundation::IReference<unsigned char>* *value);
	virtual STDMETHODIMP _get_Characteristics(Foundation::Collections::IVectorView<GattCharacteristic*>* *value);
};
template<typename X> struct IGattCharacteristicsResult_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattCharacteristic>>> get() { Foundation::Collections::IVectorView<GattCharacteristic*>* value; hrcheck(enc(&IGattCharacteristicsResult_adaptor::Characteristics)->_get_Characteristics(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattCharacteristic>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattCharacteristic>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattCharacteristic>>> operator->() { return get(); }
		} Characteristics;
		struct : property {
			ptr<Foundation::IReference<unsigned char>> get() { Foundation::IReference<unsigned char>* value; hrcheck(enc(&IGattCharacteristicsResult_adaptor::ProtocolError)->_get_ProtocolError(&value)); return from_abi(value); }
			ptr<Foundation::IReference<unsigned char>> operator()() { return get(); }
			operator ptr<Foundation::IReference<unsigned char>> () { return get(); }
			ptr<Foundation::IReference<unsigned char>> operator->() { return get(); }
		} ProtocolError;
		struct : property {
			GattCommunicationStatus get() { GattCommunicationStatus value; hrcheck(enc(&IGattCharacteristicsResult_adaptor::Status)->_get_Status(&value)); return value; }
			GattCommunicationStatus operator()() { return get(); }
			operator GattCommunicationStatus () { return get(); }
		} Status;
	};
	IGattCharacteristicsResult_adaptor() {}
};
template<typename X> struct adapt<IGattCharacteristicsResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattCharacteristicsResult_adaptor<X> { typedef adapt IGattCharacteristicsResult; };
struct IGattCharacteristicsResult : IGattCharacteristicsResult_raw, generate<IGattCharacteristicsResult> {};

// GattCharacteristicsResult
template<typename X> struct statics<GattCharacteristicsResult, X> : X {
	typedef typename X::root_type GattCharacteristicsResult;
};
struct GattCharacteristicsResult : generate<GattCharacteristicsResult> {};

// IGattDescriptorStatics
struct IGattDescriptorStatics : IInspectable {
	virtual STDMETHODIMP _ConvertShortIdToUuid(unsigned short shortId, Platform::Guid *descriptorUuid);
};

// IGattDescriptor2
struct IGattDescriptor2_raw : IInspectable {
	virtual STDMETHODIMP _WriteValueWithResultAsync(Storage::Streams::IBuffer* value, Foundation::IAsyncOperation<GattWriteResult*>* *operation);
};
template<typename X> struct IGattDescriptor2_adaptor : X {
	ptr<Foundation::IAsyncOperation<ptr<GattWriteResult>>> WriteValueWithResultAsync(pptr<Storage::Streams::IBuffer> value) { Foundation::IAsyncOperation<GattWriteResult*>* operation; hrcheck(X::get()->_WriteValueWithResultAsync(value, &operation)); return from_abi(operation); }
};
template<typename X> struct adapt<IGattDescriptor2, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor2_adaptor<X> { typedef adapt IGattDescriptor2; };
struct IGattDescriptor2 : IGattDescriptor2_raw, generate<IGattDescriptor2> {};

// IGattDescriptor
struct IGattDescriptor_raw : IInspectable {
	virtual STDMETHODIMP _get_ProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _put_ProtectionLevel(GattProtectionLevel value);
	virtual STDMETHODIMP _get_Uuid(Platform::Guid *value);
	virtual STDMETHODIMP _get_AttributeHandle(unsigned short *value);
	virtual STDMETHODIMP _ReadValueAsync(Foundation::IAsyncOperation<GattReadResult*>* *value);
	virtual STDMETHODIMP _ReadValueWithCacheModeAsync(BluetoothCacheMode cacheMode, Foundation::IAsyncOperation<GattReadResult*>* *value);
	virtual STDMETHODIMP _WriteValueAsync(Storage::Streams::IBuffer* value, Foundation::IAsyncOperation<GattCommunicationStatus>* *action);
};
template<typename X> struct IGattDescriptor_adaptor : X {
	union {
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattDescriptor_adaptor::AttributeHandle)->_get_AttributeHandle(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} AttributeHandle;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattDescriptor_adaptor::ProtectionLevel)->_get_ProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
			void put(GattProtectionLevel value) { hrcheck(enc(&IGattDescriptor_adaptor::ProtectionLevel)->_put_ProtectionLevel(value)); }
			void operator=(GattProtectionLevel value) { put(value); }
			void operator()(GattProtectionLevel value) { put(value); }
		} ProtectionLevel;
		struct : property {
			Platform::Guid get() { Platform::Guid value; hrcheck(enc(&IGattDescriptor_adaptor::Uuid)->_get_Uuid(&value)); return value; }
			Platform::Guid operator()() { return get(); }
			operator Platform::Guid () { return get(); }
		} Uuid;
	};
	ptr<Foundation::IAsyncOperation<ptr<GattReadResult>>> ReadValueAsync() { Foundation::IAsyncOperation<GattReadResult*>* value; hrcheck(X::get()->_ReadValueAsync(&value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<ptr<GattReadResult>>> ReadValueAsync(BluetoothCacheMode cacheMode) { Foundation::IAsyncOperation<GattReadResult*>* value; hrcheck(X::get()->_ReadValueWithCacheModeAsync(cacheMode, &value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<GattCommunicationStatus>> WriteValueAsync(pptr<Storage::Streams::IBuffer> value) { Foundation::IAsyncOperation<GattCommunicationStatus>* action; hrcheck(X::get()->_WriteValueAsync(value, &action)); return from_abi(action); }
	IGattDescriptor_adaptor() {}
};
template<typename X> struct adapt<IGattDescriptor, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptor_adaptor<X> { typedef adapt IGattDescriptor; };
struct IGattDescriptor : IGattDescriptor_raw, generate<IGattDescriptor> {};

// GattDescriptor
template<typename> struct GattDescriptor_statics {
	static Platform::Guid ConvertShortIdToUuid(unsigned short shortId) { Platform::Guid descriptorUuid; hrcheck(get_activation_factory<GattDescriptor, IGattDescriptorStatics>()->_ConvertShortIdToUuid(shortId, &descriptorUuid)); return descriptorUuid; }
};

template<typename X> struct statics<GattDescriptor, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattDescriptor_statics<void> {
	typedef typename X::root_type GattDescriptor;
};
struct GattDescriptor : generate<GattDescriptor> {
	using IGattDescriptor::ReadValueAsync;
};

// IGattPresentationFormatStatics
struct IGattPresentationFormatStatics : IInspectable {
	virtual STDMETHODIMP _get_BluetoothSigAssignedNumbers(unsigned char *value);
};

// IGattPresentationFormatStatics2
struct IGattPresentationFormatStatics2 : IInspectable {
	virtual STDMETHODIMP _FromParts(unsigned char formatType, int exponent, unsigned short unit, unsigned char namespaceId, unsigned short description, GattPresentationFormat* *result);
};

// IGattPresentationFormat
struct IGattPresentationFormat_raw : IInspectable {
	virtual STDMETHODIMP _get_FormatType(unsigned char *value);
	virtual STDMETHODIMP _get_Exponent(int *value);
	virtual STDMETHODIMP _get_Unit(unsigned short *value);
	virtual STDMETHODIMP _get_Namespace(unsigned char *value);
	virtual STDMETHODIMP _get_Description(unsigned short *value);
};
template<typename X> struct IGattPresentationFormat_adaptor : X {
	union {
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattPresentationFormat_adaptor::Description)->_get_Description(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} Description;
		struct : property {
			int get() { int value; hrcheck(enc(&IGattPresentationFormat_adaptor::Exponent)->_get_Exponent(&value)); return value; }
			int operator()() { return get(); }
			operator int () { return get(); }
		} Exponent;
		struct : property {
			unsigned char get() { unsigned char value; hrcheck(enc(&IGattPresentationFormat_adaptor::FormatType)->_get_FormatType(&value)); return value; }
			unsigned char operator()() { return get(); }
			operator unsigned char () { return get(); }
		} FormatType;
		struct : property {
			unsigned char get() { unsigned char value; hrcheck(enc(&IGattPresentationFormat_adaptor::Namespace)->_get_Namespace(&value)); return value; }
			unsigned char operator()() { return get(); }
			operator unsigned char () { return get(); }
		} Namespace;
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattPresentationFormat_adaptor::Unit)->_get_Unit(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} Unit;
	};
	IGattPresentationFormat_adaptor() {}
};
template<typename X> struct adapt<IGattPresentationFormat, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattPresentationFormat_adaptor<X> { typedef adapt IGattPresentationFormat; };
struct IGattPresentationFormat : IGattPresentationFormat_raw, generate<IGattPresentationFormat> {};

// GattPresentationFormat
template<typename> struct GattPresentationFormat_statics {
	static struct _BluetoothSigAssignedNumbers : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormat, IGattPresentationFormatStatics>()->_get_BluetoothSigAssignedNumbers(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} BluetoothSigAssignedNumbers;
	static ptr<GattPresentationFormat> FromParts(unsigned char formatType, int exponent, unsigned short unit, unsigned char namespaceId, unsigned short description) { GattPresentationFormat* result; hrcheck(get_activation_factory<GattPresentationFormat, IGattPresentationFormatStatics2>()->_FromParts(formatType, exponent, unit, namespaceId, description, &result)); return from_abi(result); }
};
template<typename X> typename GattPresentationFormat_statics<X>::_BluetoothSigAssignedNumbers GattPresentationFormat_statics<X>::BluetoothSigAssignedNumbers;

template<typename X> struct statics<GattPresentationFormat, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattPresentationFormat_statics<void> {
	typedef typename X::root_type GattPresentationFormat;
};
struct GattPresentationFormat : generate<GattPresentationFormat> {};

// IGattReadResult2
struct IGattReadResult2_raw : IInspectable {
	virtual STDMETHODIMP _get_ProtocolError(Foundation::IReference<unsigned char>* *value);
};
template<typename X> struct IGattReadResult2_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::IReference<unsigned char>> get() { Foundation::IReference<unsigned char>* value; hrcheck(enc(&IGattReadResult2_adaptor::ProtocolError)->_get_ProtocolError(&value)); return from_abi(value); }
			ptr<Foundation::IReference<unsigned char>> operator()() { return get(); }
			operator ptr<Foundation::IReference<unsigned char>> () { return get(); }
			ptr<Foundation::IReference<unsigned char>> operator->() { return get(); }
		} ProtocolError;
	};
	IGattReadResult2_adaptor() {}
};
template<typename X> struct adapt<IGattReadResult2, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult2_adaptor<X> { typedef adapt IGattReadResult2; };
struct IGattReadResult2 : IGattReadResult2_raw, generate<IGattReadResult2> {};

// IGattReadResult
struct IGattReadResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(GattCommunicationStatus *value);
	virtual STDMETHODIMP _get_Value(Storage::Streams::IBuffer* *value);
};
template<typename X> struct IGattReadResult_adaptor : X {
	union {
		struct : property {
			GattCommunicationStatus get() { GattCommunicationStatus value; hrcheck(enc(&IGattReadResult_adaptor::Status)->_get_Status(&value)); return value; }
			GattCommunicationStatus operator()() { return get(); }
			operator GattCommunicationStatus () { return get(); }
		} Status;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattReadResult_adaptor::Value)->_get_Value(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
		} Value;
	};
	IGattReadResult_adaptor() {}
};
template<typename X> struct adapt<IGattReadResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadResult_adaptor<X> { typedef adapt IGattReadResult; };
struct IGattReadResult : IGattReadResult_raw, generate<IGattReadResult> {};

// GattReadResult
template<typename X> struct statics<GattReadResult, X> : X {
	typedef typename X::root_type GattReadResult;
};
struct GattReadResult : generate<GattReadResult> {};

// IGattReadClientCharacteristicConfigurationDescriptorResult2
struct IGattReadClientCharacteristicConfigurationDescriptorResult2_raw : IInspectable {
	virtual STDMETHODIMP _get_ProtocolError(Foundation::IReference<unsigned char>* *value);
};
template<typename X> struct IGattReadClientCharacteristicConfigurationDescriptorResult2_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::IReference<unsigned char>> get() { Foundation::IReference<unsigned char>* value; hrcheck(enc(&IGattReadClientCharacteristicConfigurationDescriptorResult2_adaptor::ProtocolError)->_get_ProtocolError(&value)); return from_abi(value); }
			ptr<Foundation::IReference<unsigned char>> operator()() { return get(); }
			operator ptr<Foundation::IReference<unsigned char>> () { return get(); }
			ptr<Foundation::IReference<unsigned char>> operator->() { return get(); }
		} ProtocolError;
	};
	IGattReadClientCharacteristicConfigurationDescriptorResult2_adaptor() {}
};
template<typename X> struct adapt<IGattReadClientCharacteristicConfigurationDescriptorResult2, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult2_adaptor<X> { typedef adapt IGattReadClientCharacteristicConfigurationDescriptorResult2; };
struct IGattReadClientCharacteristicConfigurationDescriptorResult2 : IGattReadClientCharacteristicConfigurationDescriptorResult2_raw, generate<IGattReadClientCharacteristicConfigurationDescriptorResult2> {};

// IGattReadClientCharacteristicConfigurationDescriptorResult
struct IGattReadClientCharacteristicConfigurationDescriptorResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(GattCommunicationStatus *value);
	virtual STDMETHODIMP _get_ClientCharacteristicConfigurationDescriptor(GattClientCharacteristicConfigurationDescriptorValue *value);
};
template<typename X> struct IGattReadClientCharacteristicConfigurationDescriptorResult_adaptor : X {
	union {
		struct : property {
			GattClientCharacteristicConfigurationDescriptorValue get() { GattClientCharacteristicConfigurationDescriptorValue value; hrcheck(enc(&IGattReadClientCharacteristicConfigurationDescriptorResult_adaptor::ClientCharacteristicConfigurationDescriptor)->_get_ClientCharacteristicConfigurationDescriptor(&value)); return value; }
			GattClientCharacteristicConfigurationDescriptorValue operator()() { return get(); }
			operator GattClientCharacteristicConfigurationDescriptorValue () { return get(); }
		} ClientCharacteristicConfigurationDescriptor;
		struct : property {
			GattCommunicationStatus get() { GattCommunicationStatus value; hrcheck(enc(&IGattReadClientCharacteristicConfigurationDescriptorResult_adaptor::Status)->_get_Status(&value)); return value; }
			GattCommunicationStatus operator()() { return get(); }
			operator GattCommunicationStatus () { return get(); }
		} Status;
	};
	IGattReadClientCharacteristicConfigurationDescriptorResult_adaptor() {}
};
template<typename X> struct adapt<IGattReadClientCharacteristicConfigurationDescriptorResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadClientCharacteristicConfigurationDescriptorResult_adaptor<X> { typedef adapt IGattReadClientCharacteristicConfigurationDescriptorResult; };
struct IGattReadClientCharacteristicConfigurationDescriptorResult : IGattReadClientCharacteristicConfigurationDescriptorResult_raw, generate<IGattReadClientCharacteristicConfigurationDescriptorResult> {};

// GattReadClientCharacteristicConfigurationDescriptorResult
template<typename X> struct statics<GattReadClientCharacteristicConfigurationDescriptorResult, X> : X {
	typedef typename X::root_type GattReadClientCharacteristicConfigurationDescriptorResult;
};
struct GattReadClientCharacteristicConfigurationDescriptorResult : generate<GattReadClientCharacteristicConfigurationDescriptorResult> {};

// IGattValueChangedEventArgs
struct IGattValueChangedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_CharacteristicValue(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _get_Timestamp(Foundation::DateTime *timestamp);
};
template<typename X> struct IGattValueChangedEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattValueChangedEventArgs_adaptor::CharacteristicValue)->_get_CharacteristicValue(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
		} CharacteristicValue;
		struct : property {
			Foundation::DateTime get() { Foundation::DateTime timestamp; hrcheck(enc(&IGattValueChangedEventArgs_adaptor::Timestamp)->_get_Timestamp(&timestamp)); return timestamp; }
			Foundation::DateTime operator()() { return get(); }
			operator Foundation::DateTime () { return get(); }
		} Timestamp;
	};
	IGattValueChangedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IGattValueChangedEventArgs, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattValueChangedEventArgs_adaptor<X> { typedef adapt IGattValueChangedEventArgs; };
struct IGattValueChangedEventArgs : IGattValueChangedEventArgs_raw, generate<IGattValueChangedEventArgs> {};

// GattValueChangedEventArgs
template<typename X> struct statics<GattValueChangedEventArgs, X> : X {
	typedef typename X::root_type GattValueChangedEventArgs;
};
struct GattValueChangedEventArgs : generate<GattValueChangedEventArgs> {};

// IGattDescriptorsResult
struct IGattDescriptorsResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(GattCommunicationStatus *value);
	virtual STDMETHODIMP _get_ProtocolError(Foundation::IReference<unsigned char>* *value);
	virtual STDMETHODIMP _get_Descriptors(Foundation::Collections::IVectorView<GattDescriptor*>* *value);
};
template<typename X> struct IGattDescriptorsResult_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattDescriptor>>> get() { Foundation::Collections::IVectorView<GattDescriptor*>* value; hrcheck(enc(&IGattDescriptorsResult_adaptor::Descriptors)->_get_Descriptors(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattDescriptor>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattDescriptor>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattDescriptor>>> operator->() { return get(); }
		} Descriptors;
		struct : property {
			ptr<Foundation::IReference<unsigned char>> get() { Foundation::IReference<unsigned char>* value; hrcheck(enc(&IGattDescriptorsResult_adaptor::ProtocolError)->_get_ProtocolError(&value)); return from_abi(value); }
			ptr<Foundation::IReference<unsigned char>> operator()() { return get(); }
			operator ptr<Foundation::IReference<unsigned char>> () { return get(); }
			ptr<Foundation::IReference<unsigned char>> operator->() { return get(); }
		} ProtocolError;
		struct : property {
			GattCommunicationStatus get() { GattCommunicationStatus value; hrcheck(enc(&IGattDescriptorsResult_adaptor::Status)->_get_Status(&value)); return value; }
			GattCommunicationStatus operator()() { return get(); }
			operator GattCommunicationStatus () { return get(); }
		} Status;
	};
	IGattDescriptorsResult_adaptor() {}
};
template<typename X> struct adapt<IGattDescriptorsResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattDescriptorsResult_adaptor<X> { typedef adapt IGattDescriptorsResult; };
struct IGattDescriptorsResult : IGattDescriptorsResult_raw, generate<IGattDescriptorsResult> {};

// GattDescriptorsResult
template<typename X> struct statics<GattDescriptorsResult, X> : X {
	typedef typename X::root_type GattDescriptorsResult;
};
struct GattDescriptorsResult : generate<GattDescriptorsResult> {};

// IGattWriteResult
struct IGattWriteResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Status(GattCommunicationStatus *value);
	virtual STDMETHODIMP _get_ProtocolError(Foundation::IReference<unsigned char>* *value);
};
template<typename X> struct IGattWriteResult_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::IReference<unsigned char>> get() { Foundation::IReference<unsigned char>* value; hrcheck(enc(&IGattWriteResult_adaptor::ProtocolError)->_get_ProtocolError(&value)); return from_abi(value); }
			ptr<Foundation::IReference<unsigned char>> operator()() { return get(); }
			operator ptr<Foundation::IReference<unsigned char>> () { return get(); }
			ptr<Foundation::IReference<unsigned char>> operator->() { return get(); }
		} ProtocolError;
		struct : property {
			GattCommunicationStatus get() { GattCommunicationStatus value; hrcheck(enc(&IGattWriteResult_adaptor::Status)->_get_Status(&value)); return value; }
			GattCommunicationStatus operator()() { return get(); }
			operator GattCommunicationStatus () { return get(); }
		} Status;
	};
	IGattWriteResult_adaptor() {}
};
template<typename X> struct adapt<IGattWriteResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteResult_adaptor<X> { typedef adapt IGattWriteResult; };
struct IGattWriteResult : IGattWriteResult_raw, generate<IGattWriteResult> {};

// GattWriteResult
template<typename X> struct statics<GattWriteResult, X> : X {
	typedef typename X::root_type GattWriteResult;
};
struct GattWriteResult : generate<GattWriteResult> {};

// IGattPresentationFormatTypesStatics
struct IGattPresentationFormatTypesStatics : IInspectable {
	virtual STDMETHODIMP _get_Boolean(unsigned char *value);
	virtual STDMETHODIMP _get_Bit2(unsigned char *value);
	virtual STDMETHODIMP _get_Nibble(unsigned char *value);
	virtual STDMETHODIMP _get_UInt8(unsigned char *value);
	virtual STDMETHODIMP _get_UInt12(unsigned char *value);
	virtual STDMETHODIMP _get_UInt16(unsigned char *value);
	virtual STDMETHODIMP _get_UInt24(unsigned char *value);
	virtual STDMETHODIMP _get_UInt32(unsigned char *value);
	virtual STDMETHODIMP _get_UInt48(unsigned char *value);
	virtual STDMETHODIMP _get_UInt64(unsigned char *value);
	virtual STDMETHODIMP _get_UInt128(unsigned char *value);
	virtual STDMETHODIMP _get_SInt8(unsigned char *value);
	virtual STDMETHODIMP _get_SInt12(unsigned char *value);
	virtual STDMETHODIMP _get_SInt16(unsigned char *value);
	virtual STDMETHODIMP _get_SInt24(unsigned char *value);
	virtual STDMETHODIMP _get_SInt32(unsigned char *value);
	virtual STDMETHODIMP _get_SInt48(unsigned char *value);
	virtual STDMETHODIMP _get_SInt64(unsigned char *value);
	virtual STDMETHODIMP _get_SInt128(unsigned char *value);
	virtual STDMETHODIMP _get_Float32(unsigned char *value);
	virtual STDMETHODIMP _get_Float64(unsigned char *value);
	virtual STDMETHODIMP _get_SFloat(unsigned char *value);
	virtual STDMETHODIMP _get_Float(unsigned char *value);
	virtual STDMETHODIMP _get_DUInt16(unsigned char *value);
	virtual STDMETHODIMP _get_Utf8(unsigned char *value);
	virtual STDMETHODIMP _get_Utf16(unsigned char *value);
	virtual STDMETHODIMP _get_Struct(unsigned char *value);
};

// GattPresentationFormatTypes
template<typename> struct GattPresentationFormatTypes_statics {
	static struct _Bit2 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Bit2(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Bit2;
	static struct _Boolean : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Boolean(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Boolean;
	static struct _DUInt16 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_DUInt16(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} DUInt16;
	static struct _Float : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Float(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Float;
	static struct _Float32 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Float32(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Float32;
	static struct _Float64 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Float64(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Float64;
	static struct _Nibble : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Nibble(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Nibble;
	static struct _SFloat : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SFloat(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SFloat;
	static struct _SInt12 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt12(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt12;
	static struct _SInt128 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt128(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt128;
	static struct _SInt16 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt16(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt16;
	static struct _SInt24 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt24(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt24;
	static struct _SInt32 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt32(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt32;
	static struct _SInt48 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt48(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt48;
	static struct _SInt64 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt64(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt64;
	static struct _SInt8 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_SInt8(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} SInt8;
	static struct _Struct : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Struct(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Struct;
	static struct _UInt12 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt12(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt12;
	static struct _UInt128 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt128(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt128;
	static struct _UInt16 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt16(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt16;
	static struct _UInt24 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt24(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt24;
	static struct _UInt32 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt32(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt32;
	static struct _UInt48 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt48(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt48;
	static struct _UInt64 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt64(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt64;
	static struct _UInt8 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_UInt8(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} UInt8;
	static struct _Utf16 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Utf16(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Utf16;
	static struct _Utf8 : property {
		unsigned char get() { unsigned char value; hrcheck(get_activation_factory<GattPresentationFormatTypes, IGattPresentationFormatTypesStatics>()->_get_Utf8(&value)); return value; }
		unsigned char operator()() { return get(); }
		operator unsigned char () { return get(); }
	} Utf8;
};
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Bit2 GattPresentationFormatTypes_statics<X>::Bit2;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Boolean GattPresentationFormatTypes_statics<X>::Boolean;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_DUInt16 GattPresentationFormatTypes_statics<X>::DUInt16;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Float GattPresentationFormatTypes_statics<X>::Float;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Float32 GattPresentationFormatTypes_statics<X>::Float32;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Float64 GattPresentationFormatTypes_statics<X>::Float64;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Nibble GattPresentationFormatTypes_statics<X>::Nibble;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SFloat GattPresentationFormatTypes_statics<X>::SFloat;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt12 GattPresentationFormatTypes_statics<X>::SInt12;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt128 GattPresentationFormatTypes_statics<X>::SInt128;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt16 GattPresentationFormatTypes_statics<X>::SInt16;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt24 GattPresentationFormatTypes_statics<X>::SInt24;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt32 GattPresentationFormatTypes_statics<X>::SInt32;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt48 GattPresentationFormatTypes_statics<X>::SInt48;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt64 GattPresentationFormatTypes_statics<X>::SInt64;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_SInt8 GattPresentationFormatTypes_statics<X>::SInt8;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Struct GattPresentationFormatTypes_statics<X>::Struct;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt12 GattPresentationFormatTypes_statics<X>::UInt12;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt128 GattPresentationFormatTypes_statics<X>::UInt128;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt16 GattPresentationFormatTypes_statics<X>::UInt16;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt24 GattPresentationFormatTypes_statics<X>::UInt24;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt32 GattPresentationFormatTypes_statics<X>::UInt32;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt48 GattPresentationFormatTypes_statics<X>::UInt48;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt64 GattPresentationFormatTypes_statics<X>::UInt64;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_UInt8 GattPresentationFormatTypes_statics<X>::UInt8;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Utf16 GattPresentationFormatTypes_statics<X>::Utf16;
template<typename X> typename GattPresentationFormatTypes_statics<X>::_Utf8 GattPresentationFormatTypes_statics<X>::Utf8;

template<typename X> struct statics<GattPresentationFormatTypes, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattPresentationFormatTypes_statics<void> {
	typedef typename X::root_type GattPresentationFormatTypes;
};
struct GattPresentationFormatTypes : generate<GattPresentationFormatTypes> {};

// IGattServiceUuidsStatics
struct IGattServiceUuidsStatics : IInspectable {
	virtual STDMETHODIMP _get_Battery(Platform::Guid *value);
	virtual STDMETHODIMP _get_BloodPressure(Platform::Guid *value);
	virtual STDMETHODIMP _get_CyclingSpeedAndCadence(Platform::Guid *value);
	virtual STDMETHODIMP _get_GenericAccess(Platform::Guid *value);
	virtual STDMETHODIMP _get_GenericAttribute(Platform::Guid *value);
	virtual STDMETHODIMP _get_Glucose(Platform::Guid *value);
	virtual STDMETHODIMP _get_HealthThermometer(Platform::Guid *value);
	virtual STDMETHODIMP _get_HeartRate(Platform::Guid *value);
	virtual STDMETHODIMP _get_RunningSpeedAndCadence(Platform::Guid *value);
};

// IGattServiceUuidsStatics2
struct IGattServiceUuidsStatics2 : IInspectable {
	virtual STDMETHODIMP _get_AlertNotification(Platform::Guid *value);
	virtual STDMETHODIMP _get_CurrentTime(Platform::Guid *value);
	virtual STDMETHODIMP _get_CyclingPower(Platform::Guid *value);
	virtual STDMETHODIMP _get_DeviceInformation(Platform::Guid *value);
	virtual STDMETHODIMP _get_HumanInterfaceDevice(Platform::Guid *value);
	virtual STDMETHODIMP _get_ImmediateAlert(Platform::Guid *value);
	virtual STDMETHODIMP _get_LinkLoss(Platform::Guid *value);
	virtual STDMETHODIMP _get_LocationAndNavigation(Platform::Guid *value);
	virtual STDMETHODIMP _get_NextDstChange(Platform::Guid *value);
	virtual STDMETHODIMP _get_PhoneAlertStatus(Platform::Guid *value);
	virtual STDMETHODIMP _get_ReferenceTimeUpdate(Platform::Guid *value);
	virtual STDMETHODIMP _get_ScanParameters(Platform::Guid *value);
	virtual STDMETHODIMP _get_TxPower(Platform::Guid *value);
};

// GattServiceUuids
template<typename> struct GattServiceUuids_statics {
	static struct _Battery : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_Battery(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} Battery;
	static struct _BloodPressure : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_BloodPressure(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BloodPressure;
	static struct _CyclingSpeedAndCadence : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_CyclingSpeedAndCadence(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CyclingSpeedAndCadence;
	static struct _GenericAccess : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_GenericAccess(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GenericAccess;
	static struct _GenericAttribute : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_GenericAttribute(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GenericAttribute;
	static struct _Glucose : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_Glucose(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} Glucose;
	static struct _HealthThermometer : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_HealthThermometer(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HealthThermometer;
	static struct _HeartRate : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_HeartRate(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HeartRate;
	static struct _RunningSpeedAndCadence : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics>()->_get_RunningSpeedAndCadence(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} RunningSpeedAndCadence;
	static struct _AlertNotification : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_AlertNotification(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} AlertNotification;
	static struct _CurrentTime : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_CurrentTime(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CurrentTime;
	static struct _CyclingPower : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_CyclingPower(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CyclingPower;
	static struct _DeviceInformation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_DeviceInformation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} DeviceInformation;
	static struct _HumanInterfaceDevice : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_HumanInterfaceDevice(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HumanInterfaceDevice;
	static struct _ImmediateAlert : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_ImmediateAlert(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ImmediateAlert;
	static struct _LinkLoss : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_LinkLoss(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} LinkLoss;
	static struct _LocationAndNavigation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_LocationAndNavigation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} LocationAndNavigation;
	static struct _NextDstChange : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_NextDstChange(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} NextDstChange;
	static struct _PhoneAlertStatus : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_PhoneAlertStatus(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} PhoneAlertStatus;
	static struct _ReferenceTimeUpdate : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_ReferenceTimeUpdate(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ReferenceTimeUpdate;
	static struct _ScanParameters : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_ScanParameters(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ScanParameters;
	static struct _TxPower : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattServiceUuids, IGattServiceUuidsStatics2>()->_get_TxPower(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TxPower;
};
template<typename X> typename GattServiceUuids_statics<X>::_Battery GattServiceUuids_statics<X>::Battery;
template<typename X> typename GattServiceUuids_statics<X>::_BloodPressure GattServiceUuids_statics<X>::BloodPressure;
template<typename X> typename GattServiceUuids_statics<X>::_CyclingSpeedAndCadence GattServiceUuids_statics<X>::CyclingSpeedAndCadence;
template<typename X> typename GattServiceUuids_statics<X>::_GenericAccess GattServiceUuids_statics<X>::GenericAccess;
template<typename X> typename GattServiceUuids_statics<X>::_GenericAttribute GattServiceUuids_statics<X>::GenericAttribute;
template<typename X> typename GattServiceUuids_statics<X>::_Glucose GattServiceUuids_statics<X>::Glucose;
template<typename X> typename GattServiceUuids_statics<X>::_HealthThermometer GattServiceUuids_statics<X>::HealthThermometer;
template<typename X> typename GattServiceUuids_statics<X>::_HeartRate GattServiceUuids_statics<X>::HeartRate;
template<typename X> typename GattServiceUuids_statics<X>::_RunningSpeedAndCadence GattServiceUuids_statics<X>::RunningSpeedAndCadence;
template<typename X> typename GattServiceUuids_statics<X>::_AlertNotification GattServiceUuids_statics<X>::AlertNotification;
template<typename X> typename GattServiceUuids_statics<X>::_CurrentTime GattServiceUuids_statics<X>::CurrentTime;
template<typename X> typename GattServiceUuids_statics<X>::_CyclingPower GattServiceUuids_statics<X>::CyclingPower;
template<typename X> typename GattServiceUuids_statics<X>::_DeviceInformation GattServiceUuids_statics<X>::DeviceInformation;
template<typename X> typename GattServiceUuids_statics<X>::_HumanInterfaceDevice GattServiceUuids_statics<X>::HumanInterfaceDevice;
template<typename X> typename GattServiceUuids_statics<X>::_ImmediateAlert GattServiceUuids_statics<X>::ImmediateAlert;
template<typename X> typename GattServiceUuids_statics<X>::_LinkLoss GattServiceUuids_statics<X>::LinkLoss;
template<typename X> typename GattServiceUuids_statics<X>::_LocationAndNavigation GattServiceUuids_statics<X>::LocationAndNavigation;
template<typename X> typename GattServiceUuids_statics<X>::_NextDstChange GattServiceUuids_statics<X>::NextDstChange;
template<typename X> typename GattServiceUuids_statics<X>::_PhoneAlertStatus GattServiceUuids_statics<X>::PhoneAlertStatus;
template<typename X> typename GattServiceUuids_statics<X>::_ReferenceTimeUpdate GattServiceUuids_statics<X>::ReferenceTimeUpdate;
template<typename X> typename GattServiceUuids_statics<X>::_ScanParameters GattServiceUuids_statics<X>::ScanParameters;
template<typename X> typename GattServiceUuids_statics<X>::_TxPower GattServiceUuids_statics<X>::TxPower;

template<typename X> struct statics<GattServiceUuids, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceUuids_statics<void> {
	typedef typename X::root_type GattServiceUuids;
};
struct GattServiceUuids : generate<GattServiceUuids> {};

// IGattCharacteristicUuidsStatics
struct IGattCharacteristicUuidsStatics : IInspectable {
	virtual STDMETHODIMP _get_BatteryLevel(Platform::Guid *value);
	virtual STDMETHODIMP _get_BloodPressureFeature(Platform::Guid *value);
	virtual STDMETHODIMP _get_BloodPressureMeasurement(Platform::Guid *value);
	virtual STDMETHODIMP _get_BodySensorLocation(Platform::Guid *value);
	virtual STDMETHODIMP _get_CscFeature(Platform::Guid *value);
	virtual STDMETHODIMP _get_CscMeasurement(Platform::Guid *value);
	virtual STDMETHODIMP _get_GlucoseFeature(Platform::Guid *value);
	virtual STDMETHODIMP _get_GlucoseMeasurement(Platform::Guid *value);
	virtual STDMETHODIMP _get_GlucoseMeasurementContext(Platform::Guid *value);
	virtual STDMETHODIMP _get_HeartRateControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_HeartRateMeasurement(Platform::Guid *value);
	virtual STDMETHODIMP _get_IntermediateCuffPressure(Platform::Guid *value);
	virtual STDMETHODIMP _get_IntermediateTemperature(Platform::Guid *value);
	virtual STDMETHODIMP _get_MeasurementInterval(Platform::Guid *value);
	virtual STDMETHODIMP _get_RecordAccessControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_RscFeature(Platform::Guid *value);
	virtual STDMETHODIMP _get_RscMeasurement(Platform::Guid *value);
	virtual STDMETHODIMP _get_SCControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_SensorLocation(Platform::Guid *value);
	virtual STDMETHODIMP _get_TemperatureMeasurement(Platform::Guid *value);
	virtual STDMETHODIMP _get_TemperatureType(Platform::Guid *value);
};

// IGattCharacteristicUuidsStatics2
struct IGattCharacteristicUuidsStatics2 : IInspectable {
	virtual STDMETHODIMP _get_AlertCategoryId(Platform::Guid *value);
	virtual STDMETHODIMP _get_AlertCategoryIdBitMask(Platform::Guid *value);
	virtual STDMETHODIMP _get_AlertLevel(Platform::Guid *value);
	virtual STDMETHODIMP _get_AlertNotificationControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_AlertStatus(Platform::Guid *value);
	virtual STDMETHODIMP _get_GapAppearance(Platform::Guid *value);
	virtual STDMETHODIMP _get_BootKeyboardInputReport(Platform::Guid *value);
	virtual STDMETHODIMP _get_BootKeyboardOutputReport(Platform::Guid *value);
	virtual STDMETHODIMP _get_BootMouseInputReport(Platform::Guid *value);
	virtual STDMETHODIMP _get_CurrentTime(Platform::Guid *value);
	virtual STDMETHODIMP _get_CyclingPowerControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_CyclingPowerFeature(Platform::Guid *value);
	virtual STDMETHODIMP _get_CyclingPowerMeasurement(Platform::Guid *value);
	virtual STDMETHODIMP _get_CyclingPowerVector(Platform::Guid *value);
	virtual STDMETHODIMP _get_DateTime(Platform::Guid *value);
	virtual STDMETHODIMP _get_DayDateTime(Platform::Guid *value);
	virtual STDMETHODIMP _get_DayOfWeek(Platform::Guid *value);
	virtual STDMETHODIMP _get_GapDeviceName(Platform::Guid *value);
	virtual STDMETHODIMP _get_DstOffset(Platform::Guid *value);
	virtual STDMETHODIMP _get_ExactTime256(Platform::Guid *value);
	virtual STDMETHODIMP _get_FirmwareRevisionString(Platform::Guid *value);
	virtual STDMETHODIMP _get_HardwareRevisionString(Platform::Guid *value);
	virtual STDMETHODIMP _get_HidControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_HidInformation(Platform::Guid *value);
	virtual STDMETHODIMP _get_Ieee1107320601RegulatoryCertificationDataList(Platform::Guid *value);
	virtual STDMETHODIMP _get_LnControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_LnFeature(Platform::Guid *value);
	virtual STDMETHODIMP _get_LocalTimeInformation(Platform::Guid *value);
	virtual STDMETHODIMP _get_LocationAndSpeed(Platform::Guid *value);
	virtual STDMETHODIMP _get_ManufacturerNameString(Platform::Guid *value);
	virtual STDMETHODIMP _get_ModelNumberString(Platform::Guid *value);
	virtual STDMETHODIMP _get_Navigation(Platform::Guid *value);
	virtual STDMETHODIMP _get_NewAlert(Platform::Guid *value);
	virtual STDMETHODIMP _get_GapPeripheralPreferredConnectionParameters(Platform::Guid *value);
	virtual STDMETHODIMP _get_GapPeripheralPrivacyFlag(Platform::Guid *value);
	virtual STDMETHODIMP _get_PnpId(Platform::Guid *value);
	virtual STDMETHODIMP _get_PositionQuality(Platform::Guid *value);
	virtual STDMETHODIMP _get_ProtocolMode(Platform::Guid *value);
	virtual STDMETHODIMP _get_GapReconnectionAddress(Platform::Guid *value);
	virtual STDMETHODIMP _get_ReferenceTimeInformation(Platform::Guid *value);
	virtual STDMETHODIMP _get_Report(Platform::Guid *value);
	virtual STDMETHODIMP _get_ReportMap(Platform::Guid *value);
	virtual STDMETHODIMP _get_RingerControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_RingerSetting(Platform::Guid *value);
	virtual STDMETHODIMP _get_ScanIntervalWindow(Platform::Guid *value);
	virtual STDMETHODIMP _get_ScanRefresh(Platform::Guid *value);
	virtual STDMETHODIMP _get_SerialNumberString(Platform::Guid *value);
	virtual STDMETHODIMP _get_GattServiceChanged(Platform::Guid *value);
	virtual STDMETHODIMP _get_SoftwareRevisionString(Platform::Guid *value);
	virtual STDMETHODIMP _get_SupportedNewAlertCategory(Platform::Guid *value);
	virtual STDMETHODIMP _get_SupportUnreadAlertCategory(Platform::Guid *value);
	virtual STDMETHODIMP _get_SystemId(Platform::Guid *value);
	virtual STDMETHODIMP _get_TimeAccuracy(Platform::Guid *value);
	virtual STDMETHODIMP _get_TimeSource(Platform::Guid *value);
	virtual STDMETHODIMP _get_TimeUpdateControlPoint(Platform::Guid *value);
	virtual STDMETHODIMP _get_TimeUpdateState(Platform::Guid *value);
	virtual STDMETHODIMP _get_TimeWithDst(Platform::Guid *value);
	virtual STDMETHODIMP _get_TimeZone(Platform::Guid *value);
	virtual STDMETHODIMP _get_TxPowerLevel(Platform::Guid *value);
	virtual STDMETHODIMP _get_UnreadAlertStatus(Platform::Guid *value);
};

// GattCharacteristicUuids
template<typename> struct GattCharacteristicUuids_statics {
	static struct _BatteryLevel : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_BatteryLevel(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BatteryLevel;
	static struct _BloodPressureFeature : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_BloodPressureFeature(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BloodPressureFeature;
	static struct _BloodPressureMeasurement : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_BloodPressureMeasurement(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BloodPressureMeasurement;
	static struct _BodySensorLocation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_BodySensorLocation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BodySensorLocation;
	static struct _CscFeature : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_CscFeature(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CscFeature;
	static struct _CscMeasurement : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_CscMeasurement(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CscMeasurement;
	static struct _GlucoseFeature : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_GlucoseFeature(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GlucoseFeature;
	static struct _GlucoseMeasurement : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_GlucoseMeasurement(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GlucoseMeasurement;
	static struct _GlucoseMeasurementContext : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_GlucoseMeasurementContext(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GlucoseMeasurementContext;
	static struct _HeartRateControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_HeartRateControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HeartRateControlPoint;
	static struct _HeartRateMeasurement : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_HeartRateMeasurement(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HeartRateMeasurement;
	static struct _IntermediateCuffPressure : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_IntermediateCuffPressure(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} IntermediateCuffPressure;
	static struct _IntermediateTemperature : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_IntermediateTemperature(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} IntermediateTemperature;
	static struct _MeasurementInterval : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_MeasurementInterval(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} MeasurementInterval;
	static struct _RecordAccessControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_RecordAccessControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} RecordAccessControlPoint;
	static struct _RscFeature : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_RscFeature(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} RscFeature;
	static struct _RscMeasurement : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_RscMeasurement(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} RscMeasurement;
	static struct _SCControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_SCControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} SCControlPoint;
	static struct _SensorLocation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_SensorLocation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} SensorLocation;
	static struct _TemperatureMeasurement : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_TemperatureMeasurement(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TemperatureMeasurement;
	static struct _TemperatureType : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics>()->_get_TemperatureType(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TemperatureType;
	static struct _AlertCategoryId : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_AlertCategoryId(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} AlertCategoryId;
	static struct _AlertCategoryIdBitMask : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_AlertCategoryIdBitMask(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} AlertCategoryIdBitMask;
	static struct _AlertLevel : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_AlertLevel(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} AlertLevel;
	static struct _AlertNotificationControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_AlertNotificationControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} AlertNotificationControlPoint;
	static struct _AlertStatus : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_AlertStatus(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} AlertStatus;
	static struct _BootKeyboardInputReport : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_BootKeyboardInputReport(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BootKeyboardInputReport;
	static struct _BootKeyboardOutputReport : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_BootKeyboardOutputReport(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BootKeyboardOutputReport;
	static struct _BootMouseInputReport : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_BootMouseInputReport(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} BootMouseInputReport;
	static struct _CurrentTime : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_CurrentTime(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CurrentTime;
	static struct _CyclingPowerControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_CyclingPowerControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CyclingPowerControlPoint;
	static struct _CyclingPowerFeature : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_CyclingPowerFeature(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CyclingPowerFeature;
	static struct _CyclingPowerMeasurement : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_CyclingPowerMeasurement(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CyclingPowerMeasurement;
	static struct _CyclingPowerVector : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_CyclingPowerVector(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CyclingPowerVector;
	static struct _DateTime : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_DateTime(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} DateTime;
	static struct _DayDateTime : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_DayDateTime(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} DayDateTime;
	static struct _DayOfWeek : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_DayOfWeek(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} DayOfWeek;
	static struct _DstOffset : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_DstOffset(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} DstOffset;
	static struct _ExactTime256 : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ExactTime256(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ExactTime256;
	static struct _FirmwareRevisionString : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_FirmwareRevisionString(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} FirmwareRevisionString;
	static struct _GapAppearance : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_GapAppearance(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GapAppearance;
	static struct _GapDeviceName : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_GapDeviceName(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GapDeviceName;
	static struct _GapPeripheralPreferredConnectionParameters : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_GapPeripheralPreferredConnectionParameters(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GapPeripheralPreferredConnectionParameters;
	static struct _GapPeripheralPrivacyFlag : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_GapPeripheralPrivacyFlag(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GapPeripheralPrivacyFlag;
	static struct _GapReconnectionAddress : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_GapReconnectionAddress(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GapReconnectionAddress;
	static struct _GattServiceChanged : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_GattServiceChanged(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} GattServiceChanged;
	static struct _HardwareRevisionString : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_HardwareRevisionString(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HardwareRevisionString;
	static struct _HidControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_HidControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HidControlPoint;
	static struct _HidInformation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_HidInformation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} HidInformation;
	static struct _Ieee1107320601RegulatoryCertificationDataList : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_Ieee1107320601RegulatoryCertificationDataList(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} Ieee1107320601RegulatoryCertificationDataList;
	static struct _LnControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_LnControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} LnControlPoint;
	static struct _LnFeature : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_LnFeature(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} LnFeature;
	static struct _LocalTimeInformation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_LocalTimeInformation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} LocalTimeInformation;
	static struct _LocationAndSpeed : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_LocationAndSpeed(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} LocationAndSpeed;
	static struct _ManufacturerNameString : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ManufacturerNameString(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ManufacturerNameString;
	static struct _ModelNumberString : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ModelNumberString(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ModelNumberString;
	static struct _Navigation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_Navigation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} Navigation;
	static struct _NewAlert : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_NewAlert(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} NewAlert;
	static struct _PnpId : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_PnpId(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} PnpId;
	static struct _PositionQuality : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_PositionQuality(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} PositionQuality;
	static struct _ProtocolMode : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ProtocolMode(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ProtocolMode;
	static struct _ReferenceTimeInformation : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ReferenceTimeInformation(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ReferenceTimeInformation;
	static struct _Report : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_Report(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} Report;
	static struct _ReportMap : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ReportMap(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ReportMap;
	static struct _RingerControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_RingerControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} RingerControlPoint;
	static struct _RingerSetting : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_RingerSetting(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} RingerSetting;
	static struct _ScanIntervalWindow : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ScanIntervalWindow(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ScanIntervalWindow;
	static struct _ScanRefresh : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_ScanRefresh(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ScanRefresh;
	static struct _SerialNumberString : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_SerialNumberString(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} SerialNumberString;
	static struct _SoftwareRevisionString : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_SoftwareRevisionString(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} SoftwareRevisionString;
	static struct _SupportUnreadAlertCategory : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_SupportUnreadAlertCategory(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} SupportUnreadAlertCategory;
	static struct _SupportedNewAlertCategory : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_SupportedNewAlertCategory(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} SupportedNewAlertCategory;
	static struct _SystemId : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_SystemId(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} SystemId;
	static struct _TimeAccuracy : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_TimeAccuracy(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TimeAccuracy;
	static struct _TimeSource : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_TimeSource(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TimeSource;
	static struct _TimeUpdateControlPoint : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_TimeUpdateControlPoint(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TimeUpdateControlPoint;
	static struct _TimeUpdateState : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_TimeUpdateState(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TimeUpdateState;
	static struct _TimeWithDst : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_TimeWithDst(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TimeWithDst;
	static struct _TimeZone : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_TimeZone(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TimeZone;
	static struct _TxPowerLevel : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_TxPowerLevel(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} TxPowerLevel;
	static struct _UnreadAlertStatus : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattCharacteristicUuids, IGattCharacteristicUuidsStatics2>()->_get_UnreadAlertStatus(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} UnreadAlertStatus;
};
template<typename X> typename GattCharacteristicUuids_statics<X>::_BatteryLevel GattCharacteristicUuids_statics<X>::BatteryLevel;
template<typename X> typename GattCharacteristicUuids_statics<X>::_BloodPressureFeature GattCharacteristicUuids_statics<X>::BloodPressureFeature;
template<typename X> typename GattCharacteristicUuids_statics<X>::_BloodPressureMeasurement GattCharacteristicUuids_statics<X>::BloodPressureMeasurement;
template<typename X> typename GattCharacteristicUuids_statics<X>::_BodySensorLocation GattCharacteristicUuids_statics<X>::BodySensorLocation;
template<typename X> typename GattCharacteristicUuids_statics<X>::_CscFeature GattCharacteristicUuids_statics<X>::CscFeature;
template<typename X> typename GattCharacteristicUuids_statics<X>::_CscMeasurement GattCharacteristicUuids_statics<X>::CscMeasurement;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GlucoseFeature GattCharacteristicUuids_statics<X>::GlucoseFeature;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GlucoseMeasurement GattCharacteristicUuids_statics<X>::GlucoseMeasurement;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GlucoseMeasurementContext GattCharacteristicUuids_statics<X>::GlucoseMeasurementContext;
template<typename X> typename GattCharacteristicUuids_statics<X>::_HeartRateControlPoint GattCharacteristicUuids_statics<X>::HeartRateControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_HeartRateMeasurement GattCharacteristicUuids_statics<X>::HeartRateMeasurement;
template<typename X> typename GattCharacteristicUuids_statics<X>::_IntermediateCuffPressure GattCharacteristicUuids_statics<X>::IntermediateCuffPressure;
template<typename X> typename GattCharacteristicUuids_statics<X>::_IntermediateTemperature GattCharacteristicUuids_statics<X>::IntermediateTemperature;
template<typename X> typename GattCharacteristicUuids_statics<X>::_MeasurementInterval GattCharacteristicUuids_statics<X>::MeasurementInterval;
template<typename X> typename GattCharacteristicUuids_statics<X>::_RecordAccessControlPoint GattCharacteristicUuids_statics<X>::RecordAccessControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_RscFeature GattCharacteristicUuids_statics<X>::RscFeature;
template<typename X> typename GattCharacteristicUuids_statics<X>::_RscMeasurement GattCharacteristicUuids_statics<X>::RscMeasurement;
template<typename X> typename GattCharacteristicUuids_statics<X>::_SCControlPoint GattCharacteristicUuids_statics<X>::SCControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_SensorLocation GattCharacteristicUuids_statics<X>::SensorLocation;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TemperatureMeasurement GattCharacteristicUuids_statics<X>::TemperatureMeasurement;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TemperatureType GattCharacteristicUuids_statics<X>::TemperatureType;
template<typename X> typename GattCharacteristicUuids_statics<X>::_AlertCategoryId GattCharacteristicUuids_statics<X>::AlertCategoryId;
template<typename X> typename GattCharacteristicUuids_statics<X>::_AlertCategoryIdBitMask GattCharacteristicUuids_statics<X>::AlertCategoryIdBitMask;
template<typename X> typename GattCharacteristicUuids_statics<X>::_AlertLevel GattCharacteristicUuids_statics<X>::AlertLevel;
template<typename X> typename GattCharacteristicUuids_statics<X>::_AlertNotificationControlPoint GattCharacteristicUuids_statics<X>::AlertNotificationControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_AlertStatus GattCharacteristicUuids_statics<X>::AlertStatus;
template<typename X> typename GattCharacteristicUuids_statics<X>::_BootKeyboardInputReport GattCharacteristicUuids_statics<X>::BootKeyboardInputReport;
template<typename X> typename GattCharacteristicUuids_statics<X>::_BootKeyboardOutputReport GattCharacteristicUuids_statics<X>::BootKeyboardOutputReport;
template<typename X> typename GattCharacteristicUuids_statics<X>::_BootMouseInputReport GattCharacteristicUuids_statics<X>::BootMouseInputReport;
template<typename X> typename GattCharacteristicUuids_statics<X>::_CurrentTime GattCharacteristicUuids_statics<X>::CurrentTime;
template<typename X> typename GattCharacteristicUuids_statics<X>::_CyclingPowerControlPoint GattCharacteristicUuids_statics<X>::CyclingPowerControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_CyclingPowerFeature GattCharacteristicUuids_statics<X>::CyclingPowerFeature;
template<typename X> typename GattCharacteristicUuids_statics<X>::_CyclingPowerMeasurement GattCharacteristicUuids_statics<X>::CyclingPowerMeasurement;
template<typename X> typename GattCharacteristicUuids_statics<X>::_CyclingPowerVector GattCharacteristicUuids_statics<X>::CyclingPowerVector;
template<typename X> typename GattCharacteristicUuids_statics<X>::_DateTime GattCharacteristicUuids_statics<X>::DateTime;
template<typename X> typename GattCharacteristicUuids_statics<X>::_DayDateTime GattCharacteristicUuids_statics<X>::DayDateTime;
template<typename X> typename GattCharacteristicUuids_statics<X>::_DayOfWeek GattCharacteristicUuids_statics<X>::DayOfWeek;
template<typename X> typename GattCharacteristicUuids_statics<X>::_DstOffset GattCharacteristicUuids_statics<X>::DstOffset;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ExactTime256 GattCharacteristicUuids_statics<X>::ExactTime256;
template<typename X> typename GattCharacteristicUuids_statics<X>::_FirmwareRevisionString GattCharacteristicUuids_statics<X>::FirmwareRevisionString;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GapAppearance GattCharacteristicUuids_statics<X>::GapAppearance;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GapDeviceName GattCharacteristicUuids_statics<X>::GapDeviceName;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GapPeripheralPreferredConnectionParameters GattCharacteristicUuids_statics<X>::GapPeripheralPreferredConnectionParameters;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GapPeripheralPrivacyFlag GattCharacteristicUuids_statics<X>::GapPeripheralPrivacyFlag;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GapReconnectionAddress GattCharacteristicUuids_statics<X>::GapReconnectionAddress;
template<typename X> typename GattCharacteristicUuids_statics<X>::_GattServiceChanged GattCharacteristicUuids_statics<X>::GattServiceChanged;
template<typename X> typename GattCharacteristicUuids_statics<X>::_HardwareRevisionString GattCharacteristicUuids_statics<X>::HardwareRevisionString;
template<typename X> typename GattCharacteristicUuids_statics<X>::_HidControlPoint GattCharacteristicUuids_statics<X>::HidControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_HidInformation GattCharacteristicUuids_statics<X>::HidInformation;
template<typename X> typename GattCharacteristicUuids_statics<X>::_Ieee1107320601RegulatoryCertificationDataList GattCharacteristicUuids_statics<X>::Ieee1107320601RegulatoryCertificationDataList;
template<typename X> typename GattCharacteristicUuids_statics<X>::_LnControlPoint GattCharacteristicUuids_statics<X>::LnControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_LnFeature GattCharacteristicUuids_statics<X>::LnFeature;
template<typename X> typename GattCharacteristicUuids_statics<X>::_LocalTimeInformation GattCharacteristicUuids_statics<X>::LocalTimeInformation;
template<typename X> typename GattCharacteristicUuids_statics<X>::_LocationAndSpeed GattCharacteristicUuids_statics<X>::LocationAndSpeed;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ManufacturerNameString GattCharacteristicUuids_statics<X>::ManufacturerNameString;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ModelNumberString GattCharacteristicUuids_statics<X>::ModelNumberString;
template<typename X> typename GattCharacteristicUuids_statics<X>::_Navigation GattCharacteristicUuids_statics<X>::Navigation;
template<typename X> typename GattCharacteristicUuids_statics<X>::_NewAlert GattCharacteristicUuids_statics<X>::NewAlert;
template<typename X> typename GattCharacteristicUuids_statics<X>::_PnpId GattCharacteristicUuids_statics<X>::PnpId;
template<typename X> typename GattCharacteristicUuids_statics<X>::_PositionQuality GattCharacteristicUuids_statics<X>::PositionQuality;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ProtocolMode GattCharacteristicUuids_statics<X>::ProtocolMode;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ReferenceTimeInformation GattCharacteristicUuids_statics<X>::ReferenceTimeInformation;
template<typename X> typename GattCharacteristicUuids_statics<X>::_Report GattCharacteristicUuids_statics<X>::Report;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ReportMap GattCharacteristicUuids_statics<X>::ReportMap;
template<typename X> typename GattCharacteristicUuids_statics<X>::_RingerControlPoint GattCharacteristicUuids_statics<X>::RingerControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_RingerSetting GattCharacteristicUuids_statics<X>::RingerSetting;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ScanIntervalWindow GattCharacteristicUuids_statics<X>::ScanIntervalWindow;
template<typename X> typename GattCharacteristicUuids_statics<X>::_ScanRefresh GattCharacteristicUuids_statics<X>::ScanRefresh;
template<typename X> typename GattCharacteristicUuids_statics<X>::_SerialNumberString GattCharacteristicUuids_statics<X>::SerialNumberString;
template<typename X> typename GattCharacteristicUuids_statics<X>::_SoftwareRevisionString GattCharacteristicUuids_statics<X>::SoftwareRevisionString;
template<typename X> typename GattCharacteristicUuids_statics<X>::_SupportUnreadAlertCategory GattCharacteristicUuids_statics<X>::SupportUnreadAlertCategory;
template<typename X> typename GattCharacteristicUuids_statics<X>::_SupportedNewAlertCategory GattCharacteristicUuids_statics<X>::SupportedNewAlertCategory;
template<typename X> typename GattCharacteristicUuids_statics<X>::_SystemId GattCharacteristicUuids_statics<X>::SystemId;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TimeAccuracy GattCharacteristicUuids_statics<X>::TimeAccuracy;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TimeSource GattCharacteristicUuids_statics<X>::TimeSource;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TimeUpdateControlPoint GattCharacteristicUuids_statics<X>::TimeUpdateControlPoint;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TimeUpdateState GattCharacteristicUuids_statics<X>::TimeUpdateState;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TimeWithDst GattCharacteristicUuids_statics<X>::TimeWithDst;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TimeZone GattCharacteristicUuids_statics<X>::TimeZone;
template<typename X> typename GattCharacteristicUuids_statics<X>::_TxPowerLevel GattCharacteristicUuids_statics<X>::TxPowerLevel;
template<typename X> typename GattCharacteristicUuids_statics<X>::_UnreadAlertStatus GattCharacteristicUuids_statics<X>::UnreadAlertStatus;

template<typename X> struct statics<GattCharacteristicUuids, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattCharacteristicUuids_statics<void> {
	typedef typename X::root_type GattCharacteristicUuids;
};
struct GattCharacteristicUuids : generate<GattCharacteristicUuids> {};

// IGattDescriptorUuidsStatics
struct IGattDescriptorUuidsStatics : IInspectable {
	virtual STDMETHODIMP _get_CharacteristicAggregateFormat(Platform::Guid *value);
	virtual STDMETHODIMP _get_CharacteristicExtendedProperties(Platform::Guid *value);
	virtual STDMETHODIMP _get_CharacteristicPresentationFormat(Platform::Guid *value);
	virtual STDMETHODIMP _get_CharacteristicUserDescription(Platform::Guid *value);
	virtual STDMETHODIMP _get_ClientCharacteristicConfiguration(Platform::Guid *value);
	virtual STDMETHODIMP _get_ServerCharacteristicConfiguration(Platform::Guid *value);
};

// GattDescriptorUuids
template<typename> struct GattDescriptorUuids_statics {
	static struct _CharacteristicAggregateFormat : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattDescriptorUuids, IGattDescriptorUuidsStatics>()->_get_CharacteristicAggregateFormat(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CharacteristicAggregateFormat;
	static struct _CharacteristicExtendedProperties : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattDescriptorUuids, IGattDescriptorUuidsStatics>()->_get_CharacteristicExtendedProperties(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CharacteristicExtendedProperties;
	static struct _CharacteristicPresentationFormat : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattDescriptorUuids, IGattDescriptorUuidsStatics>()->_get_CharacteristicPresentationFormat(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CharacteristicPresentationFormat;
	static struct _CharacteristicUserDescription : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattDescriptorUuids, IGattDescriptorUuidsStatics>()->_get_CharacteristicUserDescription(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} CharacteristicUserDescription;
	static struct _ClientCharacteristicConfiguration : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattDescriptorUuids, IGattDescriptorUuidsStatics>()->_get_ClientCharacteristicConfiguration(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ClientCharacteristicConfiguration;
	static struct _ServerCharacteristicConfiguration : property {
		Platform::Guid get() { Platform::Guid value; hrcheck(get_activation_factory<GattDescriptorUuids, IGattDescriptorUuidsStatics>()->_get_ServerCharacteristicConfiguration(&value)); return value; }
		Platform::Guid operator()() { return get(); }
		operator Platform::Guid () { return get(); }
	} ServerCharacteristicConfiguration;
};
template<typename X> typename GattDescriptorUuids_statics<X>::_CharacteristicAggregateFormat GattDescriptorUuids_statics<X>::CharacteristicAggregateFormat;
template<typename X> typename GattDescriptorUuids_statics<X>::_CharacteristicExtendedProperties GattDescriptorUuids_statics<X>::CharacteristicExtendedProperties;
template<typename X> typename GattDescriptorUuids_statics<X>::_CharacteristicPresentationFormat GattDescriptorUuids_statics<X>::CharacteristicPresentationFormat;
template<typename X> typename GattDescriptorUuids_statics<X>::_CharacteristicUserDescription GattDescriptorUuids_statics<X>::CharacteristicUserDescription;
template<typename X> typename GattDescriptorUuids_statics<X>::_ClientCharacteristicConfiguration GattDescriptorUuids_statics<X>::ClientCharacteristicConfiguration;
template<typename X> typename GattDescriptorUuids_statics<X>::_ServerCharacteristicConfiguration GattDescriptorUuids_statics<X>::ServerCharacteristicConfiguration;

template<typename X> struct statics<GattDescriptorUuids, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattDescriptorUuids_statics<void> {
	typedef typename X::root_type GattDescriptorUuids;
};
struct GattDescriptorUuids : generate<GattDescriptorUuids> {};

// IGattReliableWriteTransaction
struct IGattReliableWriteTransaction_raw : IInspectable {
	virtual STDMETHODIMP _WriteValue(GattCharacteristic* characteristic, Storage::Streams::IBuffer* value);
	virtual STDMETHODIMP _CommitAsync(Foundation::IAsyncOperation<GattCommunicationStatus>* *asyncOp);
};
template<typename X> struct IGattReliableWriteTransaction_adaptor : X {
	void WriteValue(pptr<GattCharacteristic> characteristic, pptr<Storage::Streams::IBuffer> value) { hrcheck(X::get()->_WriteValue(characteristic, value)); }
	ptr<Foundation::IAsyncOperation<GattCommunicationStatus>> CommitAsync() { Foundation::IAsyncOperation<GattCommunicationStatus>* asyncOp; hrcheck(X::get()->_CommitAsync(&asyncOp)); return from_abi(asyncOp); }
};
template<typename X> struct adapt<IGattReliableWriteTransaction, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction_adaptor<X> { typedef adapt IGattReliableWriteTransaction; };
struct IGattReliableWriteTransaction : IGattReliableWriteTransaction_raw, generate<IGattReliableWriteTransaction> {};

// IGattReliableWriteTransaction2
struct IGattReliableWriteTransaction2_raw : IInspectable {
	virtual STDMETHODIMP _CommitWithResultAsync(Foundation::IAsyncOperation<GattWriteResult*>* *operation);
};
template<typename X> struct IGattReliableWriteTransaction2_adaptor : X {
	ptr<Foundation::IAsyncOperation<ptr<GattWriteResult>>> CommitWithResultAsync() { Foundation::IAsyncOperation<GattWriteResult*>* operation; hrcheck(X::get()->_CommitWithResultAsync(&operation)); return from_abi(operation); }
};
template<typename X> struct adapt<IGattReliableWriteTransaction2, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReliableWriteTransaction2_adaptor<X> { typedef adapt IGattReliableWriteTransaction2; };
struct IGattReliableWriteTransaction2 : IGattReliableWriteTransaction2_raw, generate<IGattReliableWriteTransaction2> {};

// GattReliableWriteTransaction
template<typename X> struct statics<GattReliableWriteTransaction, X> : X {
	typedef typename X::root_type GattReliableWriteTransaction;
};
struct GattReliableWriteTransaction : generate<GattReliableWriteTransaction> {};

// IGattServiceProviderAdvertisingParameters
struct IGattServiceProviderAdvertisingParameters_raw : IInspectable {
	virtual STDMETHODIMP _put_IsConnectable(bool value);
	virtual STDMETHODIMP _get_IsConnectable(bool *value);
	virtual STDMETHODIMP _put_IsDiscoverable(bool value);
	virtual STDMETHODIMP _get_IsDiscoverable(bool *value);
};
template<typename X> struct IGattServiceProviderAdvertisingParameters_adaptor : X {
	union {
		struct : property {
			bool get() { bool value; hrcheck(enc(&IGattServiceProviderAdvertisingParameters_adaptor::IsConnectable)->_get_IsConnectable(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IGattServiceProviderAdvertisingParameters_adaptor::IsConnectable)->_put_IsConnectable(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} IsConnectable;
		struct : property {
			bool get() { bool value; hrcheck(enc(&IGattServiceProviderAdvertisingParameters_adaptor::IsDiscoverable)->_get_IsDiscoverable(&value)); return value; }
			bool operator()() { return get(); }
			operator bool () { return get(); }
			void put(bool value) { hrcheck(enc(&IGattServiceProviderAdvertisingParameters_adaptor::IsDiscoverable)->_put_IsDiscoverable(value)); }
			void operator=(bool value) { put(value); }
			void operator()(bool value) { put(value); }
		} IsDiscoverable;
	};
	IGattServiceProviderAdvertisingParameters_adaptor() {}
};
template<typename X> struct adapt<IGattServiceProviderAdvertisingParameters, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisingParameters_adaptor<X> { typedef adapt IGattServiceProviderAdvertisingParameters; };
struct IGattServiceProviderAdvertisingParameters : IGattServiceProviderAdvertisingParameters_raw, generate<IGattServiceProviderAdvertisingParameters> {};

// GattServiceProviderAdvertisingParameters
template<typename X> struct statics<GattServiceProviderAdvertisingParameters, X> : X {
	typedef typename X::root_type GattServiceProviderAdvertisingParameters;
};
struct GattServiceProviderAdvertisingParameters : generate<GattServiceProviderAdvertisingParameters> {};

// IGattLocalCharacteristicParameters
struct IGattLocalCharacteristicParameters_raw : IInspectable {
	virtual STDMETHODIMP _put_StaticValue(Storage::Streams::IBuffer* value);
	virtual STDMETHODIMP _get_StaticValue(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _put_CharacteristicProperties(GattCharacteristicProperties value);
	virtual STDMETHODIMP _get_CharacteristicProperties(GattCharacteristicProperties *value);
	virtual STDMETHODIMP _put_ReadProtectionLevel(GattProtectionLevel value);
	virtual STDMETHODIMP _get_ReadProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _put_WriteProtectionLevel(GattProtectionLevel value);
	virtual STDMETHODIMP _get_WriteProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _put_UserDescription(HSTRING value);
	virtual STDMETHODIMP _get_UserDescription(HSTRING *value);
	virtual STDMETHODIMP _get_PresentationFormats(Foundation::Collections::IVector<GattPresentationFormat*>* *value);
};
template<typename X> struct IGattLocalCharacteristicParameters_adaptor : X {
	union {
		struct : property {
			GattCharacteristicProperties get() { GattCharacteristicProperties value; hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::CharacteristicProperties)->_get_CharacteristicProperties(&value)); return value; }
			GattCharacteristicProperties operator()() { return get(); }
			operator GattCharacteristicProperties () { return get(); }
			void put(GattCharacteristicProperties value) { hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::CharacteristicProperties)->_put_CharacteristicProperties(value)); }
			void operator=(GattCharacteristicProperties value) { put(value); }
			void operator()(GattCharacteristicProperties value) { put(value); }
		} CharacteristicProperties;
		struct : property {
			ptr<Foundation::Collections::IVector<ptr<GattPresentationFormat>>> get() { Foundation::Collections::IVector<GattPresentationFormat*>* value; hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::PresentationFormats)->_get_PresentationFormats(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVector<ptr<GattPresentationFormat>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVector<ptr<GattPresentationFormat>>> () { return get(); }
			ptr<Foundation::Collections::IVector<ptr<GattPresentationFormat>>> operator->() { return get(); }
		} PresentationFormats;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::ReadProtectionLevel)->_get_ReadProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
			void put(GattProtectionLevel value) { hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::ReadProtectionLevel)->_put_ReadProtectionLevel(value)); }
			void operator=(GattProtectionLevel value) { put(value); }
			void operator()(GattProtectionLevel value) { put(value); }
		} ReadProtectionLevel;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::StaticValue)->_get_StaticValue(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
			void put(pptr<Storage::Streams::IBuffer> value) { hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::StaticValue)->_put_StaticValue(value)); }
			void operator=(pptr<Storage::Streams::IBuffer> value) { put(value); }
			void operator()(pptr<Storage::Streams::IBuffer> value) { put(value); }
		} StaticValue;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::UserDescription)->_get_UserDescription(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
			void put(hstring_ref value) { hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::UserDescription)->_put_UserDescription(value)); }
			void operator=(hstring_ref value) { put(value); }
			void operator()(hstring_ref value) { put(value); }
		} UserDescription;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::WriteProtectionLevel)->_get_WriteProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
			void put(GattProtectionLevel value) { hrcheck(enc(&IGattLocalCharacteristicParameters_adaptor::WriteProtectionLevel)->_put_WriteProtectionLevel(value)); }
			void operator=(GattProtectionLevel value) { put(value); }
			void operator()(GattProtectionLevel value) { put(value); }
		} WriteProtectionLevel;
	};
	IGattLocalCharacteristicParameters_adaptor() {}
};
template<typename X> struct adapt<IGattLocalCharacteristicParameters, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicParameters_adaptor<X> { typedef adapt IGattLocalCharacteristicParameters; };
struct IGattLocalCharacteristicParameters : IGattLocalCharacteristicParameters_raw, generate<IGattLocalCharacteristicParameters> {};

// GattLocalCharacteristicParameters
template<typename X> struct statics<GattLocalCharacteristicParameters, X> : X {
	typedef typename X::root_type GattLocalCharacteristicParameters;
};
struct GattLocalCharacteristicParameters : generate<GattLocalCharacteristicParameters> {};

// IGattLocalDescriptorParameters
struct IGattLocalDescriptorParameters_raw : IInspectable {
	virtual STDMETHODIMP _put_StaticValue(Storage::Streams::IBuffer* value);
	virtual STDMETHODIMP _get_StaticValue(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _put_ReadProtectionLevel(GattProtectionLevel value);
	virtual STDMETHODIMP _get_ReadProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _put_WriteProtectionLevel(GattProtectionLevel value);
	virtual STDMETHODIMP _get_WriteProtectionLevel(GattProtectionLevel *value);
};
template<typename X> struct IGattLocalDescriptorParameters_adaptor : X {
	union {
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalDescriptorParameters_adaptor::ReadProtectionLevel)->_get_ReadProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
			void put(GattProtectionLevel value) { hrcheck(enc(&IGattLocalDescriptorParameters_adaptor::ReadProtectionLevel)->_put_ReadProtectionLevel(value)); }
			void operator=(GattProtectionLevel value) { put(value); }
			void operator()(GattProtectionLevel value) { put(value); }
		} ReadProtectionLevel;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattLocalDescriptorParameters_adaptor::StaticValue)->_get_StaticValue(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
			void put(pptr<Storage::Streams::IBuffer> value) { hrcheck(enc(&IGattLocalDescriptorParameters_adaptor::StaticValue)->_put_StaticValue(value)); }
			void operator=(pptr<Storage::Streams::IBuffer> value) { put(value); }
			void operator()(pptr<Storage::Streams::IBuffer> value) { put(value); }
		} StaticValue;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalDescriptorParameters_adaptor::WriteProtectionLevel)->_get_WriteProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
			void put(GattProtectionLevel value) { hrcheck(enc(&IGattLocalDescriptorParameters_adaptor::WriteProtectionLevel)->_put_WriteProtectionLevel(value)); }
			void operator=(GattProtectionLevel value) { put(value); }
			void operator()(GattProtectionLevel value) { put(value); }
		} WriteProtectionLevel;
	};
	IGattLocalDescriptorParameters_adaptor() {}
};
template<typename X> struct adapt<IGattLocalDescriptorParameters, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorParameters_adaptor<X> { typedef adapt IGattLocalDescriptorParameters; };
struct IGattLocalDescriptorParameters : IGattLocalDescriptorParameters_raw, generate<IGattLocalDescriptorParameters> {};

// GattLocalDescriptorParameters
template<typename X> struct statics<GattLocalDescriptorParameters, X> : X {
	typedef typename X::root_type GattLocalDescriptorParameters;
};
struct GattLocalDescriptorParameters : generate<GattLocalDescriptorParameters> {};

// IGattServiceProviderStatics
struct IGattServiceProviderStatics : IInspectable {
	virtual STDMETHODIMP _CreateAsync(Platform::Guid serviceUuid, Foundation::IAsyncOperation<GattServiceProviderResult*>* *operation);
};

// IGattServiceProviderResult
struct IGattServiceProviderResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
	virtual STDMETHODIMP _get_ServiceProvider(GattServiceProvider* *value);
};
template<typename X> struct IGattServiceProviderResult_adaptor : X {
	union {
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IGattServiceProviderResult_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
		struct : property {
			ptr<GattServiceProvider> get() { GattServiceProvider* value; hrcheck(enc(&IGattServiceProviderResult_adaptor::ServiceProvider)->_get_ServiceProvider(&value)); return from_abi(value); }
			ptr<GattServiceProvider> operator()() { return get(); }
			operator ptr<GattServiceProvider> () { return get(); }
			ptr<GattServiceProvider> operator->() { return get(); }
		} ServiceProvider;
	};
	IGattServiceProviderResult_adaptor() {}
};
template<typename X> struct adapt<IGattServiceProviderResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderResult_adaptor<X> { typedef adapt IGattServiceProviderResult; };
struct IGattServiceProviderResult : IGattServiceProviderResult_raw, generate<IGattServiceProviderResult> {};

// GattServiceProviderResult
template<typename X> struct statics<GattServiceProviderResult, X> : X {
	typedef typename X::root_type GattServiceProviderResult;
};
struct GattServiceProviderResult : generate<GattServiceProviderResult> {};

// IGattServiceProvider
struct IGattServiceProvider_raw : IInspectable {
	virtual STDMETHODIMP _get_Service(GattLocalService* *value);
	virtual STDMETHODIMP _get_AdvertisementStatus(GattServiceProviderAdvertisementStatus *value);
	virtual STDMETHODIMP _add_AdvertisementStatusChanged(Foundation::TypedEventHandler<GattServiceProvider*, GattServiceProviderAdvertisementStatusChangedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_AdvertisementStatusChanged(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _StartAdvertising();
	virtual STDMETHODIMP _StartAdvertisingWithParameters(GattServiceProviderAdvertisingParameters* parameters);
	virtual STDMETHODIMP _StopAdvertising();
};
template<typename X> struct IGattServiceProvider_adaptor : X {
	union {
		struct : property {
			GattServiceProviderAdvertisementStatus get() { GattServiceProviderAdvertisementStatus value; hrcheck(enc(&IGattServiceProvider_adaptor::AdvertisementStatus)->_get_AdvertisementStatus(&value)); return value; }
			GattServiceProviderAdvertisementStatus operator()() { return get(); }
			operator GattServiceProviderAdvertisementStatus () { return get(); }
		} AdvertisementStatus;
		struct : property {
			ptr<GattLocalService> get() { GattLocalService* value; hrcheck(enc(&IGattServiceProvider_adaptor::Service)->_get_Service(&value)); return from_abi(value); }
			ptr<GattLocalService> operator()() { return get(); }
			operator ptr<GattLocalService> () { return get(); }
			ptr<GattLocalService> operator->() { return get(); }
		} Service;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattServiceProvider>, ptr<GattServiceProviderAdvertisementStatusChangedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattServiceProvider_adaptor::AdvertisementStatusChanged)->_add_AdvertisementStatusChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattServiceProvider_adaptor::AdvertisementStatusChanged)->_remove_AdvertisementStatusChanged(token)); }
		} AdvertisementStatusChanged;
	};
	void StartAdvertising() { hrcheck(X::get()->_StartAdvertising()); }
	void StartAdvertising(pptr<GattServiceProviderAdvertisingParameters> parameters) { hrcheck(X::get()->_StartAdvertisingWithParameters(parameters)); }
	void StopAdvertising() { hrcheck(X::get()->_StopAdvertising()); }
	IGattServiceProvider_adaptor() {}
};
template<typename X> struct adapt<IGattServiceProvider, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProvider_adaptor<X> { typedef adapt IGattServiceProvider; };
struct IGattServiceProvider : IGattServiceProvider_raw, generate<IGattServiceProvider> {};

// IGattLocalService
struct IGattLocalService_raw : IInspectable {
	virtual STDMETHODIMP _get_Uuid(Platform::Guid *value);
	virtual STDMETHODIMP _CreateCharacteristicAsync(Platform::Guid characteristicUuid, GattLocalCharacteristicParameters* parameters, Foundation::IAsyncOperation<GattLocalCharacteristicResult*>* *operation);
	virtual STDMETHODIMP _get_Characteristics(Foundation::Collections::IVectorView<GattLocalCharacteristic*>* *value);
};
template<typename X> struct IGattLocalService_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattLocalCharacteristic>>> get() { Foundation::Collections::IVectorView<GattLocalCharacteristic*>* value; hrcheck(enc(&IGattLocalService_adaptor::Characteristics)->_get_Characteristics(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattLocalCharacteristic>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattLocalCharacteristic>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattLocalCharacteristic>>> operator->() { return get(); }
		} Characteristics;
		struct : property {
			Platform::Guid get() { Platform::Guid value; hrcheck(enc(&IGattLocalService_adaptor::Uuid)->_get_Uuid(&value)); return value; }
			Platform::Guid operator()() { return get(); }
			operator Platform::Guid () { return get(); }
		} Uuid;
	};
	ptr<Foundation::IAsyncOperation<ptr<GattLocalCharacteristicResult>>> CreateCharacteristicAsync(const Platform::Guid& characteristicUuid, pptr<GattLocalCharacteristicParameters> parameters) { Foundation::IAsyncOperation<GattLocalCharacteristicResult*>* operation; hrcheck(X::get()->_CreateCharacteristicAsync(characteristicUuid, parameters, &operation)); return from_abi(operation); }
	IGattLocalService_adaptor() {}
};
template<typename X> struct adapt<IGattLocalService, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalService_adaptor<X> { typedef adapt IGattLocalService; };
struct IGattLocalService : IGattLocalService_raw, generate<IGattLocalService> {};

// GattLocalService
template<typename X> struct statics<GattLocalService, X> : X {
	typedef typename X::root_type GattLocalService;
};
struct GattLocalService : generate<GattLocalService> {};

// GattServiceProvider
template<typename> struct GattServiceProvider_statics {
	static ptr<Foundation::IAsyncOperation<ptr<GattServiceProviderResult>>> CreateAsync(const Platform::Guid& serviceUuid) { Foundation::IAsyncOperation<GattServiceProviderResult*>* operation; hrcheck(get_activation_factory<GattServiceProvider, IGattServiceProviderStatics>()->_CreateAsync(serviceUuid, &operation)); return from_abi(operation); }
};

template<typename X> struct statics<GattServiceProvider, X> : X, Windows::Devices::Bluetooth::GenericAttributeProfile::GattServiceProvider_statics<void> {
	typedef typename X::root_type GattServiceProvider;
};
struct GattServiceProvider : generate<GattServiceProvider> {
	using IGattServiceProvider::StartAdvertising;
};

// IGattServiceProviderAdvertisementStatusChangedEventArgs
struct IGattServiceProviderAdvertisementStatusChangedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
	virtual STDMETHODIMP _get_Status(GattServiceProviderAdvertisementStatus *value);
};
template<typename X> struct IGattServiceProviderAdvertisementStatusChangedEventArgs_adaptor : X {
	union {
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IGattServiceProviderAdvertisementStatusChangedEventArgs_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
		struct : property {
			GattServiceProviderAdvertisementStatus get() { GattServiceProviderAdvertisementStatus value; hrcheck(enc(&IGattServiceProviderAdvertisementStatusChangedEventArgs_adaptor::Status)->_get_Status(&value)); return value; }
			GattServiceProviderAdvertisementStatus operator()() { return get(); }
			operator GattServiceProviderAdvertisementStatus () { return get(); }
		} Status;
	};
	IGattServiceProviderAdvertisementStatusChangedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IGattServiceProviderAdvertisementStatusChangedEventArgs, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattServiceProviderAdvertisementStatusChangedEventArgs_adaptor<X> { typedef adapt IGattServiceProviderAdvertisementStatusChangedEventArgs; };
struct IGattServiceProviderAdvertisementStatusChangedEventArgs : IGattServiceProviderAdvertisementStatusChangedEventArgs_raw, generate<IGattServiceProviderAdvertisementStatusChangedEventArgs> {};

// GattServiceProviderAdvertisementStatusChangedEventArgs
template<typename X> struct statics<GattServiceProviderAdvertisementStatusChangedEventArgs, X> : X {
	typedef typename X::root_type GattServiceProviderAdvertisementStatusChangedEventArgs;
};
struct GattServiceProviderAdvertisementStatusChangedEventArgs : generate<GattServiceProviderAdvertisementStatusChangedEventArgs> {};

// IGattLocalCharacteristicResult
struct IGattLocalCharacteristicResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Characteristic(GattLocalCharacteristic* *value);
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
};
template<typename X> struct IGattLocalCharacteristicResult_adaptor : X {
	union {
		struct : property {
			ptr<GattLocalCharacteristic> get() { GattLocalCharacteristic* value; hrcheck(enc(&IGattLocalCharacteristicResult_adaptor::Characteristic)->_get_Characteristic(&value)); return from_abi(value); }
			ptr<GattLocalCharacteristic> operator()() { return get(); }
			operator ptr<GattLocalCharacteristic> () { return get(); }
			ptr<GattLocalCharacteristic> operator->() { return get(); }
		} Characteristic;
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IGattLocalCharacteristicResult_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
	};
	IGattLocalCharacteristicResult_adaptor() {}
};
template<typename X> struct adapt<IGattLocalCharacteristicResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristicResult_adaptor<X> { typedef adapt IGattLocalCharacteristicResult; };
struct IGattLocalCharacteristicResult : IGattLocalCharacteristicResult_raw, generate<IGattLocalCharacteristicResult> {};

// GattLocalCharacteristicResult
template<typename X> struct statics<GattLocalCharacteristicResult, X> : X {
	typedef typename X::root_type GattLocalCharacteristicResult;
};
struct GattLocalCharacteristicResult : generate<GattLocalCharacteristicResult> {};

// IGattLocalCharacteristic
struct IGattLocalCharacteristic_raw : IInspectable {
	virtual STDMETHODIMP _get_Uuid(Platform::Guid *value);
	virtual STDMETHODIMP _get_StaticValue(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _get_CharacteristicProperties(GattCharacteristicProperties *value);
	virtual STDMETHODIMP _get_ReadProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _get_WriteProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _CreateDescriptorAsync(Platform::Guid descriptorUuid, GattLocalDescriptorParameters* parameters, Foundation::IAsyncOperation<GattLocalDescriptorResult*>* *operation);
	virtual STDMETHODIMP _get_Descriptors(Foundation::Collections::IVectorView<GattLocalDescriptor*>* *value);
	virtual STDMETHODIMP _get_UserDescription(HSTRING *value);
	virtual STDMETHODIMP _get_PresentationFormats(Foundation::Collections::IVectorView<GattPresentationFormat*>* *value);
	virtual STDMETHODIMP _get_SubscribedClients(Foundation::Collections::IVectorView<GattSubscribedClient*>* *value);
	virtual STDMETHODIMP _add_SubscribedClientsChanged(Foundation::TypedEventHandler<GattLocalCharacteristic*, IInspectable*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_SubscribedClientsChanged(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_ReadRequested(Foundation::TypedEventHandler<GattLocalCharacteristic*, GattReadRequestedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ReadRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_WriteRequested(Foundation::TypedEventHandler<GattLocalCharacteristic*, GattWriteRequestedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_WriteRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _NotifyValueAsync(Storage::Streams::IBuffer* value, Foundation::IAsyncOperation<Foundation::Collections::IVectorView<GattClientNotificationResult*>*>* *operation);
	virtual STDMETHODIMP _NotifyValueForSubscribedClientAsync(Storage::Streams::IBuffer* value, GattSubscribedClient* subscribedClient, Foundation::IAsyncOperation<GattClientNotificationResult*>* *operation);
};
template<typename X> struct IGattLocalCharacteristic_adaptor : X {
	union {
		struct : property {
			GattCharacteristicProperties get() { GattCharacteristicProperties value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::CharacteristicProperties)->_get_CharacteristicProperties(&value)); return value; }
			GattCharacteristicProperties operator()() { return get(); }
			operator GattCharacteristicProperties () { return get(); }
		} CharacteristicProperties;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattLocalDescriptor>>> get() { Foundation::Collections::IVectorView<GattLocalDescriptor*>* value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::Descriptors)->_get_Descriptors(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattLocalDescriptor>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattLocalDescriptor>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattLocalDescriptor>>> operator->() { return get(); }
		} Descriptors;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> get() { Foundation::Collections::IVectorView<GattPresentationFormat*>* value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::PresentationFormats)->_get_PresentationFormats(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattPresentationFormat>>> operator->() { return get(); }
		} PresentationFormats;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::ReadProtectionLevel)->_get_ReadProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
		} ReadProtectionLevel;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::StaticValue)->_get_StaticValue(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
		} StaticValue;
		struct : property {
			ptr<Foundation::Collections::IVectorView<ptr<GattSubscribedClient>>> get() { Foundation::Collections::IVectorView<GattSubscribedClient*>* value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::SubscribedClients)->_get_SubscribedClients(&value)); return from_abi(value); }
			ptr<Foundation::Collections::IVectorView<ptr<GattSubscribedClient>>> operator()() { return get(); }
			operator ptr<Foundation::Collections::IVectorView<ptr<GattSubscribedClient>>> () { return get(); }
			ptr<Foundation::Collections::IVectorView<ptr<GattSubscribedClient>>> operator->() { return get(); }
		} SubscribedClients;
		struct : property {
			hstring get() { HSTRING value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::UserDescription)->_get_UserDescription(&value)); return from_abi(value); }
			hstring operator()() { return get(); }
			operator hstring_ref () { return get(); }
		} UserDescription;
		struct : property {
			Platform::Guid get() { Platform::Guid value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::Uuid)->_get_Uuid(&value)); return value; }
			Platform::Guid operator()() { return get(); }
			operator Platform::Guid () { return get(); }
		} Uuid;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalCharacteristic_adaptor::WriteProtectionLevel)->_get_WriteProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
		} WriteProtectionLevel;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattLocalCharacteristic>, ptr<GattReadRequestedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattLocalCharacteristic_adaptor::ReadRequested)->_add_ReadRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattLocalCharacteristic_adaptor::ReadRequested)->_remove_ReadRequested(token)); }
		} ReadRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattLocalCharacteristic>, object>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattLocalCharacteristic_adaptor::SubscribedClientsChanged)->_add_SubscribedClientsChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattLocalCharacteristic_adaptor::SubscribedClientsChanged)->_remove_SubscribedClientsChanged(token)); }
		} SubscribedClientsChanged;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattLocalCharacteristic>, ptr<GattWriteRequestedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattLocalCharacteristic_adaptor::WriteRequested)->_add_WriteRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattLocalCharacteristic_adaptor::WriteRequested)->_remove_WriteRequested(token)); }
		} WriteRequested;
	};
	ptr<Foundation::IAsyncOperation<ptr<GattLocalDescriptorResult>>> CreateDescriptorAsync(const Platform::Guid& descriptorUuid, pptr<GattLocalDescriptorParameters> parameters) { Foundation::IAsyncOperation<GattLocalDescriptorResult*>* operation; hrcheck(X::get()->_CreateDescriptorAsync(descriptorUuid, parameters, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<Foundation::Collections::IVectorView<ptr<GattClientNotificationResult>>>>> NotifyValueAsync(pptr<Storage::Streams::IBuffer> value) { Foundation::IAsyncOperation<Foundation::Collections::IVectorView<GattClientNotificationResult*>*>* operation; hrcheck(X::get()->_NotifyValueAsync(value, &operation)); return from_abi(operation); }
	ptr<Foundation::IAsyncOperation<ptr<GattClientNotificationResult>>> NotifyValueAsync(pptr<Storage::Streams::IBuffer> value, pptr<GattSubscribedClient> subscribedClient) { Foundation::IAsyncOperation<GattClientNotificationResult*>* operation; hrcheck(X::get()->_NotifyValueForSubscribedClientAsync(value, subscribedClient, &operation)); return from_abi(operation); }
	IGattLocalCharacteristic_adaptor() {}
};
template<typename X> struct adapt<IGattLocalCharacteristic, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalCharacteristic_adaptor<X> { typedef adapt IGattLocalCharacteristic; };
struct IGattLocalCharacteristic : IGattLocalCharacteristic_raw, generate<IGattLocalCharacteristic> {};

// GattLocalCharacteristic
template<typename X> struct statics<GattLocalCharacteristic, X> : X {
	typedef typename X::root_type GattLocalCharacteristic;
};
struct GattLocalCharacteristic : generate<GattLocalCharacteristic> {
	using IGattLocalCharacteristic::NotifyValueAsync;
};

// IGattLocalDescriptorResult
struct IGattLocalDescriptorResult_raw : IInspectable {
	virtual STDMETHODIMP _get_Descriptor(GattLocalDescriptor* *value);
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
};
template<typename X> struct IGattLocalDescriptorResult_adaptor : X {
	union {
		struct : property {
			ptr<GattLocalDescriptor> get() { GattLocalDescriptor* value; hrcheck(enc(&IGattLocalDescriptorResult_adaptor::Descriptor)->_get_Descriptor(&value)); return from_abi(value); }
			ptr<GattLocalDescriptor> operator()() { return get(); }
			operator ptr<GattLocalDescriptor> () { return get(); }
			ptr<GattLocalDescriptor> operator->() { return get(); }
		} Descriptor;
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IGattLocalDescriptorResult_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
	};
	IGattLocalDescriptorResult_adaptor() {}
};
template<typename X> struct adapt<IGattLocalDescriptorResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptorResult_adaptor<X> { typedef adapt IGattLocalDescriptorResult; };
struct IGattLocalDescriptorResult : IGattLocalDescriptorResult_raw, generate<IGattLocalDescriptorResult> {};

// GattLocalDescriptorResult
template<typename X> struct statics<GattLocalDescriptorResult, X> : X {
	typedef typename X::root_type GattLocalDescriptorResult;
};
struct GattLocalDescriptorResult : generate<GattLocalDescriptorResult> {};

// IGattLocalDescriptor
struct IGattLocalDescriptor_raw : IInspectable {
	virtual STDMETHODIMP _get_Uuid(Platform::Guid *value);
	virtual STDMETHODIMP _get_StaticValue(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _get_ReadProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _get_WriteProtectionLevel(GattProtectionLevel *value);
	virtual STDMETHODIMP _add_ReadRequested(Foundation::TypedEventHandler<GattLocalDescriptor*, GattReadRequestedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_ReadRequested(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _add_WriteRequested(Foundation::TypedEventHandler<GattLocalDescriptor*, GattWriteRequestedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_WriteRequested(Foundation::EventRegistrationToken token);
};
template<typename X> struct IGattLocalDescriptor_adaptor : X {
	union {
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalDescriptor_adaptor::ReadProtectionLevel)->_get_ReadProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
		} ReadProtectionLevel;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattLocalDescriptor_adaptor::StaticValue)->_get_StaticValue(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
		} StaticValue;
		struct : property {
			Platform::Guid get() { Platform::Guid value; hrcheck(enc(&IGattLocalDescriptor_adaptor::Uuid)->_get_Uuid(&value)); return value; }
			Platform::Guid operator()() { return get(); }
			operator Platform::Guid () { return get(); }
		} Uuid;
		struct : property {
			GattProtectionLevel get() { GattProtectionLevel value; hrcheck(enc(&IGattLocalDescriptor_adaptor::WriteProtectionLevel)->_get_WriteProtectionLevel(&value)); return value; }
			GattProtectionLevel operator()() { return get(); }
			operator GattProtectionLevel () { return get(); }
		} WriteProtectionLevel;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattLocalDescriptor>, ptr<GattReadRequestedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattLocalDescriptor_adaptor::ReadRequested)->_add_ReadRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattLocalDescriptor_adaptor::ReadRequested)->_remove_ReadRequested(token)); }
		} ReadRequested;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattLocalDescriptor>, ptr<GattWriteRequestedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattLocalDescriptor_adaptor::WriteRequested)->_add_WriteRequested(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattLocalDescriptor_adaptor::WriteRequested)->_remove_WriteRequested(token)); }
		} WriteRequested;
	};
	IGattLocalDescriptor_adaptor() {}
};
template<typename X> struct adapt<IGattLocalDescriptor, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattLocalDescriptor_adaptor<X> { typedef adapt IGattLocalDescriptor; };
struct IGattLocalDescriptor : IGattLocalDescriptor_raw, generate<IGattLocalDescriptor> {};

// GattLocalDescriptor
template<typename X> struct statics<GattLocalDescriptor, X> : X {
	typedef typename X::root_type GattLocalDescriptor;
};
struct GattLocalDescriptor : generate<GattLocalDescriptor> {};

// IGattSubscribedClient
struct IGattSubscribedClient_raw : IInspectable {
	virtual STDMETHODIMP _get_Session(GattSession* *value);
	virtual STDMETHODIMP _get_MaxNotificationSize(unsigned short *value);
	virtual STDMETHODIMP _add_MaxNotificationSizeChanged(Foundation::TypedEventHandler<GattSubscribedClient*, IInspectable*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_MaxNotificationSizeChanged(Foundation::EventRegistrationToken token);
};
template<typename X> struct IGattSubscribedClient_adaptor : X {
	union {
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattSubscribedClient_adaptor::MaxNotificationSize)->_get_MaxNotificationSize(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} MaxNotificationSize;
		struct : property {
			ptr<GattSession> get() { GattSession* value; hrcheck(enc(&IGattSubscribedClient_adaptor::Session)->_get_Session(&value)); return from_abi(value); }
			ptr<GattSession> operator()() { return get(); }
			operator ptr<GattSession> () { return get(); }
			ptr<GattSession> operator->() { return get(); }
		} Session;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattSubscribedClient>, object>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattSubscribedClient_adaptor::MaxNotificationSizeChanged)->_add_MaxNotificationSizeChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattSubscribedClient_adaptor::MaxNotificationSizeChanged)->_remove_MaxNotificationSizeChanged(token)); }
		} MaxNotificationSizeChanged;
	};
	IGattSubscribedClient_adaptor() {}
};
template<typename X> struct adapt<IGattSubscribedClient, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattSubscribedClient_adaptor<X> { typedef adapt IGattSubscribedClient; };
struct IGattSubscribedClient : IGattSubscribedClient_raw, generate<IGattSubscribedClient> {};

// GattSubscribedClient
template<typename X> struct statics<GattSubscribedClient, X> : X {
	typedef typename X::root_type GattSubscribedClient;
};
struct GattSubscribedClient : generate<GattSubscribedClient> {};

// IGattReadRequestedEventArgs
struct IGattReadRequestedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Session(GattSession* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
	virtual STDMETHODIMP _GetRequestAsync(Foundation::IAsyncOperation<GattReadRequest*>* *operation);
};
template<typename X> struct IGattReadRequestedEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<GattSession> get() { GattSession* value; hrcheck(enc(&IGattReadRequestedEventArgs_adaptor::Session)->_get_Session(&value)); return from_abi(value); }
			ptr<GattSession> operator()() { return get(); }
			operator ptr<GattSession> () { return get(); }
			ptr<GattSession> operator->() { return get(); }
		} Session;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<ptr<GattReadRequest>>> GetRequestAsync() { Foundation::IAsyncOperation<GattReadRequest*>* operation; hrcheck(X::get()->_GetRequestAsync(&operation)); return from_abi(operation); }
	IGattReadRequestedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IGattReadRequestedEventArgs, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequestedEventArgs_adaptor<X> { typedef adapt IGattReadRequestedEventArgs; };
struct IGattReadRequestedEventArgs : IGattReadRequestedEventArgs_raw, generate<IGattReadRequestedEventArgs> {};

// GattReadRequestedEventArgs
template<typename X> struct statics<GattReadRequestedEventArgs, X> : X {
	typedef typename X::root_type GattReadRequestedEventArgs;
};
struct GattReadRequestedEventArgs : generate<GattReadRequestedEventArgs> {};

// IGattWriteRequestedEventArgs
struct IGattWriteRequestedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_Session(GattSession* *value);
	virtual STDMETHODIMP _GetDeferral(Foundation::Deferral* *value);
	virtual STDMETHODIMP _GetRequestAsync(Foundation::IAsyncOperation<GattWriteRequest*>* *operation);
};
template<typename X> struct IGattWriteRequestedEventArgs_adaptor : X {
	union {
		struct : property {
			ptr<GattSession> get() { GattSession* value; hrcheck(enc(&IGattWriteRequestedEventArgs_adaptor::Session)->_get_Session(&value)); return from_abi(value); }
			ptr<GattSession> operator()() { return get(); }
			operator ptr<GattSession> () { return get(); }
			ptr<GattSession> operator->() { return get(); }
		} Session;
	};
	ptr<Foundation::Deferral> GetDeferral() { Foundation::Deferral* value; hrcheck(X::get()->_GetDeferral(&value)); return from_abi(value); }
	ptr<Foundation::IAsyncOperation<ptr<GattWriteRequest>>> GetRequestAsync() { Foundation::IAsyncOperation<GattWriteRequest*>* operation; hrcheck(X::get()->_GetRequestAsync(&operation)); return from_abi(operation); }
	IGattWriteRequestedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IGattWriteRequestedEventArgs, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequestedEventArgs_adaptor<X> { typedef adapt IGattWriteRequestedEventArgs; };
struct IGattWriteRequestedEventArgs : IGattWriteRequestedEventArgs_raw, generate<IGattWriteRequestedEventArgs> {};

// GattWriteRequestedEventArgs
template<typename X> struct statics<GattWriteRequestedEventArgs, X> : X {
	typedef typename X::root_type GattWriteRequestedEventArgs;
};
struct GattWriteRequestedEventArgs : generate<GattWriteRequestedEventArgs> {};

// IGattClientNotificationResult2
struct IGattClientNotificationResult2_raw : IInspectable {
	virtual STDMETHODIMP _get_BytesSent(unsigned short *value);
};
template<typename X> struct IGattClientNotificationResult2_adaptor : X {
	union {
		struct : property {
			unsigned short get() { unsigned short value; hrcheck(enc(&IGattClientNotificationResult2_adaptor::BytesSent)->_get_BytesSent(&value)); return value; }
			unsigned short operator()() { return get(); }
			operator unsigned short () { return get(); }
		} BytesSent;
	};
	IGattClientNotificationResult2_adaptor() {}
};
template<typename X> struct adapt<IGattClientNotificationResult2, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult2_adaptor<X> { typedef adapt IGattClientNotificationResult2; };
struct IGattClientNotificationResult2 : IGattClientNotificationResult2_raw, generate<IGattClientNotificationResult2> {};

// IGattClientNotificationResult
struct IGattClientNotificationResult_raw : IInspectable {
	virtual STDMETHODIMP _get_SubscribedClient(GattSubscribedClient* *value);
	virtual STDMETHODIMP _get_Status(GattCommunicationStatus *value);
	virtual STDMETHODIMP _get_ProtocolError(Foundation::IReference<unsigned char>* *value);
};
template<typename X> struct IGattClientNotificationResult_adaptor : X {
	union {
		struct : property {
			ptr<Foundation::IReference<unsigned char>> get() { Foundation::IReference<unsigned char>* value; hrcheck(enc(&IGattClientNotificationResult_adaptor::ProtocolError)->_get_ProtocolError(&value)); return from_abi(value); }
			ptr<Foundation::IReference<unsigned char>> operator()() { return get(); }
			operator ptr<Foundation::IReference<unsigned char>> () { return get(); }
			ptr<Foundation::IReference<unsigned char>> operator->() { return get(); }
		} ProtocolError;
		struct : property {
			GattCommunicationStatus get() { GattCommunicationStatus value; hrcheck(enc(&IGattClientNotificationResult_adaptor::Status)->_get_Status(&value)); return value; }
			GattCommunicationStatus operator()() { return get(); }
			operator GattCommunicationStatus () { return get(); }
		} Status;
		struct : property {
			ptr<GattSubscribedClient> get() { GattSubscribedClient* value; hrcheck(enc(&IGattClientNotificationResult_adaptor::SubscribedClient)->_get_SubscribedClient(&value)); return from_abi(value); }
			ptr<GattSubscribedClient> operator()() { return get(); }
			operator ptr<GattSubscribedClient> () { return get(); }
			ptr<GattSubscribedClient> operator->() { return get(); }
		} SubscribedClient;
	};
	IGattClientNotificationResult_adaptor() {}
};
template<typename X> struct adapt<IGattClientNotificationResult, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattClientNotificationResult_adaptor<X> { typedef adapt IGattClientNotificationResult; };
struct IGattClientNotificationResult : IGattClientNotificationResult_raw, generate<IGattClientNotificationResult> {};

// GattClientNotificationResult
template<typename X> struct statics<GattClientNotificationResult, X> : X {
	typedef typename X::root_type GattClientNotificationResult;
};
struct GattClientNotificationResult : generate<GattClientNotificationResult> {};

// IGattReadRequest
struct IGattReadRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_Offset(unsigned *value);
	virtual STDMETHODIMP _get_Length(unsigned *value);
	virtual STDMETHODIMP _get_State(GattRequestState *value);
	virtual STDMETHODIMP _add_StateChanged(Foundation::TypedEventHandler<GattReadRequest*, GattRequestStateChangedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_StateChanged(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _RespondWithValue(Storage::Streams::IBuffer* value);
	virtual STDMETHODIMP _RespondWithProtocolError(unsigned char protocolError);
};
template<typename X> struct IGattReadRequest_adaptor : X {
	union {
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IGattReadRequest_adaptor::Length)->_get_Length(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} Length;
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IGattReadRequest_adaptor::Offset)->_get_Offset(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} Offset;
		struct : property {
			GattRequestState get() { GattRequestState value; hrcheck(enc(&IGattReadRequest_adaptor::State)->_get_State(&value)); return value; }
			GattRequestState operator()() { return get(); }
			operator GattRequestState () { return get(); }
		} State;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattReadRequest>, ptr<GattRequestStateChangedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattReadRequest_adaptor::StateChanged)->_add_StateChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattReadRequest_adaptor::StateChanged)->_remove_StateChanged(token)); }
		} StateChanged;
	};
	void RespondWithValue(pptr<Storage::Streams::IBuffer> value) { hrcheck(X::get()->_RespondWithValue(value)); }
	void RespondWithProtocolError(unsigned char protocolError) { hrcheck(X::get()->_RespondWithProtocolError(protocolError)); }
	IGattReadRequest_adaptor() {}
};
template<typename X> struct adapt<IGattReadRequest, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattReadRequest_adaptor<X> { typedef adapt IGattReadRequest; };
struct IGattReadRequest : IGattReadRequest_raw, generate<IGattReadRequest> {};

// GattReadRequest
template<typename X> struct statics<GattReadRequest, X> : X {
	typedef typename X::root_type GattReadRequest;
};
struct GattReadRequest : generate<GattReadRequest> {};

// IGattRequestStateChangedEventArgs
struct IGattRequestStateChangedEventArgs_raw : IInspectable {
	virtual STDMETHODIMP _get_State(GattRequestState *value);
	virtual STDMETHODIMP _get_Error(BluetoothError *value);
};
template<typename X> struct IGattRequestStateChangedEventArgs_adaptor : X {
	union {
		struct : property {
			BluetoothError get() { BluetoothError value; hrcheck(enc(&IGattRequestStateChangedEventArgs_adaptor::Error)->_get_Error(&value)); return value; }
			BluetoothError operator()() { return get(); }
			operator BluetoothError () { return get(); }
		} Error;
		struct : property {
			GattRequestState get() { GattRequestState value; hrcheck(enc(&IGattRequestStateChangedEventArgs_adaptor::State)->_get_State(&value)); return value; }
			GattRequestState operator()() { return get(); }
			operator GattRequestState () { return get(); }
		} State;
	};
	IGattRequestStateChangedEventArgs_adaptor() {}
};
template<typename X> struct adapt<IGattRequestStateChangedEventArgs, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattRequestStateChangedEventArgs_adaptor<X> { typedef adapt IGattRequestStateChangedEventArgs; };
struct IGattRequestStateChangedEventArgs : IGattRequestStateChangedEventArgs_raw, generate<IGattRequestStateChangedEventArgs> {};

// GattRequestStateChangedEventArgs
template<typename X> struct statics<GattRequestStateChangedEventArgs, X> : X {
	typedef typename X::root_type GattRequestStateChangedEventArgs;
};
struct GattRequestStateChangedEventArgs : generate<GattRequestStateChangedEventArgs> {};

// IGattWriteRequest
struct IGattWriteRequest_raw : IInspectable {
	virtual STDMETHODIMP _get_Value(Storage::Streams::IBuffer* *value);
	virtual STDMETHODIMP _get_Offset(unsigned *value);
	virtual STDMETHODIMP _get_Option(GattWriteOption *value);
	virtual STDMETHODIMP _get_State(GattRequestState *value);
	virtual STDMETHODIMP _add_StateChanged(Foundation::TypedEventHandler<GattWriteRequest*, GattRequestStateChangedEventArgs*>* handler, Foundation::EventRegistrationToken *token);
	virtual STDMETHODIMP _remove_StateChanged(Foundation::EventRegistrationToken token);
	virtual STDMETHODIMP _Respond();
	virtual STDMETHODIMP _RespondWithProtocolError(unsigned char protocolError);
};
template<typename X> struct IGattWriteRequest_adaptor : X {
	union {
		struct : property {
			unsigned get() { unsigned value; hrcheck(enc(&IGattWriteRequest_adaptor::Offset)->_get_Offset(&value)); return value; }
			unsigned operator()() { return get(); }
			operator unsigned () { return get(); }
		} Offset;
		struct : property {
			GattWriteOption get() { GattWriteOption value; hrcheck(enc(&IGattWriteRequest_adaptor::Option)->_get_Option(&value)); return value; }
			GattWriteOption operator()() { return get(); }
			operator GattWriteOption () { return get(); }
		} Option;
		struct : property {
			GattRequestState get() { GattRequestState value; hrcheck(enc(&IGattWriteRequest_adaptor::State)->_get_State(&value)); return value; }
			GattRequestState operator()() { return get(); }
			operator GattRequestState () { return get(); }
		} State;
		struct : property {
			ptr<Storage::Streams::IBuffer> get() { Storage::Streams::IBuffer* value; hrcheck(enc(&IGattWriteRequest_adaptor::Value)->_get_Value(&value)); return from_abi(value); }
			ptr<Storage::Streams::IBuffer> operator()() { return get(); }
			operator ptr<Storage::Streams::IBuffer> () { return get(); }
			ptr<Storage::Streams::IBuffer> operator->() { return get(); }
		} Value;
		struct : property {
			Foundation::EventRegistrationToken operator+=(handler_ref<Foundation::TypedEventHandler<ptr<GattWriteRequest>, ptr<GattRequestStateChangedEventArgs>>> handler) { Foundation::EventRegistrationToken token; hrcheck(enc(&IGattWriteRequest_adaptor::StateChanged)->_add_StateChanged(to_abi(handler), &token)); return token; }
			void operator-=(const Foundation::EventRegistrationToken& token) { hrcheck(enc(&IGattWriteRequest_adaptor::StateChanged)->_remove_StateChanged(token)); }
		} StateChanged;
	};
	void Respond() { hrcheck(X::get()->_Respond()); }
	void RespondWithProtocolError(unsigned char protocolError) { hrcheck(X::get()->_RespondWithProtocolError(protocolError)); }
	IGattWriteRequest_adaptor() {}
};
template<typename X> struct adapt<IGattWriteRequest, X> : Windows::Devices::Bluetooth::GenericAttributeProfile::IGattWriteRequest_adaptor<X> { typedef adapt IGattWriteRequest; };
struct IGattWriteRequest : IGattWriteRequest_raw, generate<IGattWriteRequest> {};

// GattWriteRequest
template<typename X> struct statics<GattWriteRequest, X> : X {
	typedef typename X::root_type GattWriteRequest;
};
struct GattWriteRequest : generate<GattWriteRequest> {};
}}}}
} // namespace iso_winrt
